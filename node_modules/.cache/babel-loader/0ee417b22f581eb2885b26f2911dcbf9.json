{"ast":null,"code":"import { assertNever } from '../utils/assert-never';\nimport { AbortedBeaconError, UnknownBeaconError, NetworkNotSupportedBeaconError, NoAddressBeaconError, NoPrivateKeyBeaconError, NotGrantedBeaconError, ParametersInvalidBeaconError, TooManyOperationsBeaconError, TransactionInvalidBeaconError, SignatureTypeNotSupportedBeaconError, BroadcastBeaconError // EncryptionTypeNotSupportedBeaconError\n} from '..';\nimport { BeaconErrorType } from '@airgap/beacon-types';\n/**\n * @category Error\n */\n\nexport class BeaconError {\n  constructor(errorType, message) {\n    this.name = 'BeaconError';\n    this.title = 'Error'; // Visible in the UI\n\n    this.message = `[${errorType}]:${message}`;\n    this.description = message;\n  }\n\n  get fullDescription() {\n    return {\n      description: this.description\n    };\n  }\n\n  static getError(errorType, errorData) {\n    switch (errorType) {\n      case BeaconErrorType.BROADCAST_ERROR:\n        return new BroadcastBeaconError();\n\n      case BeaconErrorType.NETWORK_NOT_SUPPORTED:\n        return new NetworkNotSupportedBeaconError();\n\n      case BeaconErrorType.NO_ADDRESS_ERROR:\n        return new NoAddressBeaconError();\n\n      case BeaconErrorType.NO_PRIVATE_KEY_FOUND_ERROR:\n        return new NoPrivateKeyBeaconError();\n\n      case BeaconErrorType.NOT_GRANTED_ERROR:\n        return new NotGrantedBeaconError();\n\n      case BeaconErrorType.PARAMETERS_INVALID_ERROR:\n        return new ParametersInvalidBeaconError();\n\n      case BeaconErrorType.TOO_MANY_OPERATIONS:\n        return new TooManyOperationsBeaconError();\n\n      case BeaconErrorType.TRANSACTION_INVALID_ERROR:\n        return new TransactionInvalidBeaconError(errorData);\n\n      case BeaconErrorType.SIGNATURE_TYPE_NOT_SUPPORTED:\n        return new SignatureTypeNotSupportedBeaconError();\n      // case BeaconErrorType.ENCRYPTION_TYPE_NOT_SUPPORTED:\n      //   return new EncryptionTypeNotSupportedBeaconError()\n\n      case BeaconErrorType.ABORTED_ERROR:\n        return new AbortedBeaconError();\n\n      case BeaconErrorType.UNKNOWN_ERROR:\n        return new UnknownBeaconError();\n\n      default:\n        assertNever(errorType);\n    }\n  }\n\n}","map":{"version":3,"sources":["../../../src/errors/BeaconError.ts"],"names":[],"mappings":"AAAA,SAAS,WAAT,QAA4B,uBAA5B;AACA,SACE,kBADF,EAEE,kBAFF,EAGE,8BAHF,EAIE,oBAJF,EAKE,uBALF,EAME,qBANF,EAOE,4BAPF,EAQE,4BARF,EASE,6BATF,EAUE,oCAVF,EAWE,oBAXF,CAYE;AAZF,OAaO,IAbP;AAcA,SAAS,eAAT,QAAgC,sBAAhC;AAEA;;AAEG;;AACH,OAAM,MAAgB,WAAhB,CAA2B;EAW/B,WAAA,CAAY,SAAZ,EAAwC,OAAxC,EAAuD;IAVhD,KAAA,IAAA,GAAe,aAAf;IAGA,KAAA,KAAA,GAAgB,OAAhB,CAOgD,CAPxB;;IAQ7B,KAAK,OAAL,GAAe,IAAI,SAAS,KAAK,OAAO,EAAxC;IACA,KAAK,WAAL,GAAmB,OAAnB;EACD;;EAPyB,IAAf,eAAe,GAAA;IACxB,OAAO;MAAE,WAAW,EAAE,KAAK;IAApB,CAAP;EACD;;EAOqB,OAAR,QAAQ,CAAC,SAAD,EAA6B,SAA7B,EAA+C;IACnE,QAAQ,SAAR;MACE,KAAK,eAAe,CAAC,eAArB;QACE,OAAO,IAAI,oBAAJ,EAAP;;MACF,KAAK,eAAe,CAAC,qBAArB;QACE,OAAO,IAAI,8BAAJ,EAAP;;MACF,KAAK,eAAe,CAAC,gBAArB;QACE,OAAO,IAAI,oBAAJ,EAAP;;MACF,KAAK,eAAe,CAAC,0BAArB;QACE,OAAO,IAAI,uBAAJ,EAAP;;MACF,KAAK,eAAe,CAAC,iBAArB;QACE,OAAO,IAAI,qBAAJ,EAAP;;MACF,KAAK,eAAe,CAAC,wBAArB;QACE,OAAO,IAAI,4BAAJ,EAAP;;MACF,KAAK,eAAe,CAAC,mBAArB;QACE,OAAO,IAAI,4BAAJ,EAAP;;MACF,KAAK,eAAe,CAAC,yBAArB;QACE,OAAO,IAAI,6BAAJ,CAAkC,SAAlC,CAAP;;MACF,KAAK,eAAe,CAAC,4BAArB;QACE,OAAO,IAAI,oCAAJ,EAAP;MACF;MACA;;MACA,KAAK,eAAe,CAAC,aAArB;QACE,OAAO,IAAI,kBAAJ,EAAP;;MACF,KAAK,eAAe,CAAC,aAArB;QACE,OAAO,IAAI,kBAAJ,EAAP;;MACF;QACE,WAAW,CAAC,SAAD,CAAX;IA1BJ;EA4BD;;AA7C8B","sourceRoot":"","sourcesContent":["import { assertNever } from '../utils/assert-never';\nimport { AbortedBeaconError, UnknownBeaconError, NetworkNotSupportedBeaconError, NoAddressBeaconError, NoPrivateKeyBeaconError, NotGrantedBeaconError, ParametersInvalidBeaconError, TooManyOperationsBeaconError, TransactionInvalidBeaconError, SignatureTypeNotSupportedBeaconError, BroadcastBeaconError\n// EncryptionTypeNotSupportedBeaconError\n } from '..';\nimport { BeaconErrorType } from '@airgap/beacon-types';\n/**\n * @category Error\n */\nexport class BeaconError {\n    constructor(errorType, message) {\n        this.name = 'BeaconError';\n        this.title = 'Error'; // Visible in the UI\n        this.message = `[${errorType}]:${message}`;\n        this.description = message;\n    }\n    get fullDescription() {\n        return { description: this.description };\n    }\n    static getError(errorType, errorData) {\n        switch (errorType) {\n            case BeaconErrorType.BROADCAST_ERROR:\n                return new BroadcastBeaconError();\n            case BeaconErrorType.NETWORK_NOT_SUPPORTED:\n                return new NetworkNotSupportedBeaconError();\n            case BeaconErrorType.NO_ADDRESS_ERROR:\n                return new NoAddressBeaconError();\n            case BeaconErrorType.NO_PRIVATE_KEY_FOUND_ERROR:\n                return new NoPrivateKeyBeaconError();\n            case BeaconErrorType.NOT_GRANTED_ERROR:\n                return new NotGrantedBeaconError();\n            case BeaconErrorType.PARAMETERS_INVALID_ERROR:\n                return new ParametersInvalidBeaconError();\n            case BeaconErrorType.TOO_MANY_OPERATIONS:\n                return new TooManyOperationsBeaconError();\n            case BeaconErrorType.TRANSACTION_INVALID_ERROR:\n                return new TransactionInvalidBeaconError(errorData);\n            case BeaconErrorType.SIGNATURE_TYPE_NOT_SUPPORTED:\n                return new SignatureTypeNotSupportedBeaconError();\n            // case BeaconErrorType.ENCRYPTION_TYPE_NOT_SUPPORTED:\n            //   return new EncryptionTypeNotSupportedBeaconError()\n            case BeaconErrorType.ABORTED_ERROR:\n                return new AbortedBeaconError();\n            case BeaconErrorType.UNKNOWN_ERROR:\n                return new UnknownBeaconError();\n            default:\n                assertNever(errorType);\n        }\n    }\n}\n//# sourceMappingURL=BeaconError.js.map"]},"metadata":{},"sourceType":"module"}