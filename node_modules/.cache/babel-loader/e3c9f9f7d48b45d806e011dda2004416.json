{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { defaultValues } from '@airgap/beacon-types';\n/**\n * @internalapi\n *\n * A storage that can be used in the browser\n */\n\nexport class LocalStorage {\n  constructor(prefix) {\n    this.prefix = prefix;\n  }\n\n  static isSupported() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Promise.resolve(Boolean(typeof window !== 'undefined') && Boolean(window.localStorage));\n    });\n  }\n\n  get(key) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const value = localStorage.getItem(this.getPrefixedKey(key));\n\n      if (!value) {\n        if (typeof defaultValues[key] === 'object') {\n          return JSON.parse(JSON.stringify(defaultValues[key]));\n        } else {\n          return defaultValues[key];\n        }\n      } else {\n        try {\n          return JSON.parse(value);\n        } catch (jsonParseError) {\n          return value; // TODO: Validate storage\n        }\n      }\n    });\n  }\n\n  set(key, value) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (typeof value === 'string') {\n        return localStorage.setItem(this.getPrefixedKey(key), value);\n      } else {\n        return localStorage.setItem(this.getPrefixedKey(key), JSON.stringify(value));\n      }\n    });\n  }\n\n  delete(key) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return Promise.resolve(localStorage.removeItem(this.getPrefixedKey(key)));\n    });\n  }\n\n  getPrefixedKey(key) {\n    return this.prefix ? `${this.prefix}-${key}` : key;\n  }\n\n}","map":{"version":3,"sources":["../../../src/storage/LocalStorage.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAoD,aAApD,QAAyE,sBAAzE;AAEA;;;;AAIG;;AACH,OAAM,MAAO,YAAP,CAAmB;EACvB,WAAA,CAA6B,MAA7B,EAA4C;IAAf,KAAA,MAAA,GAAA,MAAA;EAAmB;;EACjB,OAAX,WAAW,GAAA;;MAC7B,OAAO,OAAO,CAAC,OAAR,CAAgB,OAAO,CAAC,OAAO,MAAP,KAAkB,WAAnB,CAAP,IAA0C,OAAO,CAAC,MAAM,CAAC,YAAR,CAAjE,CAAP;IACD,C;EAAA;;EAEY,GAAG,CAAuB,GAAvB,EAA6B;;MAC3C,MAAM,KAAK,GAAG,YAAY,CAAC,OAAb,CAAqB,KAAK,cAAL,CAAoB,GAApB,CAArB,CAAd;;MACA,IAAI,CAAC,KAAL,EAAY;QACV,IAAI,OAAO,aAAa,CAAC,GAAD,CAApB,KAA8B,QAAlC,EAA4C;UAC1C,OAAO,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,SAAL,CAAe,aAAa,CAAC,GAAD,CAA5B,CAAX,CAAP;QACD,CAFD,MAEO;UACL,OAAO,aAAa,CAAC,GAAD,CAApB;QACD;MACF,CAND,MAMO;QACL,IAAI;UACF,OAAO,IAAI,CAAC,KAAL,CAAW,KAAX,CAAP;QACD,CAFD,CAEE,OAAO,cAAP,EAAuB;UACvB,OAAO,KAAP,CADuB,CACiB;QACzC;MACF;IACF,C;EAAA;;EAEY,GAAG,CAAuB,GAAvB,EAA+B,KAA/B,EAA6D;;MAC3E,IAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;QAC7B,OAAO,YAAY,CAAC,OAAb,CAAqB,KAAK,cAAL,CAAoB,GAApB,CAArB,EAA+C,KAA/C,CAAP;MACD,CAFD,MAEO;QACL,OAAO,YAAY,CAAC,OAAb,CAAqB,KAAK,cAAL,CAAoB,GAApB,CAArB,EAA+C,IAAI,CAAC,SAAL,CAAe,KAAf,CAA/C,CAAP;MACD;IACF,C;EAAA;;EAEY,MAAM,CAAuB,GAAvB,EAA6B;;MAC9C,OAAO,OAAO,CAAC,OAAR,CAAgB,YAAY,CAAC,UAAb,CAAwB,KAAK,cAAL,CAAoB,GAApB,CAAxB,CAAhB,CAAP;IACD,C;EAAA;;EAEO,cAAc,CAAC,GAAD,EAAY;IAChC,OAAO,KAAK,MAAL,GAAc,GAAG,KAAK,MAAM,IAAI,GAAG,EAAnC,GAAwC,GAA/C;EACD;;AArCsB","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defaultValues } from '@airgap/beacon-types';\n/**\n * @internalapi\n *\n * A storage that can be used in the browser\n */\nexport class LocalStorage {\n    constructor(prefix) {\n        this.prefix = prefix;\n    }\n    static isSupported() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.resolve(Boolean(typeof window !== 'undefined') && Boolean(window.localStorage));\n        });\n    }\n    get(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = localStorage.getItem(this.getPrefixedKey(key));\n            if (!value) {\n                if (typeof defaultValues[key] === 'object') {\n                    return JSON.parse(JSON.stringify(defaultValues[key]));\n                }\n                else {\n                    return defaultValues[key];\n                }\n            }\n            else {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (jsonParseError) {\n                    return value; // TODO: Validate storage\n                }\n            }\n        });\n    }\n    set(key, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof value === 'string') {\n                return localStorage.setItem(this.getPrefixedKey(key), value);\n            }\n            else {\n                return localStorage.setItem(this.getPrefixedKey(key), JSON.stringify(value));\n            }\n        });\n    }\n    delete(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.resolve(localStorage.removeItem(this.getPrefixedKey(key)));\n        });\n    }\n    getPrefixedKey(key) {\n        return this.prefix ? `${this.prefix}-${key}` : key;\n    }\n}\n//# sourceMappingURL=LocalStorage.js.map"]},"metadata":{},"sourceType":"module"}