{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function sequenceEqual(compareTo, comparator) {\n  return function (source) {\n    return source.lift(new SequenceEqualOperator(compareTo, comparator));\n  };\n}\n\nvar SequenceEqualOperator = /*@__PURE__*/function () {\n  function SequenceEqualOperator(compareTo, comparator) {\n    this.compareTo = compareTo;\n    this.comparator = comparator;\n  }\n\n  SequenceEqualOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n  };\n\n  return SequenceEqualOperator;\n}();\n\nexport { SequenceEqualOperator };\n\nvar SequenceEqualSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SequenceEqualSubscriber, _super);\n\n  function SequenceEqualSubscriber(destination, compareTo, comparator) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.compareTo = compareTo;\n    _this.comparator = comparator;\n    _this._a = [];\n    _this._b = [];\n    _this._oneComplete = false;\n\n    _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\n\n    return _this;\n  }\n\n  SequenceEqualSubscriber.prototype._next = function (value) {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n\n      this.checkValues();\n    }\n  };\n\n  SequenceEqualSubscriber.prototype._complete = function () {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n\n    this.unsubscribe();\n  };\n\n  SequenceEqualSubscriber.prototype.checkValues = function () {\n    var _c = this,\n        _a = _c._a,\n        _b = _c._b,\n        comparator = _c.comparator;\n\n    while (_a.length > 0 && _b.length > 0) {\n      var a = _a.shift();\n\n      var b = _b.shift();\n\n      var areEqual = false;\n\n      try {\n        areEqual = comparator ? comparator(a, b) : a === b;\n      } catch (e) {\n        this.destination.error(e);\n      }\n\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  };\n\n  SequenceEqualSubscriber.prototype.emit = function (value) {\n    var destination = this.destination;\n    destination.next(value);\n    destination.complete();\n  };\n\n  SequenceEqualSubscriber.prototype.nextB = function (value) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n\n      this.checkValues();\n    }\n  };\n\n  SequenceEqualSubscriber.prototype.completeB = function () {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  };\n\n  return SequenceEqualSubscriber;\n}(Subscriber);\n\nexport { SequenceEqualSubscriber };\n\nvar SequenceEqualCompareToSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SequenceEqualCompareToSubscriber, _super);\n\n  function SequenceEqualCompareToSubscriber(destination, parent) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.parent = parent;\n    return _this;\n  }\n\n  SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n    this.parent.nextB(value);\n  };\n\n  SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n    this.parent.error(err);\n    this.unsubscribe();\n  };\n\n  SequenceEqualCompareToSubscriber.prototype._complete = function () {\n    this.parent.completeB();\n    this.unsubscribe();\n  };\n\n  return SequenceEqualCompareToSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/sequenceEqual.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function sequenceEqual(compareTo, comparator) {\n    return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparator)); };\n}\nvar SequenceEqualOperator = /*@__PURE__*/ (function () {\n    function SequenceEqualOperator(compareTo, comparator) {\n        this.compareTo = compareTo;\n        this.comparator = comparator;\n    }\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n    };\n    return SequenceEqualOperator;\n}());\nexport { SequenceEqualOperator };\nvar SequenceEqualSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparator) {\n        var _this = _super.call(this, destination) || this;\n        _this.compareTo = compareTo;\n        _this.comparator = comparator;\n        _this._a = [];\n        _this._b = [];\n        _this._oneComplete = false;\n        _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\n        return _this;\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n        this.unsubscribe();\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparator = _c.comparator;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            try {\n                areEqual = comparator ? comparator(a, b) : a === b;\n            }\n            catch (e) {\n                this.destination.error(e);\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype.completeB = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber));\nexport { SequenceEqualSubscriber };\nvar SequenceEqualCompareToSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        return _this;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n        this.unsubscribe();\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent.completeB();\n        this.unsubscribe();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber));\n//# sourceMappingURL=sequenceEqual.js.map\n"]},"metadata":{},"sourceType":"module"}