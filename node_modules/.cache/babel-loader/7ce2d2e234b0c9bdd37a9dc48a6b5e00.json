{"ast":null,"code":"\"use strict\"; // Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar QUOTA = 65536;\n\nvar BrowserRandomSource =\n/** @class */\nfunction () {\n  function BrowserRandomSource() {\n    this.isAvailable = false;\n    this.isInstantiated = false;\n    var browserCrypto = typeof self !== 'undefined' ? self.crypto || self.msCrypto // IE11 has msCrypto\n    : null;\n\n    if (browserCrypto && browserCrypto.getRandomValues) {\n      this._crypto = browserCrypto;\n      this.isAvailable = true;\n      this.isInstantiated = true;\n    }\n  }\n\n  BrowserRandomSource.prototype.randomBytes = function (length) {\n    if (!this.isAvailable || !this._crypto) {\n      throw new Error(\"Browser random byte generator is not available.\");\n    }\n\n    var out = new Uint8Array(length);\n\n    for (var i = 0; i < out.length; i += QUOTA) {\n      this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n    }\n\n    return out;\n  };\n\n  return BrowserRandomSource;\n}();\n\nexports.BrowserRandomSource = BrowserRandomSource;","map":{"version":3,"sources":["../../source/browser.ts"],"names":[],"mappings":"cAAA;AACA;;;;;AAIA,IAAM,KAAK,GAAG,KAAd;;AAEA,IAAA,mBAAA;AAAA;AAAA,YAAA;EAMI,SAAA,mBAAA,GAAA;IALA,KAAA,WAAA,GAAc,KAAd;IACA,KAAA,cAAA,GAAiB,KAAjB;IAKI,IAAM,aAAa,GAAG,OAAO,IAAP,KAAgB,WAAhB,GACf,IAAI,CAAC,MAAL,IAAgB,IAA2B,CAAC,QAD7B,CACuC;IADvC,EAEhB,IAFN;;IAIA,IAAI,aAAa,IAAI,aAAa,CAAC,eAAnC,EAAoD;MAChD,KAAK,OAAL,GAAe,aAAf;MACA,KAAK,WAAL,GAAmB,IAAnB;MACA,KAAK,cAAL,GAAsB,IAAtB;IACH;EACJ;;EAED,mBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,MAAZ,EAA0B;IACtB,IAAI,CAAC,KAAK,WAAN,IAAqB,CAAC,KAAK,OAA/B,EAAwC;MACpC,MAAM,IAAI,KAAJ,CAAU,iDAAV,CAAN;IACH;;IACD,IAAM,GAAG,GAAG,IAAI,UAAJ,CAAe,MAAf,CAAZ;;IACA,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAAG,CAAC,MAAxB,EAAgC,CAAC,IAAI,KAArC,EAA4C;MACxC,KAAK,OAAL,CAAa,eAAb,CAA6B,GAAG,CAAC,QAAJ,CAAa,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,GAAG,CAAC,MAAJ,GAAa,CAAtB,EAAyB,KAAzB,CAApB,CAA7B;IACH;;IACD,OAAO,GAAP;EACH,CATD;;EAUJ,OAAA,mBAAA;AAAC,CA5BD,EAAA;;AAAa,OAAA,CAAA,mBAAA,GAAA,mBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar QUOTA = 65536;\nvar BrowserRandomSource = /** @class */ (function () {\n    function BrowserRandomSource() {\n        this.isAvailable = false;\n        this.isInstantiated = false;\n        var browserCrypto = typeof self !== 'undefined'\n            ? (self.crypto || self.msCrypto) // IE11 has msCrypto\n            : null;\n        if (browserCrypto && browserCrypto.getRandomValues) {\n            this._crypto = browserCrypto;\n            this.isAvailable = true;\n            this.isInstantiated = true;\n        }\n    }\n    BrowserRandomSource.prototype.randomBytes = function (length) {\n        if (!this.isAvailable || !this._crypto) {\n            throw new Error(\"Browser random byte generator is not available.\");\n        }\n        var out = new Uint8Array(length);\n        for (var i = 0; i < out.length; i += QUOTA) {\n            this._crypto.getRandomValues(out.subarray(i, i + Math.min(out.length - i, QUOTA)));\n        }\n        return out;\n    };\n    return BrowserRandomSource;\n}());\nexports.BrowserRandomSource = BrowserRandomSource;\n//# sourceMappingURL=browser.js.map"]},"metadata":{},"sourceType":"script"}