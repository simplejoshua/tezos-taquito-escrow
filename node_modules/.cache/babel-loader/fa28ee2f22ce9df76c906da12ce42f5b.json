{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime, periodOrScheduler, scheduler) {\n  if (dueTime === void 0) {\n    dueTime = 0;\n  }\n\n  var period = -1;\n\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(function (subscriber) {\n    var due = isNumeric(dueTime) ? dueTime : +dueTime - scheduler.now();\n    return scheduler.schedule(dispatch, due, {\n      index: 0,\n      period: period,\n      subscriber: subscriber\n    });\n  });\n}\n\nfunction dispatch(state) {\n  var index = state.index,\n      period = state.period,\n      subscriber = state.subscriber;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}","map":{"version":3,"sources":["../../../src/internal/observable/timer.ts"],"names":[],"mappings":"AAAA;AAEA,SAAS,UAAT,QAAsB,eAAtB;AACA,SAAS,KAAT,QAAoB,oBAApB;AACA,SAAS,SAAT,QAAsB,mBAAtB;AAqDA,SAAM,WAAN,QAAsB,qBAAtB;AAAsB,OAAA,SAAA,KAAA,CAAA,OAAA,EAAA,iBAAA,EAA0B,SAA1B,EAA0B;EAG9C,IAAI,OAAM,KAAM,KAAA,CAAhB,EAAgB;IACZ,OAAA,GAAU,CAAV;EACF;;EACD,IAAA,MAAA,GAAA,CAAA,CAAA;;MAAM,SAAI,CAAA,iBAAA,C,EAAY;IACrB,MAAA,GAAS,MAAG,CAAA,iBAAA,CAAH,GAA4B,CAA5B,IAA4B,CAA5B,IAA4B,MAAA,CAAA,iBAAA,CAArC;EACD,C,MAEI,IAAA,WAAY,CAAA,iBAAA,CAAZ,EAAwB;IAC3B,SAAS,GAAG,iBAAZ;EACD;;EAED,IAAA,CAAA,WAAW,CAAA,SAAA,CAAX,EAAsB;IACpB,SAAS,GAAG,KAAZ;EACE;;SACA,IAAG,UAAH,CAAc,UAAU,UAAV,EAAiB;IAEjC,IAAA,GAAO,GAAA,SAAU,CAAA,OAAA,CAAV,GACL,OADK,GAEJ,CAAA,OAAA,GAAA,SAAA,CAAA,GAAA,EAFH;IAGC,OAAA,SAAA,CAAA,QAAA,CAAA,QAAA,EAAA,GAAA,EAAA;MACJ,KAAA,EAAA,CADI;MACJ,MAAA,EAAA,MADI;MACJ,UAAA,EAAA;IADI,CAAA,CAAA;EAUK,CAfJ,C;AAgBJ;;AAEA,SAAI,QAAJ,CAAc,KAAd,EAAqB;MACnB,KAAA,GAAO,KAAA,CAAA,K;MAAA,MAAA,GAAA,KAAA,CAAA,M;MAAA,UAAA,GAAA,KAAA,CAAA,U;EACR,UAAA,CAAA,IAAA,CAAA,KAAA;;MAAM,UAAI,CAAM,M,EAAO;IACtB;EACD,C,MAEI,IAAC,MAAQ,KAAK,CAAA,CAAd,EAAmB;IACpB,OAAC,UAAgB,CAAA,QAAhB,EAAD;EACL","sourcesContent":["/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function timer(dueTime, periodOrScheduler, scheduler) {\n    if (dueTime === void 0) {\n        dueTime = 0;\n    }\n    var period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(function (subscriber) {\n        var due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period: period, subscriber: subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    var index = state.index, period = state.period, subscriber = state.subscriber;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map\n"]},"metadata":{},"sourceType":"module"}