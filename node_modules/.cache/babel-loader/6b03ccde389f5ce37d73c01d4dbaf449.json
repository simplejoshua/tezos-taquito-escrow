{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n\nvar SubscribeOnObservable = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SubscribeOnObservable, _super);\n\n  function SubscribeOnObservable(source, delayTime, scheduler) {\n    if (delayTime === void 0) {\n      delayTime = 0;\n    }\n\n    if (scheduler === void 0) {\n      scheduler = asap;\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.source = source;\n    _this.delayTime = delayTime;\n    _this.scheduler = scheduler;\n\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      _this.delayTime = 0;\n    }\n\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      _this.scheduler = asap;\n    }\n\n    return _this;\n  }\n\n  SubscribeOnObservable.create = function (source, delay, scheduler) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (scheduler === void 0) {\n      scheduler = asap;\n    }\n\n    return new SubscribeOnObservable(source, delay, scheduler);\n  };\n\n  SubscribeOnObservable.dispatch = function (arg) {\n    var source = arg.source,\n        subscriber = arg.subscriber;\n    return this.add(source.subscribe(subscriber));\n  };\n\n  SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n    var delay = this.delayTime;\n    var source = this.source;\n    var scheduler = this.scheduler;\n    return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n      source: source,\n      subscriber: subscriber\n    });\n  };\n\n  return SubscribeOnObservable;\n}(Observable);\n\nexport { SubscribeOnObservable };","map":{"version":3,"sources":["../../../src/internal/observable/SubscribeOnObservable.ts"],"names":[],"mappings":";AAGA,OAAO,KAAE,OAAT,MAAqB,OAArB;AACA,SAAS,UAAT,QAAqB,eAArB;AACA,SAAS,IAAT,QAAoB,mBAApB;AAYA,SAAA,SAAA,QAAA,mBAAA;;IAA8C,qBAAA,GAAA,aAAA,UAAa,MAAb,EAAa;EAYzD,OAAA,CAAA,SAAA,CAAA,qBAAA,EACoB,MADpB;;EACoB,SAAA,qBAAA,CAAA,MAAA,EAAA,SAAA,EAAqB,SAArB,EAAqB;IACrB,IAAA,SAAA,KAAA,KAAA,CAAA,EAAA;MAFpB,SAGE,GAAA,CAHF;IAAmB;;IACC,IAAA,SAAA,KAAA,KAAA,CAAA,EAAA;MACA,SAAA,GAAA,IAAA;IAElB;;QACE,KAAI,GAAC,MAAA,CAAS,IAAT,CAAc,IAAd,KAAc,I;;IACpB,KAAA,CAAA,MAAA,GAAA,MAAA;IACD,KAAK,CAAA,SAAL,GAAkB,SAAlB;IACE,KAAA,CAAA,SAAA,GAAK,SAAL;;IACD,IAAA,CAAA,SAAA,CAAA,SAAA,CAAA,IAAA,SAAA,GAAA,CAAA,EAAA;;IACF;;IApBM,IAAA,CAAA,SAAA,IAAA,OAAP,SAAA,CAAA,QAAO,KAAiC,UAAjC,EAAoD;MAAnB,KAAA,CAAA,SAAA,GAAA,IAAA;IAAmB;;IACzD,OAAO,KAAP;EACD;;EAGM,qBAAA,CAAA,MAAA,GAAP,UAAA,MAAA,EAAgE,KAAhE,EAAgE,SAAhE,EAAgE;IACtD,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA;MACR,KAAO,GAAK,CAAZ;IACD;;IAeD,IAAA,SAAA,KAAA,KAAA,CAAA,EAAA;MACQ,SAAQ,GAAI,IAAZ;IACN;;IACA,OAAM,IAAA,qBAAA,CAA2B,MAA3B,EAA2B,KAA3B,EAA2B,SAA3B,CAAN;EAEA,CAvBK;;EAwBH,qBAAM,CAAA,QAAN,GAAQ,UAAU,GAAV,EAAU;IACnB,IAAE,MAAA,GAAA,GAAA,CAAA,MAAF;IAAA,IAAE,UAAA,GAAA,GAAA,CAAA,UAAF;IACF,OAAA,KAAA,GAAA,CAAA,MAAA,CAAA,SAAA,CAAA,UAAA,CAAA,CAAA;EACH,CAHM;;EA/BwC,qBAkC7C,CAAA,SAlC6C,CAkC7C,UAlC6C,GAkC7C,UAAA,UAAA,EAAA;;;;;;;;GAlC6C;;;CAAA,C,UAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nvar SubscribeOnObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) {\n            delayTime = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.delayTime = delayTime;\n        _this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            _this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            _this.scheduler = asap;\n        }\n        return _this;\n    }\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return this.add(source.subscribe(subscriber));\n    };\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable));\nexport { SubscribeOnObservable };\n//# sourceMappingURL=SubscribeOnObservable.js.map\n"]},"metadata":{},"sourceType":"module"}