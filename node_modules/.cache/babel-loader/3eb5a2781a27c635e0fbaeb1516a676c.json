{"ast":null,"code":"/** PURE_IMPORTS_START _map PURE_IMPORTS_END */\nimport { map } from './map';\nexport function pluck() {\n  var properties = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    properties[_i] = arguments[_i];\n  }\n\n  var length = properties.length;\n\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n\n  return function (source) {\n    return map(plucker(properties, length))(source);\n  };\n}\n\nfunction plucker(props, length) {\n  var mapper = function (x) {\n    var currentProp = x;\n\n    for (var i = 0; i < length; i++) {\n      var p = currentProp != null ? currentProp[props[i]] : undefined;\n\n      if (p !== void 0) {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n\n    return currentProp;\n  };\n\n  return mapper;\n}","map":{"version":3,"sources":["../../../src/internal/operators/pluck.ts"],"names":[],"mappings":"AACA;AA6CA,SAAM,GAAN,QAAgB,OAAhB;AAA4B,OAAA,SAAA,KAAA,GAAuB;MAAvB,UAAA,GAAA,E;;EAAA,KAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAA,CAAA,MAAA,EAAuB,EAAA,EAAvB,EAAuB;;EACjD;;EACA,IAAI,MAAM,GAAA,UAAQ,CAAA,MAAlB;;MACE,MAAM,KAAI,C,EAAA;IACX,MAAA,IAAA,KAAA,CAAA,qCAAA,CAAA;EACD;;EACD,OAAA,UAAA,MAAA,EAAA;IAAA,OAAA,GAAA,CAAA,OAAA,CAAA,UAAA,EAAA,MAAA,CAAA,CAAA,CAAA,MAAA,CAAA;EAAA,CAAA;AAED;;AACE,SAAM,OAAN,CAAe,KAAf,EAAe,MAAf,EAAyB;MACvB,MAAI,GAAA,UAAe,CAAf,EAAgB;IACpB,IAAA,WAAc,GAAG,CAAjB;;IACE,KAAA,IAAO,CAAA,GAAG,CAAV,EAAU,CAAA,GAAA,MAAV,EAAyB,CAAA,EAAzB,EAA+B;MAC/B,IAAI,CAAC,GAAA,WAAa,IAAA,IAAb,GAAa,WAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAb,GAAa,SAAlB;;UACE,CAAA,KAAA,KAAW,C,EAAG;QACf,WAAA,GAAA,CAAA;MAAM,C,MACL;QACD,OAAA,SAAA;MACF;IACD;;IACA,OAAA,WAAA;EAEF,C;;EACD,OAAA,MAAA","sourcesContent":["/** PURE_IMPORTS_START _map PURE_IMPORTS_END */\nimport { map } from './map';\nexport function pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i] = arguments[_i];\n    }\n    var length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return function (source) { return map(plucker(properties, length))(source); };\n}\nfunction plucker(props, length) {\n    var mapper = function (x) {\n        var currentProp = x;\n        for (var i = 0; i < length; i++) {\n            var p = currentProp != null ? currentProp[props[i]] : undefined;\n            if (p !== void 0) {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map\n"]},"metadata":{},"sourceType":"module"}