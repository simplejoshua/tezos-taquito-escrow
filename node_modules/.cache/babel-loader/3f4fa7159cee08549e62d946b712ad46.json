{"ast":null,"code":"import { resetComponent } from '../../style';\nimport { initZoomMotion } from '../../style/motion';\nimport getArrowStyle, { MAX_VERTICAL_CONTENT_RADIUS } from '../../style/placementArrow';\nimport { genComponentStyleHook, mergeToken, genPresetColor } from '../../theme/internal';\n\nconst genTooltipStyle = token => {\n  const {\n    componentCls,\n    // ant-tooltip\n    tooltipMaxWidth,\n    tooltipColor,\n    tooltipBg,\n    tooltipBorderRadius,\n    zIndexPopup,\n    controlHeight,\n    boxShadowSecondary,\n    paddingSM,\n    paddingXS,\n    tooltipRadiusOuter\n  } = token;\n  return [{\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      zIndex: zIndexPopup,\n      display: 'block',\n      width: 'max-content',\n      maxWidth: tooltipMaxWidth,\n      visibility: 'visible',\n      '&-hidden': {\n        display: 'none'\n      },\n      '--antd-arrow-background-color': tooltipBg,\n      // Wrapper for the tooltip content\n      [`${componentCls}-inner`]: {\n        minWidth: controlHeight,\n        minHeight: controlHeight,\n        padding: `${paddingSM / 2}px ${paddingXS}px`,\n        color: tooltipColor,\n        textAlign: 'start',\n        textDecoration: 'none',\n        wordWrap: 'break-word',\n        backgroundColor: tooltipBg,\n        borderRadius: tooltipBorderRadius,\n        boxShadow: boxShadowSecondary\n      },\n      // Limit left and right placement radius\n      [[`&-placement-left`, `&-placement-leftTop`, `&-placement-leftBottom`, `&-placement-right`, `&-placement-rightTop`, `&-placement-rightBottom`].join(',')]: {\n        [`${componentCls}-inner`]: {\n          borderRadius: Math.min(tooltipBorderRadius, MAX_VERTICAL_CONTENT_RADIUS)\n        }\n      },\n      [`${componentCls}-content`]: {\n        position: 'relative'\n      }\n    }), genPresetColor(token, (colorKey, _ref) => {\n      let {\n        darkColor\n      } = _ref;\n      return {\n        [`&${componentCls}-${colorKey}`]: {\n          [`${componentCls}-inner`]: {\n            backgroundColor: darkColor\n          },\n          [`${componentCls}-arrow`]: {\n            '--antd-arrow-background-color': darkColor\n          }\n        }\n      };\n    })), {\n      // RTL\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  }, // Arrow Style\n  getArrowStyle(mergeToken(token, {\n    borderRadiusOuter: tooltipRadiusOuter\n  }), {\n    colorBg: 'var(--antd-arrow-background-color)',\n    contentRadius: tooltipBorderRadius,\n    limitVerticalRadius: true\n  }), // Pure Render\n  {\n    [`${componentCls}-pure`]: {\n      position: 'relative',\n      maxWidth: 'none',\n      margin: token.sizePopupArrow\n    }\n  }];\n}; // ============================== Export ==============================\n\n\nexport default ((prefixCls, injectStyle) => {\n  const useOriginHook = genComponentStyleHook('Tooltip', token => {\n    // Popover use Tooltip as internal component. We do not need to handle this.\n    if (injectStyle === false) {\n      return [];\n    }\n\n    const {\n      borderRadius,\n      colorTextLightSolid,\n      colorBgDefault,\n      borderRadiusOuter\n    } = token;\n    const TooltipToken = mergeToken(token, {\n      // default variables\n      tooltipMaxWidth: 250,\n      tooltipColor: colorTextLightSolid,\n      tooltipBorderRadius: borderRadius,\n      tooltipBg: colorBgDefault,\n      tooltipRadiusOuter: borderRadiusOuter > 4 ? 4 : borderRadiusOuter\n    });\n    return [genTooltipStyle(TooltipToken), initZoomMotion(token, 'zoom-big-fast')];\n  }, _ref2 => {\n    let {\n      zIndexPopupBase,\n      colorBgSpotlight\n    } = _ref2;\n    return {\n      zIndexPopup: zIndexPopupBase + 70,\n      colorBgDefault: colorBgSpotlight\n    };\n  });\n  return useOriginHook(prefixCls);\n});","map":{"version":3,"names":["resetComponent","initZoomMotion","getArrowStyle","MAX_VERTICAL_CONTENT_RADIUS","genComponentStyleHook","mergeToken","genPresetColor","genTooltipStyle","token","componentCls","tooltipMaxWidth","tooltipColor","tooltipBg","tooltipBorderRadius","zIndexPopup","controlHeight","boxShadowSecondary","paddingSM","paddingXS","tooltipRadiusOuter","Object","assign","position","zIndex","display","width","maxWidth","visibility","minWidth","minHeight","padding","color","textAlign","textDecoration","wordWrap","backgroundColor","borderRadius","boxShadow","join","Math","min","colorKey","_ref","darkColor","direction","borderRadiusOuter","colorBg","contentRadius","limitVerticalRadius","margin","sizePopupArrow","prefixCls","injectStyle","useOriginHook","colorTextLightSolid","colorBgDefault","TooltipToken","_ref2","zIndexPopupBase","colorBgSpotlight"],"sources":["C:/Users/Joshua Doros/Desktop/Tezos/tezos-taquito-escrow/node_modules/antd/es/tooltip/style/index.js"],"sourcesContent":["import { resetComponent } from '../../style';\nimport { initZoomMotion } from '../../style/motion';\nimport getArrowStyle, { MAX_VERTICAL_CONTENT_RADIUS } from '../../style/placementArrow';\nimport { genComponentStyleHook, mergeToken, genPresetColor } from '../../theme/internal';\nconst genTooltipStyle = token => {\n  const {\n    componentCls,\n    // ant-tooltip\n    tooltipMaxWidth,\n    tooltipColor,\n    tooltipBg,\n    tooltipBorderRadius,\n    zIndexPopup,\n    controlHeight,\n    boxShadowSecondary,\n    paddingSM,\n    paddingXS,\n    tooltipRadiusOuter\n  } = token;\n  return [{\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      zIndex: zIndexPopup,\n      display: 'block',\n      width: 'max-content',\n      maxWidth: tooltipMaxWidth,\n      visibility: 'visible',\n      '&-hidden': {\n        display: 'none'\n      },\n      '--antd-arrow-background-color': tooltipBg,\n      // Wrapper for the tooltip content\n      [`${componentCls}-inner`]: {\n        minWidth: controlHeight,\n        minHeight: controlHeight,\n        padding: `${paddingSM / 2}px ${paddingXS}px`,\n        color: tooltipColor,\n        textAlign: 'start',\n        textDecoration: 'none',\n        wordWrap: 'break-word',\n        backgroundColor: tooltipBg,\n        borderRadius: tooltipBorderRadius,\n        boxShadow: boxShadowSecondary\n      },\n      // Limit left and right placement radius\n      [[`&-placement-left`, `&-placement-leftTop`, `&-placement-leftBottom`, `&-placement-right`, `&-placement-rightTop`, `&-placement-rightBottom`].join(',')]: {\n        [`${componentCls}-inner`]: {\n          borderRadius: Math.min(tooltipBorderRadius, MAX_VERTICAL_CONTENT_RADIUS)\n        }\n      },\n      [`${componentCls}-content`]: {\n        position: 'relative'\n      }\n    }), genPresetColor(token, (colorKey, _ref) => {\n      let {\n        darkColor\n      } = _ref;\n      return {\n        [`&${componentCls}-${colorKey}`]: {\n          [`${componentCls}-inner`]: {\n            backgroundColor: darkColor\n          },\n          [`${componentCls}-arrow`]: {\n            '--antd-arrow-background-color': darkColor\n          }\n        }\n      };\n    })), {\n      // RTL\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  },\n  // Arrow Style\n  getArrowStyle(mergeToken(token, {\n    borderRadiusOuter: tooltipRadiusOuter\n  }), {\n    colorBg: 'var(--antd-arrow-background-color)',\n    contentRadius: tooltipBorderRadius,\n    limitVerticalRadius: true\n  }),\n  // Pure Render\n  {\n    [`${componentCls}-pure`]: {\n      position: 'relative',\n      maxWidth: 'none',\n      margin: token.sizePopupArrow\n    }\n  }];\n};\n// ============================== Export ==============================\nexport default ((prefixCls, injectStyle) => {\n  const useOriginHook = genComponentStyleHook('Tooltip', token => {\n    // Popover use Tooltip as internal component. We do not need to handle this.\n    if (injectStyle === false) {\n      return [];\n    }\n    const {\n      borderRadius,\n      colorTextLightSolid,\n      colorBgDefault,\n      borderRadiusOuter\n    } = token;\n    const TooltipToken = mergeToken(token, {\n      // default variables\n      tooltipMaxWidth: 250,\n      tooltipColor: colorTextLightSolid,\n      tooltipBorderRadius: borderRadius,\n      tooltipBg: colorBgDefault,\n      tooltipRadiusOuter: borderRadiusOuter > 4 ? 4 : borderRadiusOuter\n    });\n    return [genTooltipStyle(TooltipToken), initZoomMotion(token, 'zoom-big-fast')];\n  }, _ref2 => {\n    let {\n      zIndexPopupBase,\n      colorBgSpotlight\n    } = _ref2;\n    return {\n      zIndexPopup: zIndexPopupBase + 70,\n      colorBgDefault: colorBgSpotlight\n    };\n  });\n  return useOriginHook(prefixCls);\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}