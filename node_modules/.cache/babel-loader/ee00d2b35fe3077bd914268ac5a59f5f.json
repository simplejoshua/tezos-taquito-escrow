{"ast":null,"code":"import { BeaconEvent } from './events';\nimport { BeaconMessageType } from '@airgap/beacon-types';\nexport const messageEvents = {\n  [BeaconMessageType.BlockchainRequest]: {\n    sent: BeaconEvent.UNKNOWN,\n    success: BeaconEvent.UNKNOWN,\n    error: BeaconEvent.UNKNOWN\n  },\n  [BeaconMessageType.BlockchainResponse]: {\n    sent: BeaconEvent.UNKNOWN,\n    success: BeaconEvent.UNKNOWN,\n    error: BeaconEvent.UNKNOWN\n  },\n  [BeaconMessageType.PermissionRequest]: {\n    sent: BeaconEvent.PERMISSION_REQUEST_SENT,\n    success: BeaconEvent.PERMISSION_REQUEST_SUCCESS,\n    error: BeaconEvent.PERMISSION_REQUEST_ERROR\n  },\n  [BeaconMessageType.PermissionResponse]: {\n    sent: BeaconEvent.UNKNOWN,\n    success: BeaconEvent.UNKNOWN,\n    error: BeaconEvent.UNKNOWN\n  },\n  [BeaconMessageType.OperationRequest]: {\n    sent: BeaconEvent.OPERATION_REQUEST_SENT,\n    success: BeaconEvent.OPERATION_REQUEST_SUCCESS,\n    error: BeaconEvent.OPERATION_REQUEST_ERROR\n  },\n  [BeaconMessageType.OperationResponse]: {\n    sent: BeaconEvent.UNKNOWN,\n    success: BeaconEvent.UNKNOWN,\n    error: BeaconEvent.UNKNOWN\n  },\n  [BeaconMessageType.SignPayloadRequest]: {\n    sent: BeaconEvent.SIGN_REQUEST_SENT,\n    success: BeaconEvent.SIGN_REQUEST_SUCCESS,\n    error: BeaconEvent.SIGN_REQUEST_ERROR\n  },\n  [BeaconMessageType.SignPayloadResponse]: {\n    sent: BeaconEvent.UNKNOWN,\n    success: BeaconEvent.UNKNOWN,\n    error: BeaconEvent.UNKNOWN\n  },\n  // TODO: ENCRYPTION\n  // [BeaconMessageType.EncryptPayloadRequest]: {\n  //   sent: BeaconEvent.ENCRYPT_REQUEST_SENT,\n  //   success: BeaconEvent.ENCRYPT_REQUEST_SUCCESS,\n  //   error: BeaconEvent.ENCRYPT_REQUEST_ERROR\n  // },\n  // [BeaconMessageType.EncryptPayloadResponse]: {\n  //   sent: BeaconEvent.UNKNOWN,\n  //   success: BeaconEvent.UNKNOWN,\n  //   error: BeaconEvent.UNKNOWN\n  // },\n  [BeaconMessageType.BroadcastRequest]: {\n    sent: BeaconEvent.BROADCAST_REQUEST_SENT,\n    success: BeaconEvent.BROADCAST_REQUEST_SUCCESS,\n    error: BeaconEvent.BROADCAST_REQUEST_ERROR\n  },\n  [BeaconMessageType.BroadcastResponse]: {\n    sent: BeaconEvent.UNKNOWN,\n    success: BeaconEvent.UNKNOWN,\n    error: BeaconEvent.UNKNOWN\n  },\n  [BeaconMessageType.Acknowledge]: {\n    sent: BeaconEvent.UNKNOWN,\n    success: BeaconEvent.UNKNOWN,\n    error: BeaconEvent.UNKNOWN\n  },\n  [BeaconMessageType.Disconnect]: {\n    sent: BeaconEvent.UNKNOWN,\n    success: BeaconEvent.UNKNOWN,\n    error: BeaconEvent.UNKNOWN\n  },\n  [BeaconMessageType.Error]: {\n    sent: BeaconEvent.UNKNOWN,\n    success: BeaconEvent.UNKNOWN,\n    error: BeaconEvent.UNKNOWN\n  }\n};","map":{"version":3,"sources":["../../src/beacon-message-events.ts"],"names":[],"mappings":"AAAA,SAAS,WAAT,QAA4B,UAA5B;AACA,SAAS,iBAAT,QAAkC,sBAAlC;AAEA,OAAO,MAAM,aAAa,GAEtB;EACF,CAAC,iBAAiB,CAAC,iBAAnB,GAAuC;IACrC,IAAI,EAAE,WAAW,CAAC,OADmB;IAErC,OAAO,EAAE,WAAW,CAAC,OAFgB;IAGrC,KAAK,EAAE,WAAW,CAAC;EAHkB,CADrC;EAMF,CAAC,iBAAiB,CAAC,kBAAnB,GAAwC;IACtC,IAAI,EAAE,WAAW,CAAC,OADoB;IAEtC,OAAO,EAAE,WAAW,CAAC,OAFiB;IAGtC,KAAK,EAAE,WAAW,CAAC;EAHmB,CANtC;EAWF,CAAC,iBAAiB,CAAC,iBAAnB,GAAuC;IACrC,IAAI,EAAE,WAAW,CAAC,uBADmB;IAErC,OAAO,EAAE,WAAW,CAAC,0BAFgB;IAGrC,KAAK,EAAE,WAAW,CAAC;EAHkB,CAXrC;EAgBF,CAAC,iBAAiB,CAAC,kBAAnB,GAAwC;IACtC,IAAI,EAAE,WAAW,CAAC,OADoB;IAEtC,OAAO,EAAE,WAAW,CAAC,OAFiB;IAGtC,KAAK,EAAE,WAAW,CAAC;EAHmB,CAhBtC;EAqBF,CAAC,iBAAiB,CAAC,gBAAnB,GAAsC;IACpC,IAAI,EAAE,WAAW,CAAC,sBADkB;IAEpC,OAAO,EAAE,WAAW,CAAC,yBAFe;IAGpC,KAAK,EAAE,WAAW,CAAC;EAHiB,CArBpC;EA0BF,CAAC,iBAAiB,CAAC,iBAAnB,GAAuC;IACrC,IAAI,EAAE,WAAW,CAAC,OADmB;IAErC,OAAO,EAAE,WAAW,CAAC,OAFgB;IAGrC,KAAK,EAAE,WAAW,CAAC;EAHkB,CA1BrC;EA+BF,CAAC,iBAAiB,CAAC,kBAAnB,GAAwC;IACtC,IAAI,EAAE,WAAW,CAAC,iBADoB;IAEtC,OAAO,EAAE,WAAW,CAAC,oBAFiB;IAGtC,KAAK,EAAE,WAAW,CAAC;EAHmB,CA/BtC;EAoCF,CAAC,iBAAiB,CAAC,mBAAnB,GAAyC;IACvC,IAAI,EAAE,WAAW,CAAC,OADqB;IAEvC,OAAO,EAAE,WAAW,CAAC,OAFkB;IAGvC,KAAK,EAAE,WAAW,CAAC;EAHoB,CApCvC;EAyCF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,CAAC,iBAAiB,CAAC,gBAAnB,GAAsC;IACpC,IAAI,EAAE,WAAW,CAAC,sBADkB;IAEpC,OAAO,EAAE,WAAW,CAAC,yBAFe;IAGpC,KAAK,EAAE,WAAW,CAAC;EAHiB,CApDpC;EAyDF,CAAC,iBAAiB,CAAC,iBAAnB,GAAuC;IACrC,IAAI,EAAE,WAAW,CAAC,OADmB;IAErC,OAAO,EAAE,WAAW,CAAC,OAFgB;IAGrC,KAAK,EAAE,WAAW,CAAC;EAHkB,CAzDrC;EA8DF,CAAC,iBAAiB,CAAC,WAAnB,GAAiC;IAC/B,IAAI,EAAE,WAAW,CAAC,OADa;IAE/B,OAAO,EAAE,WAAW,CAAC,OAFU;IAG/B,KAAK,EAAE,WAAW,CAAC;EAHY,CA9D/B;EAmEF,CAAC,iBAAiB,CAAC,UAAnB,GAAgC;IAC9B,IAAI,EAAE,WAAW,CAAC,OADY;IAE9B,OAAO,EAAE,WAAW,CAAC,OAFS;IAG9B,KAAK,EAAE,WAAW,CAAC;EAHW,CAnE9B;EAwEF,CAAC,iBAAiB,CAAC,KAAnB,GAA2B;IACzB,IAAI,EAAE,WAAW,CAAC,OADO;IAEzB,OAAO,EAAE,WAAW,CAAC,OAFI;IAGzB,KAAK,EAAE,WAAW,CAAC;EAHM;AAxEzB,CAFG","sourceRoot":"","sourcesContent":["import { BeaconEvent } from './events';\nimport { BeaconMessageType } from '@airgap/beacon-types';\nexport const messageEvents = {\n    [BeaconMessageType.BlockchainRequest]: {\n        sent: BeaconEvent.UNKNOWN,\n        success: BeaconEvent.UNKNOWN,\n        error: BeaconEvent.UNKNOWN\n    },\n    [BeaconMessageType.BlockchainResponse]: {\n        sent: BeaconEvent.UNKNOWN,\n        success: BeaconEvent.UNKNOWN,\n        error: BeaconEvent.UNKNOWN\n    },\n    [BeaconMessageType.PermissionRequest]: {\n        sent: BeaconEvent.PERMISSION_REQUEST_SENT,\n        success: BeaconEvent.PERMISSION_REQUEST_SUCCESS,\n        error: BeaconEvent.PERMISSION_REQUEST_ERROR\n    },\n    [BeaconMessageType.PermissionResponse]: {\n        sent: BeaconEvent.UNKNOWN,\n        success: BeaconEvent.UNKNOWN,\n        error: BeaconEvent.UNKNOWN\n    },\n    [BeaconMessageType.OperationRequest]: {\n        sent: BeaconEvent.OPERATION_REQUEST_SENT,\n        success: BeaconEvent.OPERATION_REQUEST_SUCCESS,\n        error: BeaconEvent.OPERATION_REQUEST_ERROR\n    },\n    [BeaconMessageType.OperationResponse]: {\n        sent: BeaconEvent.UNKNOWN,\n        success: BeaconEvent.UNKNOWN,\n        error: BeaconEvent.UNKNOWN\n    },\n    [BeaconMessageType.SignPayloadRequest]: {\n        sent: BeaconEvent.SIGN_REQUEST_SENT,\n        success: BeaconEvent.SIGN_REQUEST_SUCCESS,\n        error: BeaconEvent.SIGN_REQUEST_ERROR\n    },\n    [BeaconMessageType.SignPayloadResponse]: {\n        sent: BeaconEvent.UNKNOWN,\n        success: BeaconEvent.UNKNOWN,\n        error: BeaconEvent.UNKNOWN\n    },\n    // TODO: ENCRYPTION\n    // [BeaconMessageType.EncryptPayloadRequest]: {\n    //   sent: BeaconEvent.ENCRYPT_REQUEST_SENT,\n    //   success: BeaconEvent.ENCRYPT_REQUEST_SUCCESS,\n    //   error: BeaconEvent.ENCRYPT_REQUEST_ERROR\n    // },\n    // [BeaconMessageType.EncryptPayloadResponse]: {\n    //   sent: BeaconEvent.UNKNOWN,\n    //   success: BeaconEvent.UNKNOWN,\n    //   error: BeaconEvent.UNKNOWN\n    // },\n    [BeaconMessageType.BroadcastRequest]: {\n        sent: BeaconEvent.BROADCAST_REQUEST_SENT,\n        success: BeaconEvent.BROADCAST_REQUEST_SUCCESS,\n        error: BeaconEvent.BROADCAST_REQUEST_ERROR\n    },\n    [BeaconMessageType.BroadcastResponse]: {\n        sent: BeaconEvent.UNKNOWN,\n        success: BeaconEvent.UNKNOWN,\n        error: BeaconEvent.UNKNOWN\n    },\n    [BeaconMessageType.Acknowledge]: {\n        sent: BeaconEvent.UNKNOWN,\n        success: BeaconEvent.UNKNOWN,\n        error: BeaconEvent.UNKNOWN\n    },\n    [BeaconMessageType.Disconnect]: {\n        sent: BeaconEvent.UNKNOWN,\n        success: BeaconEvent.UNKNOWN,\n        error: BeaconEvent.UNKNOWN\n    },\n    [BeaconMessageType.Error]: {\n        sent: BeaconEvent.UNKNOWN,\n        success: BeaconEvent.UNKNOWN,\n        error: BeaconEvent.UNKNOWN\n    }\n};\n//# sourceMappingURL=beacon-message-events.js.map"]},"metadata":{},"sourceType":"module"}