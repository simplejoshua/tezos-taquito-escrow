{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from';\nimport { EMPTY } from './empty';\nexport function using(resourceFactory, observableFactory) {\n  return new Observable(function (subscriber) {\n    var resource;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    var result;\n\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    var source = result ? from(result) : EMPTY;\n    var subscription = source.subscribe(subscriber);\n    return function () {\n      subscription.unsubscribe();\n\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}","map":{"version":3,"sources":["../../../src/internal/observable/using.ts"],"names":[],"mappings":"AAAA;AAEA,SAAS,UAAT,QAAqB,eAArB;AACA,SAAS,IAAT,QAAgB,QAAhB;AA8BA,SAAM,KAAN,QAAyB,SAAzB;AAEE,OAAA,SAAW,KAAX,CAAW,eAAX,EAAyB,iBAAzB,EAAmC;EACjC,OAAA,IAAI,UAAJ,CAAoC,UAAA,UAAA,EAAA;IAEpC,IAAI,QAAJ;;QACE;MACD,QAAA,GAAA,eAAA,EAAA;IAAC,C,CACA,OAAA,GAAA,EAAA;MACA,UAAO,CAAA,KAAP,CAAiB,GAAjB;MACD,OAAA,SAAA;IAED;;IACA,IAAI,MAAJ;;QACE;MACD,MAAA,GAAA,iBAAA,CAAA,QAAA,CAAA;IAAC,C,CACA,OAAA,GAAA,EAAA;MACA,UAAO,CAAA,KAAP,CAAiB,GAAjB;MACD,OAAA,SAAA;IAED;;IACA,IAAM,MAAA,GAAA,MAAe,GAAA,IAAO,CAAA,MAAA,CAAP,GAAiB,KAAtC;IACA,IAAA,YAAO,GAAA,MAAA,CAAA,SAAA,CAAA,UAAA,CAAP;IACE,OAAA,YAAa;MACb,YAAY,CAAA,WAAZ;;UACE,Q,EAAS;QACV,QAAA,CAAA,WAAA;MACD;IACD,CALC;EAML,CA1BG,CAAA","sourcesContent":["/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { from } from './from';\nimport { EMPTY } from './empty';\nexport function using(resourceFactory, observableFactory) {\n    return new Observable(function (subscriber) {\n        var resource;\n        try {\n            resource = resourceFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var result;\n        try {\n            result = observableFactory(resource);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        var source = result ? from(result) : EMPTY;\n        var subscription = source.subscribe(subscriber);\n        return function () {\n            subscription.unsubscribe();\n            if (resource) {\n                resource.unsubscribe();\n            }\n        };\n    });\n}\n//# sourceMappingURL=using.js.map\n"]},"metadata":{},"sourceType":"module"}