{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function schedulePromise(input, scheduler) {\n  return new Observable(function (subscriber) {\n    var sub = new Subscription();\n    sub.add(scheduler.schedule(function () {\n      return input.then(function (value) {\n        sub.add(scheduler.schedule(function () {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(function () {\n            return subscriber.complete();\n          }));\n        }));\n      }, function (err) {\n        sub.add(scheduler.schedule(function () {\n          return subscriber.error(err);\n        }));\n      });\n    }));\n    return sub;\n  });\n}","map":{"version":3,"sources":["../../../src/internal/scheduled/schedulePromise.ts"],"names":[],"mappings":"AAAA;AAEA,SAAS,UAAT,QAAuB,eAAvB;AAEA,SAAM,YAAN,QAAgB,iBAAhB;AACE,OAAA,SAAW,eAAX,CAAyB,KAAzB,EAAyB,SAAzB,EAAmC;EACjC,OAAA,IAAS,UAAT,CAAgB,UAAc,UAAd,EAAe;IAC/B,IAAI,GAAG,GAAC,IAAA,YAAA,EAAR;QAEI,G,CAAI,SAAI,CAAA,QAAJ,CAAc,YAAS;MACzB,OAAA,KAAA,CAAA,IAAA,CAAW,UAAY,KAAZ,EAAY;QACvB,GAAG,CAAC,GAAJ,CAAQ,SAAS,CAAC,QAAV,CAAmB,YAAA;UACzB,UAAA,CAAA,IAAA,CAAA,KAAA;UAEN,GAAA,CAAG,GAAH,CAAG,SAAA,CAAA,QAAA,CAAA,YAAA;YAAA,OAAA,UAAA,CAAA,QAAA,EAAA;UAAA,CAAA,CAAH;QACM,CAJM,CAAR;MAML,CAPK,EAOH,UAAC,GAAD,EAAC;QACG,GAAI,CAAA,GAAJ,CAAI,SAAA,CAAA,QAAA,CAAA,YAAA;UAAA,OAAA,UAAA,CAAA,KAAA,CAAA,GAAA,CAAA;QAAA,CAAA,CAAJ;MACN,CATK,CAAA;IAUT,CAXW,C;;GAHR,CAAA","sourcesContent":["/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function schedulePromise(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        sub.add(scheduler.schedule(function () {\n            return input.then(function (value) {\n                sub.add(scheduler.schedule(function () {\n                    subscriber.next(value);\n                    sub.add(scheduler.schedule(function () { return subscriber.complete(); }));\n                }));\n            }, function (err) {\n                sub.add(scheduler.schedule(function () { return subscriber.error(err); }));\n            });\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=schedulePromise.js.map\n"]},"metadata":{},"sourceType":"module"}