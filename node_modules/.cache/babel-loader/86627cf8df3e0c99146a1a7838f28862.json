{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { empty } from '../observable/empty';\nexport function repeat(count) {\n  if (count === void 0) {\n    count = -1;\n  }\n\n  return function (source) {\n    if (count === 0) {\n      return empty();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nvar RepeatOperator = /*@__PURE__*/function () {\n  function RepeatOperator(count, source) {\n    this.count = count;\n    this.source = source;\n  }\n\n  RepeatOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  };\n\n  return RepeatOperator;\n}();\n\nvar RepeatSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(RepeatSubscriber, _super);\n\n  function RepeatSubscriber(destination, count, source) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.count = count;\n    _this.source = source;\n    return _this;\n  }\n\n  RepeatSubscriber.prototype.complete = function () {\n    if (!this.isStopped) {\n      var _a = this,\n          source = _a.source,\n          count = _a.count;\n\n      if (count === 0) {\n        return _super.prototype.complete.call(this);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  };\n\n  return RepeatSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/repeat.ts"],"names":[],"mappings":";AACA,OAAO,KAAE,OAAT,MAAqB,OAArB;AAEA,SAAS,UAAT,QAAsB,eAAtB;AA2DA,SAAM,KAAN,QAAsB,qBAAtB;AAA0B,OAAA,SAAA,MAAA,CAAA,KAAA,EAAA;EACxB,IAAA,KAAO,KAAA,KAAC,CAAR,EAAQ;IACN,KAAI,GAAA,CAAK,CAAT;EACE;;EACD,OAAA,UAAA,MAAA,EAAA;QAAM,KAAI,KAAK,C,EAAG;MACjB,OAAO,KAAA,EAAP;IACD,C,MAAM,IAAA,KAAA,GAAA,CAAA,EAAA;MACL,OAAO,MAAM,CAAC,IAAP,CAAY,IAAI,cAAJ,CAAmB,CAAA,CAAnB,EAAmB,MAAnB,CAAZ,CAAP;IACD,CAFM,MAGP;MACH,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,cAAA,CAAA,KAAA,GAAA,CAAA,EAAA,MAAA,CAAA,CAAA;IAED;EACE,CATG;AASiB;;IACA,cAAA,GAAA,aAAqB,YAAA;EACzC,SAAC,cAAD,CAAC,KAAD,EAAC,MAAD,EAAC;IACD,KAAA,KAAA,GAAA,KAAA;IACE,KAAA,MAAA,GAAc,MAAd;EACD;;EACH,cAAA,CAAA,SAAA,CAAC,IAAD,GAAC,UAAA,UAAA,EAAA,MAAA,EAAA;IAAA,OAAA,MAAA,CAAA,SAAA,CAAA,IAAA,gBAAA,CAAA,UAAA,EAAA,KAAA,KAAA,EAAA,KAAA,MAAA,CAAA,CAAA;EAOD,CAPA;;EAOkC,OAAA,cAAA;AAChC,CAbyC,E;;IAazC,gBAGE,GAAA,aAAM,UAAA,MAAA,EAAY;EAFA,OAAA,CAAA,SAAA,CAAA,gBAAA,EAAa,MAAb;;EACA,SAAA,gBAAA,CAAqB,WAArB,EAAqB,KAArB,EAAqB,MAArB,EAAqB;;;IAExC,KAAA,CAAA,KAAA,GAAA,KAAA;IACD,KAAA,CAAA,MAAA,GAAA,MAAA;IACE,OAAK,KAAL;EACQ;;EACN,gBAAI,CAAK,SAAT,CAAiB,QAAjB,GAAiB,YAAA;SACf,KAAA,S,EAAO;MACR,IAAA,EAAA,GAAA,IAAA;MAAA,IAAA,MAAA,GAAA,EAAA,CAAA,MAAA;MAAA,IAAA,KAAA,GAAA,EAAA,CAAA,KAAA;;UAAM,KAAI,KAAK,C,EAAG;QACjB,OAAK,MAAQ,CAAA,SAAR,CAAkB,QAAlB,CAAkB,IAAlB,CAAkB,IAAlB,CAAL;MACD,C,MACD,IAAO,KAAA,GAAU,CAAA,CAAjB,EAAqB;QACtB,KAAA,KAAA,GAAA,KAAA,GAAA,CAAA;MACF;;MACH,MAAA,CAAA,SAAA,CAAC,KAAA,sBAAA,EAAD;IAjBkC;GAS5B;;;CALI,C,UAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { empty } from '../observable/empty';\nexport function repeat(count) {\n    if (count === void 0) {\n        count = -1;\n    }\n    return function (source) {\n        if (count === 0) {\n            return empty();\n        }\n        else if (count < 0) {\n            return source.lift(new RepeatOperator(-1, source));\n        }\n        else {\n            return source.lift(new RepeatOperator(count - 1, source));\n        }\n    };\n}\nvar RepeatOperator = /*@__PURE__*/ (function () {\n    function RepeatOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RepeatOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    };\n    return RepeatOperator;\n}());\nvar RepeatSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber));\n//# sourceMappingURL=repeat.js.map\n"]},"metadata":{},"sourceType":"module"}