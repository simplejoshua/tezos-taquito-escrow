{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function every(predicate, thisArg) {\n  return function (source) {\n    return source.lift(new EveryOperator(predicate, thisArg, source));\n  };\n}\n\nvar EveryOperator = /*@__PURE__*/function () {\n  function EveryOperator(predicate, thisArg, source) {\n    this.predicate = predicate;\n    this.thisArg = thisArg;\n    this.source = source;\n  }\n\n  EveryOperator.prototype.call = function (observer, source) {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  };\n\n  return EveryOperator;\n}();\n\nvar EverySubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(EverySubscriber, _super);\n\n  function EverySubscriber(destination, predicate, thisArg, source) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.predicate = predicate;\n    _this.thisArg = thisArg;\n    _this.source = source;\n    _this.index = 0;\n    _this.thisArg = thisArg || _this;\n    return _this;\n  }\n\n  EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  };\n\n  EverySubscriber.prototype._next = function (value) {\n    var result = false;\n\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  };\n\n  EverySubscriber.prototype._complete = function () {\n    this.notifyComplete(true);\n  };\n\n  return EverySubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/every.ts"],"names":[],"mappings":";AAEA,OAAO,KAAE,OAAT,MAAqB,OAArB;AAwBA,SAAM,UAAN,QAAyB,eAAzB;AAEE,OAAA,SAAO,KAAP,CAAQ,SAAR,EAAkC,OAAlC,EAAkC;EACnC,OAAA,UAAA,MAAA,EAAA;IAAA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,aAAA,CAAA,SAAA,EAAA,OAAA,EAAA,MAAA,CAAA,CAAA;EAAA,CAAA;AAED;;IACE,aAAA,GAAA,aAAoB,YAEA;EAFA,SAAA,aAAA,CAAA,SAAA,EAAsE,OAAtE,EAAsE,MAAtE,EAAsE;IACtE,KAAA,SAAA,GAAA,SAAA;IACA,KAAA,OAAA,GAAA,OAAA;IACnB,KAAA,MAAA,GAAA,MAAA;EAED;;EACE,aAAO,CAAA,SAAP,CAAc,IAAd,GAAwB,UAAI,QAAJ,EAAoB,MAApB,EAA8B;IACvD,OAAA,MAAA,CAAA,SAAA,CAAA,IAAA,eAAA,CAAA,QAAA,EAAA,KAAA,SAAA,EAAA,KAAA,OAAA,EAAA,KAAA,MAAA,CAAA,CAAA;EACH,CAFI;;EAEH,OAAA,aAAA;AAOD,CAfsB,E;;IAeW,eAAA,GAAA,aAAA,UAAa,MAAb,EAAa;EAG5C,OAAA,CAAA,SAAA,CAAA,eAAA,EAAY,MAAZ;;EAAA,SAAA,eAAA,CAIE,WAJF,EAIQ,SAJR,EAIoB,OAJpB,EAMC,MAND,EAMC;IALmB,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAsE,WAAtE,KAAsE,IAAtE;;IACA,KAAA,CAAA,SAAA,GAAA,SAAA;IACA,KAAA,CAAA,OAAA,GAAA,OAAA;IALZ,KAAA,CAAA,MAAA,GAAiB,MAAjB;IAON,KAAI,CAAC,KAAL,GAAY,CAAZ;;IACD,OAAA,KAAA;EAED;;EACE,eAAK,CAAA,SAAL,CAAsB,cAAtB,GAAuC,UAAA,eAAA,EAAA;IACvC,KAAK,WAAL,CAAiB,IAAjB,CAAiB,eAAjB;IACD,KAAA,WAAA,CAAA,QAAA;EAED,CAJE;;EAKA,eAAU,CAAA,SAAV,CAAmB,KAAnB,GAAmB,UAAA,KAAA,EAAA;IACnB,IAAI,MAAA,GAAA,KAAJ;;QACE;MACD,MAAA,GAAA,KAAA,SAAA,CAAA,IAAA,CAAA,KAAA,OAAA,EAAA,KAAA,EAAA,KAAA,KAAA,EAAA,EAAA,KAAA,MAAA,CAAA;IAAC,C,CACA,OAAA,GAAA,EAAK;MACL,KAAA,WAAA,CAAO,KAAP,CAAO,GAAP;MACD;IAED;;QACE,CAAA,M,EAAK;MACN,KAAA,cAAA,CAAA,KAAA;IACF;EAED,CAbE;;EAcA,eAAK,CAAA,SAAL,CAAoB,SAApB,GAA0B,YAAA;IAC3B,KAAA,cAAA,CAAA,IAAA;EACH,CAFI;;EA/B6B,OAAA,eAAA;CAAA,C,UAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function every(predicate, thisArg) {\n    return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };\n}\nvar EveryOperator = /*@__PURE__*/ (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\nvar EverySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.source = source;\n        _this.index = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber));\n//# sourceMappingURL=every.js.map\n"]},"metadata":{},"sourceType":"module"}