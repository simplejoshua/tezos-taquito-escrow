{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nvar VirtualTimeScheduler = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(VirtualTimeScheduler, _super);\n\n  function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n    if (SchedulerAction === void 0) {\n      SchedulerAction = VirtualAction;\n    }\n\n    if (maxFrames === void 0) {\n      maxFrames = Number.POSITIVE_INFINITY;\n    }\n\n    var _this = _super.call(this, SchedulerAction, function () {\n      return _this.frame;\n    }) || this;\n\n    _this.maxFrames = maxFrames;\n    _this.frame = 0;\n    _this.index = -1;\n    return _this;\n  }\n\n  VirtualTimeScheduler.prototype.flush = function () {\n    var _a = this,\n        actions = _a.actions,\n        maxFrames = _a.maxFrames;\n\n    var error, action;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  };\n\n  VirtualTimeScheduler.frameTimeFactor = 10;\n  return VirtualTimeScheduler;\n}(AsyncScheduler);\n\nexport { VirtualTimeScheduler };\n\nvar VirtualAction = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(VirtualAction, _super);\n\n  function VirtualAction(scheduler, work, index) {\n    if (index === void 0) {\n      index = scheduler.index += 1;\n    }\n\n    var _this = _super.call(this, scheduler, work) || this;\n\n    _this.scheduler = scheduler;\n    _this.work = work;\n    _this.index = index;\n    _this.active = true;\n    _this.index = scheduler.index = index;\n    return _this;\n  }\n\n  VirtualAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (!this.id) {\n      return _super.prototype.schedule.call(this, state, delay);\n    }\n\n    this.active = false;\n    var action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  };\n\n  VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    this.delay = scheduler.frame + delay;\n    var actions = scheduler.actions;\n    actions.push(this);\n    actions.sort(VirtualAction.sortActions);\n    return true;\n  };\n\n  VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return undefined;\n  };\n\n  VirtualAction.prototype._execute = function (state, delay) {\n    if (this.active === true) {\n      return _super.prototype._execute.call(this, state, delay);\n    }\n  };\n\n  VirtualAction.sortActions = function (a, b) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  };\n\n  return VirtualAction;\n}(AsyncAction);\n\nexport { VirtualAction };","map":{"version":3,"sources":["../../../src/internal/scheduler/VirtualTimeScheduler.ts"],"names":[],"mappings":";AAAA,OAAO,KAAE,OAAT,MAAsB,OAAtB;AAEA,SAAS,WAAT,QAAyB,eAAzB;AAGA,SAAA,cAAA,QAAA,kBAAA;;IAA0C,oBAAA,GAAA,aAAA,UAAc,MAAd,EAAc;EAOtD,OAAA,CAAA,SAAA,CAAA,oBAAA,EAAY,MAAZ;;EAAY,SAAA,oBAAA,CAAA,eAAA,EAAA,SAAA,EAAsC;IAC/B,IAAA,eAAA,KAAA,KAAA,CAAA,EAAA;MADnB,eAEE,GAAA,aAFF;IACmB;;IAJZ,IAAA,SAAK,KAAa,KAAA,CAAlB,EAAkB;MAClB,SAAK,GAAa,MAAC,CAAA,iBAAnB;;;IAKN,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,eAAA,EAAA,YAAA;MAAA,OAAA,KAAA,CAAA,KAAA;IAAA,CAAA,KAAA,IAAA;;IAOM,KAAA,CAAA,SAAA,GAAP,SAAO;IAEC,KAAA,CAAA,KAAA,GAAC,CAAD;IACN,KAAI,CAAA,KAAJ,GAAgB,CAAA,CAAhB;IAEA,OAAO,KAAP;EACE;;EACA,oBAAU,CAAG,SAAb,CAAoB,KAApB,GAA0B,YAAA;QAE1B,EAAA,GAAI,I;QAAK,OAAS,GAAC,EAAA,CAAA,O;QAAc,SAAQ,GAAA,EAAM,CAAC,S;;QAC9C,K,EAAA,M;;IACD,OAAA,CAAA,MAAA,GAAA,OAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,KAAA,IAAA,SAAA,EAAA;MACF,OAAA,CAAA,KAAA;MAEG,KAAK,KAAL,GAAO,MAAA,CAAA,KAAP;;MACF,IAAA,KAAO,GAAA,MAAS,CAAA,OAAT,CAAiB,MAAS,CAAA,KAA1B,EAA0B,MAAA,CAAA,KAA1B,CAAP,EAAiC;QAC/B;MACD;IACD;;IACD,IAAA,KAAA,EAAA;MACF,OAAA,MAAA,GAAA,OAAA,CAAA,KAAA,EAAA,EAAA;QAnCgB,MAAA,CAAA,WAAA;MAoCnB;;MAtC0C,MAAc,KAAd;IAA7B;EA4Cb,CApBM;;EAoBgC,oBAAA,CAAA,eAAA,GAAA,EAAA;EAIpC,OAAA,oBAAA;CAhDwC,CAkDlB,cAlDkB,C;;AAgDxC,SAAA,oBAAA;;IAAsB,aAAA,GAAA,aAAS,UAAsB,MAAtB,EAAsB;EAC/B,OAAA,CAAA,SAAA,CAAA,aAAA,EAAmD,MAAnD;;EACA,SAAA,aAAA,CAAK,SAAL,EAAoC,IAApC,EAAoC,KAApC,EAAoC;IAJhD,IAAA,KAAA,KAAM,KAAgB,CAAtB,EAAuB;MAM/B,KAAK,GAAK,SAAG,CAAA,KAAH,IAAkB,CAA5B;;;IACD,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,SAAA,EAAA,IAAA,KAAA,IAAA;;IAEM,KAAA,CAAA,SAAA,GAAP,SAAO;IAAoB,KAAA,CAAA,IAAA,GAAA,IAAA;IACzB,KAAK,CAAA,KAAL,GAAc,KAAd;IACE,KAAA,CAAA,MAAA,GAAO,IAAP;IACD,KAAA,CAAA,KAAA,GAAA,SAAA,CAAA,KAAA,GAAA,KAAA;IACD,OAAK,KAAL;EAKA;;EACA,aAAS,CAAA,SAAT,CAAiB,QAAjB,GAAiB,UAAA,KAAA,EAAA,KAAA,EAAA;IACjB,IAAA,KAAO,KAAO,KAAA,CAAd,EAAsB;MACvB,KAAA,GAAA,CAAA;IAED;;IAAoE,IAAA,CAAA,KAAA,EAAA,EAAA;MAC9D,OAAM,MAAG,CAAA,SAAH,CAAkB,QAAlB,CAA2B,IAA3B,CAA2B,IAA3B,EAA2B,KAA3B,EAA2B,KAA3B,CAAN;IACG;;IACP,KAAA,MAAA,GAAa,KAAb;IACC,IAAA,MAAoC,GAAK,IAAA,aAAA,CAAc,KAAA,SAAd,EAA2B,KAAA,IAA3B,CAAzC;IACD,KAAA,GAAA,CAAO,MAAP;IACD,OAAA,MAAA,CAAA,QAAA,CAAA,KAAA,EAAA,KAAA,CAAA;EAED,CAZE;;EAYkE,aAAA,CAAA,SAAA,CAAA,cAAA,GAAiB,UAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA;IACnF,IAAA,KAAO,KAAA,KAAU,CAAjB,EAAiB;MAClB,KAAA,GAAA,CAAA;IAED;;IACE,KAAI,KAAJ,GAAS,SAAW,CAAA,KAAX,GAAiB,KAA1B;QACE,OAAO,GAAA,SAAA,CAAA,O;IACR,OAAA,CAAA,IAAA,CAAA,IAAA;IACF,OAAA,CAAA,IAAA,CAAA,aAAA,CAAA,WAAA;IAEa,OAAd,IAAc;EACZ,CAXkE;;EAYhE,aAAK,CAAC,SAAN,CAAgB,cAAhB,GAAyB,UAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAA;QACvB,KAAA,KAAA,KAAS,C,EAAA;MACV,KAAA,GAAA,CAAA;IAAM;;WACL,S;EACD,CAJD;;eAIO,CAAA,S,CAAA,Q,GAAA,UAAA,KAAA,EAAA,KAAA,EAAA;QACL,KAAA,MAAA,KAAU,I,EAAA;MACX,OAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,EAAA,KAAA,CAAA;IACF;EAAM,C;;EACL,aAAA,CAAA,WAAA,GAAS,UAAA,CAAA,EAAA,CAAA,EAAA;IACV,IAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,EAAA;MAAM,IAAA,CAAA,CAAA,KAAA,KAAA,CAAA,CAAA,KAAA,EAAA;QACL,OAAU,CAAV;MACD,CAFM,MAGR,IAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,KAAA,EAAA;QACH,OAAA,CAAA;MA1DiD,CAyD9C,M;;;KAHE,M;;;;;GADC;;;CAjD2B,C,WAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nvar VirtualTimeScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        if (SchedulerAction === void 0) {\n            SchedulerAction = VirtualAction;\n        }\n        if (maxFrames === void 0) {\n            maxFrames = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;\n        _this.maxFrames = maxFrames;\n        _this.frame = 0;\n        _this.index = -1;\n        return _this;\n    }\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions[0]) && action.delay <= maxFrames) {\n            actions.shift();\n            this.frame = action.delay;\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    VirtualTimeScheduler.frameTimeFactor = 10;\n    return VirtualTimeScheduler;\n}(AsyncScheduler));\nexport { VirtualTimeScheduler };\nvar VirtualAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) {\n            index = scheduler.index += 1;\n        }\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.index = index;\n        _this.active = true;\n        _this.index = scheduler.index = index;\n        return _this;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (!this.id) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.active = false;\n        var action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return undefined;\n    };\n    VirtualAction.prototype._execute = function (state, delay) {\n        if (this.active === true) {\n            return _super.prototype._execute.call(this, state, delay);\n        }\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction));\nexport { VirtualAction };\n//# sourceMappingURL=VirtualTimeScheduler.js.map\n"]},"metadata":{},"sourceType":"module"}