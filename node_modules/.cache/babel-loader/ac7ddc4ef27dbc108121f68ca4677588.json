{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function find(predicate, thisArg) {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n\n  return function (source) {\n    return source.lift(new FindValueOperator(predicate, source, false, thisArg));\n  };\n}\n\nvar FindValueOperator = /*@__PURE__*/function () {\n  function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n    this.predicate = predicate;\n    this.source = source;\n    this.yieldIndex = yieldIndex;\n    this.thisArg = thisArg;\n  }\n\n  FindValueOperator.prototype.call = function (observer, source) {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  };\n\n  return FindValueOperator;\n}();\n\nexport { FindValueOperator };\n\nvar FindValueSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(FindValueSubscriber, _super);\n\n  function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.predicate = predicate;\n    _this.source = source;\n    _this.yieldIndex = yieldIndex;\n    _this.thisArg = thisArg;\n    _this.index = 0;\n    return _this;\n  }\n\n  FindValueSubscriber.prototype.notifyComplete = function (value) {\n    var destination = this.destination;\n    destination.next(value);\n    destination.complete();\n    this.unsubscribe();\n  };\n\n  FindValueSubscriber.prototype._next = function (value) {\n    var _a = this,\n        predicate = _a.predicate,\n        thisArg = _a.thisArg;\n\n    var index = this.index++;\n\n    try {\n      var result = predicate.call(thisArg || this, value, index, this.source);\n\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  };\n\n  FindValueSubscriber.prototype._complete = function () {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  };\n\n  return FindValueSubscriber;\n}(Subscriber);\n\nexport { FindValueSubscriber };","map":{"version":3,"sources":["../../../src/internal/operators/find.ts"],"names":[],"mappings":";AAEA,OAAO,KAAC,OAAR,MAAmB,OAAnB;AA8CA,SAAM,UAAN,QAAwB,eAAxB;AAEE,OAAA,SAAW,IAAX,CAAW,SAAX,EAAyB,OAAzB,EAAqC;MACnC,OAAM,SAAN,KAAoB,U,EAAA;IACrB,MAAA,IAAA,SAAA,CAAA,6BAAA,CAAA;EACD;;EACD,OAAA,UAAA,MAAA,EAAA;IAAA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,iBAAA,CAAA,SAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,CAAA,CAAA;EAAA,CAAA;AAED;;IACE,iBAAA,GAAA,aAAoB,YAEA;EAFA,SAAA,iBAAA,CAAA,SAAA,EAAsE,MAAtE,EAAsE,UAAtE,EAAsE,OAAtE,EAAsE;IACtE,KAAA,SAAA,GAAA,SAAA;IACA,KAAA,MAAA,GAAA,MAAA;IACA,KAAA,UAAA,GAAA,UAAA;IACnB,KAAA,OAAA,GAAA,OAAA;EAED;;EACE,iBAAa,CAAC,SAAd,CAAwB,IAAxB,GAA4B,UAAA,QAAA,EAAoB,MAApB,EAA8B;IAC3D,OAAA,MAAA,CAAA,SAAA,CAAA,IAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,SAAA,EAAA,KAAA,MAAA,EAAA,KAAA,UAAA,EAAA,KAAA,OAAA,CAAA,CAAA;EACH,CAFI;;EAEH,OAAA,iBAAA;CATqB,E;;AAgBtB,SAAA,iBAAA;;IAA4C,mBAAA,GAAA,aAAA,UAAa,MAAb,EAAa;EAGvD,OAAA,CAAA,SAAA,CAAA,mBAAA,EAAY,MAAZ;;EAAA,SAAA,mBAAA,CAKE,WALF,EAKQ,SALR,EAKoB,MALpB,EAMC,UAND,EAMC,OAND,EAMC;IALmB,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAsE,WAAtE,KAAsE,IAAtE;;IACA,KAAA,CAAA,SAAA,GAAA,SAAA;IACA,KAAA,CAAA,MAAA,GAAA,MAAA;IACA,KAAA,CAAA,UAAA,GAAA,UAAA;IANZ,KAAA,CAAA,OAAA,GAAkB,OAAlB;;IAQP,OAAA,KAAA;EAED;;EACE,mBAAiB,CAAA,SAAjB,CAAyB,cAAzB,GAAqC,UAAA,KAAA,EAAA;IAErC,IAAA,WAAY,GAAK,KAAM,WAAvB;IACA,WAAW,CAAC,IAAZ,CAAY,KAAZ;IACA,WAAK,CAAA,QAAL;IACD,KAAA,WAAA;EAED,CAPE;;EAQM,mBAAC,CAAA,SAAD,CAAC,KAAD,GAAC,UAAW,KAAX,EAAW;IAClB,IAAM,EAAA,GAAK,IAAX;IAAA,IAAc,SAAY,GAAC,EAAA,CAAA,SAA3B;IAAA,IAA2B,OAAA,GAAA,EAAA,CAAA,OAA3B;;IACA,IAAI,KAAA,GAAA,KAAA,KAAA,EAAJ;;QACE;MACA,IAAI,MAAM,GAAE,SAAA,CAAA,IAAA,CAAA,OAAA,IAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,MAAA,CAAZ;;UACE,M,EAAK;QACN,KAAA,cAAA,CAAA,KAAA,UAAA,GAAA,KAAA,GAAA,KAAA;MACF;IAAC,C,CACA,OAAA,GAAA,EAAK;MACN,KAAA,WAAA,CAAA,KAAA,CAAA,GAAA;IACF;EAED,CAZQ;;EAaN,mBAAK,CAAA,SAAL,CAAyB,SAAzB,GAAsC,YAAK;IAC5C,KAAA,cAAA,CAAA,KAAA,UAAA,GAAA,CAAA,CAAA,GAAA,SAAA;EACH,CAFI;;EAjCwC,OAAA,mBAAA;CAAA,C,UAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };\n}\nvar FindValueOperator = /*@__PURE__*/ (function () {\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    FindValueOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    };\n    return FindValueOperator;\n}());\nexport { FindValueOperator };\nvar FindValueSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(FindValueSubscriber, _super);\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.yieldIndex = yieldIndex;\n        _this.thisArg = thisArg;\n        _this.index = 0;\n        return _this;\n    }\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n        this.unsubscribe();\n    };\n    FindValueSubscriber.prototype._next = function (value) {\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\n        var index = this.index++;\n        try {\n            var result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    FindValueSubscriber.prototype._complete = function () {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    };\n    return FindValueSubscriber;\n}(Subscriber));\nexport { FindValueSubscriber };\n//# sourceMappingURL=find.js.map\n"]},"metadata":{},"sourceType":"module"}