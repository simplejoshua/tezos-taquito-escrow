{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { YEAR_DECADE_COUNT } from '.';\nimport useCellClassName from \"../../hooks/useCellClassName\";\nimport { formatValue, isSameYear } from \"../../utils/dateUtil\";\nimport RangeContext from \"../../RangeContext\";\nimport PanelBody from \"../PanelBody\";\nexport var YEAR_COL_COUNT = 3;\nvar YEAR_ROW_COUNT = 4;\n\nfunction YearBody(props) {\n  var prefixCls = props.prefixCls,\n      value = props.value,\n      viewDate = props.viewDate,\n      locale = props.locale,\n      generateConfig = props.generateConfig,\n      cellRender = props.cellRender;\n\n  var _React$useContext = React.useContext(RangeContext),\n      rangedValue = _React$useContext.rangedValue,\n      hoverRangedValue = _React$useContext.hoverRangedValue;\n\n  var yearPrefixCls = \"\".concat(prefixCls, \"-cell\"); // =============================== Year ===============================\n\n  var yearNumber = generateConfig.getYear(viewDate);\n  var startYear = Math.floor(yearNumber / YEAR_DECADE_COUNT) * YEAR_DECADE_COUNT;\n  var endYear = startYear + YEAR_DECADE_COUNT - 1;\n  var baseYear = generateConfig.setYear(viewDate, startYear - Math.ceil((YEAR_COL_COUNT * YEAR_ROW_COUNT - YEAR_DECADE_COUNT) / 2));\n  var today = generateConfig.getNow();\n\n  var isInView = function isInView(date) {\n    var currentYearNumber = generateConfig.getYear(date);\n    return startYear <= currentYearNumber && currentYearNumber <= endYear;\n  };\n\n  var getCellClassName = useCellClassName({\n    cellPrefixCls: yearPrefixCls,\n    value: value,\n    generateConfig: generateConfig,\n    rangedValue: rangedValue,\n    hoverRangedValue: hoverRangedValue,\n    isSameCell: function isSameCell(current, target) {\n      return isSameYear(generateConfig, current, target);\n    },\n    isInView: isInView,\n    offsetCell: function offsetCell(date, offset) {\n      return generateConfig.addYear(date, offset);\n    }\n  });\n  var getCellNode = cellRender ? function (date, wrapperNode) {\n    return cellRender(date, {\n      originNode: wrapperNode,\n      today: today,\n      type: 'year',\n      locale: locale\n    });\n  } : undefined;\n  return /*#__PURE__*/React.createElement(PanelBody, _extends({}, props, {\n    rowNum: YEAR_ROW_COUNT,\n    colNum: YEAR_COL_COUNT,\n    baseDate: baseYear,\n    getCellNode: getCellNode,\n    getCellText: generateConfig.getYear,\n    getCellClassName: getCellClassName,\n    getCellDate: generateConfig.addYear,\n    titleCell: function titleCell(date) {\n      return formatValue(date, {\n        locale: locale,\n        format: 'YYYY',\n        generateConfig: generateConfig\n      });\n    }\n  }));\n}\n\nexport default YearBody;","map":{"version":3,"names":["_extends","React","YEAR_DECADE_COUNT","useCellClassName","formatValue","isSameYear","RangeContext","PanelBody","YEAR_COL_COUNT","YEAR_ROW_COUNT","YearBody","props","prefixCls","value","viewDate","locale","generateConfig","cellRender","_React$useContext","useContext","rangedValue","hoverRangedValue","yearPrefixCls","concat","yearNumber","getYear","startYear","Math","floor","endYear","baseYear","setYear","ceil","today","getNow","isInView","date","currentYearNumber","getCellClassName","cellPrefixCls","isSameCell","current","target","offsetCell","offset","addYear","getCellNode","wrapperNode","originNode","type","undefined","createElement","rowNum","colNum","baseDate","getCellText","getCellDate","titleCell","format"],"sources":["C:/Users/Joshua Doros/Desktop/Tezos/tezos-taquito-escrow/node_modules/rc-picker/es/panels/YearPanel/YearBody.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { YEAR_DECADE_COUNT } from '.';\nimport useCellClassName from \"../../hooks/useCellClassName\";\nimport { formatValue, isSameYear } from \"../../utils/dateUtil\";\nimport RangeContext from \"../../RangeContext\";\nimport PanelBody from \"../PanelBody\";\nexport var YEAR_COL_COUNT = 3;\nvar YEAR_ROW_COUNT = 4;\nfunction YearBody(props) {\n  var prefixCls = props.prefixCls,\n    value = props.value,\n    viewDate = props.viewDate,\n    locale = props.locale,\n    generateConfig = props.generateConfig,\n    cellRender = props.cellRender;\n  var _React$useContext = React.useContext(RangeContext),\n    rangedValue = _React$useContext.rangedValue,\n    hoverRangedValue = _React$useContext.hoverRangedValue;\n  var yearPrefixCls = \"\".concat(prefixCls, \"-cell\");\n\n  // =============================== Year ===============================\n  var yearNumber = generateConfig.getYear(viewDate);\n  var startYear = Math.floor(yearNumber / YEAR_DECADE_COUNT) * YEAR_DECADE_COUNT;\n  var endYear = startYear + YEAR_DECADE_COUNT - 1;\n  var baseYear = generateConfig.setYear(viewDate, startYear - Math.ceil((YEAR_COL_COUNT * YEAR_ROW_COUNT - YEAR_DECADE_COUNT) / 2));\n  var today = generateConfig.getNow();\n  var isInView = function isInView(date) {\n    var currentYearNumber = generateConfig.getYear(date);\n    return startYear <= currentYearNumber && currentYearNumber <= endYear;\n  };\n  var getCellClassName = useCellClassName({\n    cellPrefixCls: yearPrefixCls,\n    value: value,\n    generateConfig: generateConfig,\n    rangedValue: rangedValue,\n    hoverRangedValue: hoverRangedValue,\n    isSameCell: function isSameCell(current, target) {\n      return isSameYear(generateConfig, current, target);\n    },\n    isInView: isInView,\n    offsetCell: function offsetCell(date, offset) {\n      return generateConfig.addYear(date, offset);\n    }\n  });\n  var getCellNode = cellRender ? function (date, wrapperNode) {\n    return cellRender(date, {\n      originNode: wrapperNode,\n      today: today,\n      type: 'year',\n      locale: locale\n    });\n  } : undefined;\n  return /*#__PURE__*/React.createElement(PanelBody, _extends({}, props, {\n    rowNum: YEAR_ROW_COUNT,\n    colNum: YEAR_COL_COUNT,\n    baseDate: baseYear,\n    getCellNode: getCellNode,\n    getCellText: generateConfig.getYear,\n    getCellClassName: getCellClassName,\n    getCellDate: generateConfig.addYear,\n    titleCell: function titleCell(date) {\n      return formatValue(date, {\n        locale: locale,\n        format: 'YYYY',\n        generateConfig: generateConfig\n      });\n    }\n  }));\n}\nexport default YearBody;"],"mappings":"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"},"metadata":{},"sourceType":"module"}