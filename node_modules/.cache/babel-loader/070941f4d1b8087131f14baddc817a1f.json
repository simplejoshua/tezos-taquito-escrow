{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n  return function (source) {\n    return source.lift(new TakeUntilOperator(notifier));\n  };\n}\n\nvar TakeUntilOperator = /*@__PURE__*/function () {\n  function TakeUntilOperator(notifier) {\n    this.notifier = notifier;\n  }\n\n  TakeUntilOperator.prototype.call = function (subscriber, source) {\n    var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n    var notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n\n    if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n      takeUntilSubscriber.add(notifierSubscription);\n      return source.subscribe(takeUntilSubscriber);\n    }\n\n    return takeUntilSubscriber;\n  };\n\n  return TakeUntilOperator;\n}();\n\nvar TakeUntilSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(TakeUntilSubscriber, _super);\n\n  function TakeUntilSubscriber(destination) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.seenValue = false;\n    return _this;\n  }\n\n  TakeUntilSubscriber.prototype.notifyNext = function () {\n    this.seenValue = true;\n    this.complete();\n  };\n\n  TakeUntilSubscriber.prototype.notifyComplete = function () {};\n\n  return TakeUntilSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/takeUntil.ts"],"names":[],"mappings":";AAKA,OAAO,KAAE,OAAT,MAAyB,OAAzB;AA0CA,SAAM,cAAN,EAAyB,qBAAzB,EAAsD,qBAAtD,QAAsD,mBAAtD;AACE,OAAA,SAAO,SAAP,CAAQ,QAAR,EAAkC;EACnC,OAAA,UAAA,MAAA,EAAA;IAAA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,iBAAA,CAAA,QAAA,CAAA,CAAA;EAAA,CAAA;AAED;;IACE,iBAAA,GAAA,aAA6C,YAAA;EAAzB,SAAA,iBAAA,CAAA,QAAA,EAAyB;IAC5C,KAAA,QAAA,GAAA,QAAA;EAED;;EACE,iBAAM,CAAA,SAAN,CAAyB,IAAzB,GAAgC,UAAA,UAAA,EAAoB,MAApB,EAA+B;IAC/D,IAAM,mBAAA,GAAoB,IAAG,mBAAH,CAAuB,UAAvB,CAA1B;IACA,IAAI,oBAAoB,GAAA,cAAK,CAAA,KAAA,QAAA,EAAoB,IAAW,qBAAX,CAAW,mBAAX,CAApB,CAA7B;;QACE,oBAAoB,IAAI,CAAA,mBAAoB,CAAC,S,EAAC;MAC9C,mBAAc,CAAA,GAAd,CAAwB,oBAAxB;MACD,OAAA,MAAA,CAAA,SAAA,CAAA,mBAAA,CAAA;IACD;;IACD,OAAA,mBAAA;EACH,CARI;;EAQH,OAAA,iBAAA;AAOD,CAnB+C,E;;IAmBP,mBAAA,GAAA,aAAA,UAA2B,MAA3B,EAA2B;EAGjE,OAAA,CAAA,SAAA,CAAA,mBAAA,EAAY,MAAZ;;EAAA,SAAA,mBAAA,CACE,WADF,EACQ;IAHR,IAAA,KAAA,GAAA,MAAY,CAAA,IAAZ,CAAkB,IAAlB,EAAkB,WAAlB,KAAkB,IAAlB;;;IAIC,OAAA,KAAA;EAED;;EACE,mBAAc,CAAA,SAAd,CAAsB,UAAtB,GAAsB,YAAA;IACtB,KAAK,SAAL,GAAgB,IAAhB;IACD,KAAA,QAAA;EAED,CAJE;;EAMF,mBAAC,CAAA,SAAD,CAAC,cAAD,GAAC,YAAA,CACH,CADE;;EAdsC,OAAA,mBAAA;CAAA,C,qBAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\n}\nvar TakeUntilOperator = /*@__PURE__*/ (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        var notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    };\n    return TakeUntilOperator;\n}());\nvar TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.seenValue = false;\n        return _this;\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function () {\n        this.seenValue = true;\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n    };\n    return TakeUntilSubscriber;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n"]},"metadata":{},"sourceType":"module"}