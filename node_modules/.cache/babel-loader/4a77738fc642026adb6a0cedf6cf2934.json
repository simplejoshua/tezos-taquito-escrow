{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function exhaust() {\n  return function (source) {\n    return source.lift(new SwitchFirstOperator());\n  };\n}\n\nvar SwitchFirstOperator = /*@__PURE__*/function () {\n  function SwitchFirstOperator() {}\n\n  SwitchFirstOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  };\n\n  return SwitchFirstOperator;\n}();\n\nvar SwitchFirstSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SwitchFirstSubscriber, _super);\n\n  function SwitchFirstSubscriber(destination) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.hasCompleted = false;\n    _this.hasSubscription = false;\n    return _this;\n  }\n\n  SwitchFirstSubscriber.prototype._next = function (value) {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(innerSubscribe(value, new SimpleInnerSubscriber(this)));\n    }\n  };\n\n  SwitchFirstSubscriber.prototype._complete = function () {\n    this.hasCompleted = true;\n\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n  };\n\n  SwitchFirstSubscriber.prototype.notifyComplete = function () {\n    this.hasSubscription = false;\n\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  };\n\n  return SwitchFirstSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"sources":["../../../src/internal/operators/exhaust.ts"],"names":[],"mappings":";AAIA,OAAO,KAAE,OAAT,MAAS,OAAT;AAiDA,SAAM,qBAAN,EAAuB,cAAvB,EAAuB,qBAAvB,QAAuB,mBAAvB;AACE,OAAA,SAAO,OAAP,GAAQ;EACT,OAAA,UAAA,MAAA,EAAA;IAAA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,mBAAA,EAAA,CAAA;EAAA,CAAA;AAED;;IAAA,mBAAA,GAAA,aAAA,YAAA;EAIA,SAAC,mBAAD,GAAC,CAHC;;EACE,mBAAc,CAAA,SAAd,CAAwB,IAAxB,GAA4B,UAAA,UAAA,EAAsB,MAAtB,EAAmC;IAChE,OAAA,MAAA,CAAA,SAAA,CAAA,IAAA,qBAAA,CAAA,UAAA,CAAA,CAAA;EACH,CAFI;;EAEH,OAAA,mBAAA;AAOD,CAXA,E;;IAWuC,qBAAA,GAAA,aAAA,UAA2B,MAA3B,EAA2B;EAIhE,OAAA,CAAA,SAAA,CAAA,qBAAA,EAAY,MAAZ;;EAAA,SAAA,qBAAA,CACE,WADF,EACQ;IAJA,IAAA,KAAA,GAAA,MAAY,CAAA,IAAZ,CAAwB,IAAxB,EAA8B,WAA9B,KAA8B,IAA9B;;IACA,KAAA,CAAA,YAAA,GAAe,KAAf;;IAIP,OAAA,KAAA;EAED;;EACE,qBAAU,CAAA,SAAV,CAA2B,KAA3B,GAA2B,UAAA,KAAA,EAAA;QACzB,CAAA,KAAK,e,EAAkB;MACvB,KAAK,eAAL,GAAuB,IAAvB;MACD,KAAA,GAAA,CAAA,cAAA,CAAA,KAAA,EAAA,IAAA,qBAAA,CAAA,IAAA,CAAA,CAAA;IACF;EAED,CANE;;EAOA,qBAAiB,CAAA,SAAjB,CAAyB,SAAzB,GAAyB,YAAA;IACzB,KAAK,YAAL,GAAU,IAAV;;QACE,CAAA,KAAK,e,EAAY;MAClB,KAAA,WAAA,CAAA,QAAA;IACF;EAED,CANE;;EAOA,qBAAK,CAAA,SAAL,CAA4B,cAA5B,GAA6B,YAAA;IAC7B,KAAI,eAAJ,GAAuB,KAAvB;;QACE,KAAK,Y,EAAY;MAClB,KAAA,WAAA,CAAA,QAAA;IACF;EACH,CALI;;EAvBmC,OAAA,qBAAA;CAAA,C,qBAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function exhaust() {\n    return function (source) { return source.lift(new SwitchFirstOperator()); };\n}\nvar SwitchFirstOperator = /*@__PURE__*/ (function () {\n    function SwitchFirstOperator() {\n    }\n    SwitchFirstOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    };\n    return SwitchFirstOperator;\n}());\nvar SwitchFirstSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SwitchFirstSubscriber, _super);\n    function SwitchFirstSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasCompleted = false;\n        _this.hasSubscription = false;\n        return _this;\n    }\n    SwitchFirstSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(innerSubscribe(value, new SimpleInnerSubscriber(this)));\n        }\n    };\n    SwitchFirstSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstSubscriber.prototype.notifyComplete = function () {\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstSubscriber;\n}(SimpleOuterSubscriber));\n//# sourceMappingURL=exhaust.js.map\n"]},"metadata":{},"sourceType":"module"}