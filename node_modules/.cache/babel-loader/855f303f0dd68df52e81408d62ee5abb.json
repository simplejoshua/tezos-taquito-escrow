{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"className\", \"showSearch\", \"tagRender\", \"direction\", \"omitDomProps\", \"displayValues\", \"onDisplayValuesChange\", \"emptyOptions\", \"notFoundContent\", \"onClear\", \"mode\", \"disabled\", \"loading\", \"getInputElement\", \"getRawInputElement\", \"open\", \"defaultOpen\", \"onDropdownVisibleChange\", \"activeValue\", \"onActiveValueChange\", \"activeDescendantId\", \"searchValue\", \"autoClearSearchValue\", \"onSearch\", \"onSearchSplit\", \"tokenSeparators\", \"allowClear\", \"showArrow\", \"inputIcon\", \"clearIcon\", \"OptionList\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"placement\", \"builtinPlacements\", \"getPopupContainer\", \"showAction\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\"];\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport isMobile from \"rc-util/es/isMobile\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { useComposeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { BaseSelectContext } from \"./hooks/useBaseProps\";\nimport useDelayReset from \"./hooks/useDelayReset\";\nimport useLock from \"./hooks/useLock\";\nimport useSelectTriggerControl from \"./hooks/useSelectTriggerControl\";\nimport Selector from \"./Selector\";\nimport SelectTrigger from \"./SelectTrigger\";\nimport TransBtn from \"./TransBtn\";\nimport { getSeparatedContent } from \"./utils/valueUtil\";\nvar DEFAULT_OMIT_PROPS = ['value', 'onChange', 'removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'onPopupScroll', 'tabIndex'];\nexport function isMultiple(mode) {\n  return mode === 'tags' || mode === 'multiple';\n}\nvar BaseSelect = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _customizeRawInputEle, _classNames2;\n\n  var id = props.id,\n      prefixCls = props.prefixCls,\n      className = props.className,\n      showSearch = props.showSearch,\n      tagRender = props.tagRender,\n      direction = props.direction,\n      omitDomProps = props.omitDomProps,\n      displayValues = props.displayValues,\n      onDisplayValuesChange = props.onDisplayValuesChange,\n      emptyOptions = props.emptyOptions,\n      _props$notFoundConten = props.notFoundContent,\n      notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n      onClear = props.onClear,\n      mode = props.mode,\n      disabled = props.disabled,\n      loading = props.loading,\n      getInputElement = props.getInputElement,\n      getRawInputElement = props.getRawInputElement,\n      open = props.open,\n      defaultOpen = props.defaultOpen,\n      onDropdownVisibleChange = props.onDropdownVisibleChange,\n      activeValue = props.activeValue,\n      onActiveValueChange = props.onActiveValueChange,\n      activeDescendantId = props.activeDescendantId,\n      searchValue = props.searchValue,\n      autoClearSearchValue = props.autoClearSearchValue,\n      onSearch = props.onSearch,\n      onSearchSplit = props.onSearchSplit,\n      tokenSeparators = props.tokenSeparators,\n      allowClear = props.allowClear,\n      showArrow = props.showArrow,\n      inputIcon = props.inputIcon,\n      clearIcon = props.clearIcon,\n      OptionList = props.OptionList,\n      animation = props.animation,\n      transitionName = props.transitionName,\n      dropdownStyle = props.dropdownStyle,\n      dropdownClassName = props.dropdownClassName,\n      dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n      dropdownRender = props.dropdownRender,\n      dropdownAlign = props.dropdownAlign,\n      placement = props.placement,\n      builtinPlacements = props.builtinPlacements,\n      getPopupContainer = props.getPopupContainer,\n      _props$showAction = props.showAction,\n      showAction = _props$showAction === void 0 ? [] : _props$showAction,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      onKeyUp = props.onKeyUp,\n      onKeyDown = props.onKeyDown,\n      onMouseDown = props.onMouseDown,\n      restProps = _objectWithoutProperties(props, _excluded); // ============================== MISC ==============================\n\n\n  var multiple = isMultiple(mode);\n  var mergedShowSearch = (showSearch !== undefined ? showSearch : multiple) || mode === 'combobox';\n\n  var domProps = _objectSpread({}, restProps);\n\n  DEFAULT_OMIT_PROPS.forEach(function (propName) {\n    delete domProps[propName];\n  });\n  omitDomProps === null || omitDomProps === void 0 ? void 0 : omitDomProps.forEach(function (propName) {\n    delete domProps[propName];\n  }); // ============================= Mobile =============================\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mobile = _React$useState2[0],\n      setMobile = _React$useState2[1];\n\n  React.useEffect(function () {\n    // Only update on the client side\n    setMobile(isMobile());\n  }, []); // ============================== Refs ==============================\n\n  var containerRef = React.useRef(null);\n  var selectorDomRef = React.useRef(null);\n  var triggerRef = React.useRef(null);\n  var selectorRef = React.useRef(null);\n  var listRef = React.useRef(null);\n  /** Used for component focused management */\n\n  var _useDelayReset = useDelayReset(),\n      _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n      mockFocused = _useDelayReset2[0],\n      setMockFocused = _useDelayReset2[1],\n      cancelSetMockFocused = _useDelayReset2[2]; // =========================== Imperative ===========================\n\n\n  React.useImperativeHandle(ref, function () {\n    var _selectorRef$current, _selectorRef$current2;\n\n    return {\n      focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\n      blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\n      scrollTo: function scrollTo(arg) {\n        var _listRef$current;\n\n        return (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo(arg);\n      }\n    };\n  }); // ========================== Search Value ==========================\n\n  var mergedSearchValue = React.useMemo(function () {\n    var _displayValues$;\n\n    if (mode !== 'combobox') {\n      return searchValue;\n    }\n\n    var val = (_displayValues$ = displayValues[0]) === null || _displayValues$ === void 0 ? void 0 : _displayValues$.value;\n    return typeof val === 'string' || typeof val === 'number' ? String(val) : '';\n  }, [searchValue, mode, displayValues]); // ========================== Custom Input ==========================\n  // Only works in `combobox`\n\n  var customizeInputElement = mode === 'combobox' && typeof getInputElement === 'function' && getInputElement() || null; // Used for customize replacement for `rc-cascader`\n\n  var customizeRawInputElement = typeof getRawInputElement === 'function' && getRawInputElement();\n  var customizeRawInputRef = useComposeRef(selectorDomRef, customizeRawInputElement === null || customizeRawInputElement === void 0 ? void 0 : (_customizeRawInputEle = customizeRawInputElement.props) === null || _customizeRawInputEle === void 0 ? void 0 : _customizeRawInputEle.ref); // ============================== Open ==============================\n  // SSR not support Portal which means we need delay `open` for the first time render\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rendered = _React$useState4[0],\n      setRendered = _React$useState4[1];\n\n  useLayoutEffect(function () {\n    setRendered(true);\n  }, []);\n\n  var _useMergedState = useMergedState(false, {\n    defaultValue: defaultOpen,\n    value: open\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      innerOpen = _useMergedState2[0],\n      setInnerOpen = _useMergedState2[1];\n\n  var mergedOpen = rendered ? innerOpen : false; // Not trigger `open` in `combobox` when `notFoundContent` is empty\n\n  var emptyListContent = !notFoundContent && emptyOptions;\n\n  if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n    mergedOpen = false;\n  }\n\n  var triggerOpen = emptyListContent ? false : mergedOpen;\n  var onToggleOpen = React.useCallback(function (newOpen) {\n    var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n\n    if (!disabled) {\n      setInnerOpen(nextOpen);\n\n      if (mergedOpen !== nextOpen) {\n        onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 ? void 0 : onDropdownVisibleChange(nextOpen);\n      }\n    }\n  }, [disabled, mergedOpen, setInnerOpen, onDropdownVisibleChange]); // ============================= Search =============================\n\n  var tokenWithEnter = React.useMemo(function () {\n    return (tokenSeparators || []).some(function (tokenSeparator) {\n      return ['\\n', '\\r\\n'].includes(tokenSeparator);\n    });\n  }, [tokenSeparators]);\n\n  var onInternalSearch = function onInternalSearch(searchText, fromTyping, isCompositing) {\n    var ret = true;\n    var newSearchText = searchText;\n    onActiveValueChange === null || onActiveValueChange === void 0 ? void 0 : onActiveValueChange(null); // Check if match the `tokenSeparators`\n\n    var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators); // Ignore combobox since it's not split-able\n\n    if (mode !== 'combobox' && patchLabels) {\n      newSearchText = '';\n      onSearchSplit === null || onSearchSplit === void 0 ? void 0 : onSearchSplit(patchLabels); // Should close when paste finish\n\n      onToggleOpen(false); // Tell Selector that break next actions\n\n      ret = false;\n    }\n\n    if (onSearch && mergedSearchValue !== newSearchText) {\n      onSearch(newSearchText, {\n        source: fromTyping ? 'typing' : 'effect'\n      });\n    }\n\n    return ret;\n  }; // Only triggered when menu is closed & mode is tags\n  // If menu is open, OptionList will take charge\n  // If mode isn't tags, press enter is not meaningful when you can't see any option\n\n\n  var onInternalSearchSubmit = function onInternalSearchSubmit(searchText) {\n    // prevent empty tags from appearing when you click the Enter button\n    if (!searchText || !searchText.trim()) {\n      return;\n    }\n\n    onSearch(searchText, {\n      source: 'submit'\n    });\n  }; // Close will clean up single mode search text\n\n\n  React.useEffect(function () {\n    if (!mergedOpen && !multiple && mode !== 'combobox') {\n      onInternalSearch('', false, false);\n    }\n  }, [mergedOpen]); // ============================ Disabled ============================\n  // Close dropdown & remove focus state when disabled change\n\n  React.useEffect(function () {\n    if (innerOpen && disabled) {\n      setInnerOpen(false);\n    }\n\n    if (disabled) {\n      setMockFocused(false);\n    }\n  }, [disabled]); // ============================ Keyboard ============================\n\n  /**\n   * We record input value here to check if can press to clean up by backspace\n   * - null: Key is not down, this is reset by key up\n   * - true: Search text is empty when first time backspace down\n   * - false: Search text is not empty when first time backspace down\n   */\n\n  var _useLock = useLock(),\n      _useLock2 = _slicedToArray(_useLock, 2),\n      getClearLock = _useLock2[0],\n      setClearLock = _useLock2[1]; // KeyDown\n\n\n  var onInternalKeyDown = function onInternalKeyDown(event) {\n    var clearLock = getClearLock();\n    var which = event.which;\n\n    if (which === KeyCode.ENTER) {\n      // Do not submit form when type in the input\n      if (mode !== 'combobox') {\n        event.preventDefault();\n      } // We only manage open state here, close logic should handle by list component\n\n\n      if (!mergedOpen) {\n        onToggleOpen(true);\n      }\n    }\n\n    setClearLock(!!mergedSearchValue); // Remove value by `backspace`\n\n    if (which === KeyCode.BACKSPACE && !clearLock && multiple && !mergedSearchValue && displayValues.length) {\n      var cloneDisplayValues = _toConsumableArray(displayValues);\n\n      var removedDisplayValue = null;\n\n      for (var i = cloneDisplayValues.length - 1; i >= 0; i -= 1) {\n        var current = cloneDisplayValues[i];\n\n        if (!current.disabled) {\n          cloneDisplayValues.splice(i, 1);\n          removedDisplayValue = current;\n          break;\n        }\n      }\n\n      if (removedDisplayValue) {\n        onDisplayValuesChange(cloneDisplayValues, {\n          type: 'remove',\n          values: [removedDisplayValue]\n        });\n      }\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n\n    if (mergedOpen && listRef.current) {\n      var _listRef$current2;\n\n      (_listRef$current2 = listRef.current).onKeyDown.apply(_listRef$current2, [event].concat(rest));\n    }\n\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown.apply(void 0, [event].concat(rest));\n  }; // KeyUp\n\n\n  var onInternalKeyUp = function onInternalKeyUp(event) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      rest[_key2 - 1] = arguments[_key2];\n    }\n\n    if (mergedOpen && listRef.current) {\n      var _listRef$current3;\n\n      (_listRef$current3 = listRef.current).onKeyUp.apply(_listRef$current3, [event].concat(rest));\n    }\n\n    onKeyUp === null || onKeyUp === void 0 ? void 0 : onKeyUp.apply(void 0, [event].concat(rest));\n  }; // ============================ Selector ============================\n\n\n  var onSelectorRemove = function onSelectorRemove(val) {\n    var newValues = displayValues.filter(function (i) {\n      return i !== val;\n    });\n    onDisplayValuesChange(newValues, {\n      type: 'remove',\n      values: [val]\n    });\n  }; // ========================== Focus / Blur ==========================\n\n  /** Record real focus status */\n\n\n  var focusRef = React.useRef(false);\n\n  var onContainerFocus = function onContainerFocus() {\n    setMockFocused(true);\n\n    if (!disabled) {\n      if (onFocus && !focusRef.current) {\n        onFocus.apply(void 0, arguments);\n      } // `showAction` should handle `focus` if set\n\n\n      if (showAction.includes('focus')) {\n        onToggleOpen(true);\n      }\n    }\n\n    focusRef.current = true;\n  };\n\n  var onContainerBlur = function onContainerBlur() {\n    setMockFocused(false, function () {\n      focusRef.current = false;\n      onToggleOpen(false);\n    });\n\n    if (disabled) {\n      return;\n    }\n\n    if (mergedSearchValue) {\n      // `tags` mode should move `searchValue` into values\n      if (mode === 'tags') {\n        onSearch(mergedSearchValue, {\n          source: 'submit'\n        });\n      } else if (mode === 'multiple') {\n        // `multiple` mode only clean the search value but not trigger event\n        onSearch('', {\n          source: 'blur'\n        });\n      }\n    }\n\n    if (onBlur) {\n      onBlur.apply(void 0, arguments);\n    }\n  }; // Give focus back of Select\n\n\n  var activeTimeoutIds = [];\n  React.useEffect(function () {\n    return function () {\n      activeTimeoutIds.forEach(function (timeoutId) {\n        return clearTimeout(timeoutId);\n      });\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\n    };\n  }, []);\n\n  var onInternalMouseDown = function onInternalMouseDown(event) {\n    var _triggerRef$current;\n\n    var target = event.target;\n    var popupElement = (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : _triggerRef$current.getPopupElement(); // We should give focus back to selector if clicked item is not focusable\n\n    if (popupElement && popupElement.contains(target)) {\n      var timeoutId = setTimeout(function () {\n        var index = activeTimeoutIds.indexOf(timeoutId);\n\n        if (index !== -1) {\n          activeTimeoutIds.splice(index, 1);\n        }\n\n        cancelSetMockFocused();\n\n        if (!mobile && !popupElement.contains(document.activeElement)) {\n          var _selectorRef$current3;\n\n          (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 ? void 0 : _selectorRef$current3.focus();\n        }\n      });\n      activeTimeoutIds.push(timeoutId);\n    }\n\n    for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      restArgs[_key3 - 1] = arguments[_key3];\n    }\n\n    onMouseDown === null || onMouseDown === void 0 ? void 0 : onMouseDown.apply(void 0, [event].concat(restArgs));\n  }; // ============================ Dropdown ============================\n\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      containerWidth = _React$useState6[0],\n      setContainerWidth = _React$useState6[1];\n\n  var _React$useState7 = React.useState({}),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      forceUpdate = _React$useState8[1]; // We need force update here since popup dom is render async\n\n\n  function onPopupMouseEnter() {\n    forceUpdate({});\n  }\n\n  useLayoutEffect(function () {\n    if (triggerOpen) {\n      var _containerRef$current;\n\n      var newWidth = Math.ceil((_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.offsetWidth);\n\n      if (containerWidth !== newWidth && !Number.isNaN(newWidth)) {\n        setContainerWidth(newWidth);\n      }\n    }\n  }, [triggerOpen]); // Used for raw custom input trigger\n\n  var onTriggerVisibleChange;\n\n  if (customizeRawInputElement) {\n    onTriggerVisibleChange = function onTriggerVisibleChange(newOpen) {\n      onToggleOpen(newOpen);\n    };\n  } // Close when click on non-select element\n\n\n  useSelectTriggerControl(function () {\n    var _triggerRef$current2;\n\n    return [containerRef.current, (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : _triggerRef$current2.getPopupElement()];\n  }, triggerOpen, onToggleOpen, !!customizeRawInputElement); // ============================ Context =============================\n\n  var baseSelectContext = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, props), {}, {\n      notFoundContent: notFoundContent,\n      open: mergedOpen,\n      triggerOpen: triggerOpen,\n      id: id,\n      showSearch: mergedShowSearch,\n      multiple: multiple,\n      toggleOpen: onToggleOpen\n    });\n  }, [props, notFoundContent, triggerOpen, mergedOpen, id, mergedShowSearch, multiple, onToggleOpen]); // ==================================================================\n  // ==                            Render                            ==\n  // ==================================================================\n  // ============================= Arrow ==============================\n\n  var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !multiple && mode !== 'combobox';\n  var arrowNode;\n\n  if (mergedShowArrow) {\n    arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\n      className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n      customizeIcon: inputIcon,\n      customizeIconProps: {\n        loading: loading,\n        searchValue: mergedSearchValue,\n        open: mergedOpen,\n        focused: mockFocused,\n        showSearch: mergedShowSearch\n      }\n    });\n  } // ============================= Clear ==============================\n\n\n  var clearNode;\n\n  var onClearMouseDown = function onClearMouseDown() {\n    var _selectorRef$current4;\n\n    onClear === null || onClear === void 0 ? void 0 : onClear();\n    (_selectorRef$current4 = selectorRef.current) === null || _selectorRef$current4 === void 0 ? void 0 : _selectorRef$current4.focus();\n    onDisplayValuesChange([], {\n      type: 'clear',\n      values: displayValues\n    });\n    onInternalSearch('', false, false);\n  };\n\n  if (!disabled && allowClear && (displayValues.length || mergedSearchValue) && !(mode === 'combobox' && mergedSearchValue === '')) {\n    clearNode = /*#__PURE__*/React.createElement(TransBtn, {\n      className: \"\".concat(prefixCls, \"-clear\"),\n      onMouseDown: onClearMouseDown,\n      customizeIcon: clearIcon\n    }, \"\\xD7\");\n  } // =========================== OptionList ===========================\n\n\n  var optionList = /*#__PURE__*/React.createElement(OptionList, {\n    ref: listRef\n  }); // ============================= Select =============================\n\n  var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2)); // >>> Selector\n\n  var selectorNode = /*#__PURE__*/React.createElement(SelectTrigger, {\n    ref: triggerRef,\n    disabled: disabled,\n    prefixCls: prefixCls,\n    visible: triggerOpen,\n    popupElement: optionList,\n    containerWidth: containerWidth,\n    animation: animation,\n    transitionName: transitionName,\n    dropdownStyle: dropdownStyle,\n    dropdownClassName: dropdownClassName,\n    direction: direction,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    dropdownRender: dropdownRender,\n    dropdownAlign: dropdownAlign,\n    placement: placement,\n    builtinPlacements: builtinPlacements,\n    getPopupContainer: getPopupContainer,\n    empty: emptyOptions,\n    getTriggerDOMNode: function getTriggerDOMNode() {\n      return selectorDomRef.current;\n    },\n    onPopupVisibleChange: onTriggerVisibleChange,\n    onPopupMouseEnter: onPopupMouseEnter\n  }, customizeRawInputElement ? /*#__PURE__*/React.cloneElement(customizeRawInputElement, {\n    ref: customizeRawInputRef\n  }) : /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\n    domRef: selectorDomRef,\n    prefixCls: prefixCls,\n    inputElement: customizeInputElement,\n    ref: selectorRef,\n    id: id,\n    showSearch: mergedShowSearch,\n    autoClearSearchValue: autoClearSearchValue,\n    mode: mode,\n    activeDescendantId: activeDescendantId,\n    tagRender: tagRender,\n    values: displayValues,\n    open: mergedOpen,\n    onToggleOpen: onToggleOpen,\n    activeValue: activeValue,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    onSearchSubmit: onInternalSearchSubmit,\n    onRemove: onSelectorRemove,\n    tokenWithEnter: tokenWithEnter\n  }))); // >>> Render\n\n  var renderNode; // Render raw\n\n  if (customizeRawInputElement) {\n    renderNode = selectorNode;\n  } else {\n    renderNode = /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        position: 'absolute',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(displayValues.map(function (_ref) {\n      var label = _ref.label,\n          value = _ref.value;\n      return ['number', 'string'].includes(_typeof(label)) ? label : value;\n    }).join(', '))), selectorNode, arrowNode, clearNode);\n  }\n\n  return /*#__PURE__*/React.createElement(BaseSelectContext.Provider, {\n    value: baseSelectContext\n  }, renderNode);\n}); // Set display name for dev\n\nif (process.env.NODE_ENV !== 'production') {\n  BaseSelect.displayName = 'BaseSelect';\n}\n\nexport default BaseSelect;","map":{"version":3,"names":["_typeof","_extends","_defineProperty","_toConsumableArray","_slicedToArray","_objectSpread","_objectWithoutProperties","_excluded","classNames","useLayoutEffect","useMergedState","isMobile","KeyCode","useComposeRef","React","BaseSelectContext","useDelayReset","useLock","useSelectTriggerControl","Selector","SelectTrigger","TransBtn","getSeparatedContent","DEFAULT_OMIT_PROPS","isMultiple","mode","BaseSelect","forwardRef","props","ref","_customizeRawInputEle","_classNames2","id","prefixCls","className","showSearch","tagRender","direction","omitDomProps","displayValues","onDisplayValuesChange","emptyOptions","_props$notFoundConten","notFoundContent","onClear","disabled","loading","getInputElement","getRawInputElement","open","defaultOpen","onDropdownVisibleChange","activeValue","onActiveValueChange","activeDescendantId","searchValue","autoClearSearchValue","onSearch","onSearchSplit","tokenSeparators","allowClear","showArrow","inputIcon","clearIcon","OptionList","animation","transitionName","dropdownStyle","dropdownClassName","dropdownMatchSelectWidth","dropdownRender","dropdownAlign","placement","builtinPlacements","getPopupContainer","_props$showAction","showAction","onFocus","onBlur","onKeyUp","onKeyDown","onMouseDown","restProps","multiple","mergedShowSearch","undefined","domProps","forEach","propName","_React$useState","useState","_React$useState2","mobile","setMobile","useEffect","containerRef","useRef","selectorDomRef","triggerRef","selectorRef","listRef","_useDelayReset","_useDelayReset2","mockFocused","setMockFocused","cancelSetMockFocused","useImperativeHandle","_selectorRef$current","_selectorRef$current2","focus","current","blur","scrollTo","arg","_listRef$current","mergedSearchValue","useMemo","_displayValues$","val","value","String","customizeInputElement","customizeRawInputElement","customizeRawInputRef","_React$useState3","_React$useState4","rendered","setRendered","_useMergedState","defaultValue","_useMergedState2","innerOpen","setInnerOpen","mergedOpen","emptyListContent","triggerOpen","onToggleOpen","useCallback","newOpen","nextOpen","tokenWithEnter","some","tokenSeparator","includes","onInternalSearch","searchText","fromTyping","isCompositing","ret","newSearchText","patchLabels","source","onInternalSearchSubmit","trim","_useLock","_useLock2","getClearLock","setClearLock","onInternalKeyDown","event","clearLock","which","ENTER","preventDefault","BACKSPACE","length","cloneDisplayValues","removedDisplayValue","i","splice","type","values","_len","arguments","rest","Array","_key","_listRef$current2","apply","concat","onInternalKeyUp","_len2","_key2","_listRef$current3","onSelectorRemove","newValues","filter","focusRef","onContainerFocus","onContainerBlur","activeTimeoutIds","timeoutId","clearTimeout","onInternalMouseDown","_triggerRef$current","target","popupElement","getPopupElement","contains","setTimeout","index","indexOf","document","activeElement","_selectorRef$current3","push","_len3","restArgs","_key3","_React$useState5","_React$useState6","containerWidth","setContainerWidth","_React$useState7","_React$useState8","forceUpdate","onPopupMouseEnter","_containerRef$current","newWidth","Math","ceil","offsetWidth","Number","isNaN","onTriggerVisibleChange","_triggerRef$current2","baseSelectContext","toggleOpen","mergedShowArrow","arrowNode","createElement","customizeIcon","customizeIconProps","focused","clearNode","onClearMouseDown","_selectorRef$current4","optionList","mergedClassName","selectorNode","visible","empty","getTriggerDOMNode","onPopupVisibleChange","cloneElement","domRef","inputElement","onSearchSubmit","onRemove","renderNode","style","width","height","position","overflow","opacity","map","_ref","label","join","Provider","process","env","NODE_ENV","displayName"],"sources":["C:/Users/Joshua Doros/Desktop/Tezos/tezos-taquito-escrow/node_modules/rc-select/es/BaseSelect.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"id\", \"prefixCls\", \"className\", \"showSearch\", \"tagRender\", \"direction\", \"omitDomProps\", \"displayValues\", \"onDisplayValuesChange\", \"emptyOptions\", \"notFoundContent\", \"onClear\", \"mode\", \"disabled\", \"loading\", \"getInputElement\", \"getRawInputElement\", \"open\", \"defaultOpen\", \"onDropdownVisibleChange\", \"activeValue\", \"onActiveValueChange\", \"activeDescendantId\", \"searchValue\", \"autoClearSearchValue\", \"onSearch\", \"onSearchSplit\", \"tokenSeparators\", \"allowClear\", \"showArrow\", \"inputIcon\", \"clearIcon\", \"OptionList\", \"animation\", \"transitionName\", \"dropdownStyle\", \"dropdownClassName\", \"dropdownMatchSelectWidth\", \"dropdownRender\", \"dropdownAlign\", \"placement\", \"builtinPlacements\", \"getPopupContainer\", \"showAction\", \"onFocus\", \"onBlur\", \"onKeyUp\", \"onKeyDown\", \"onMouseDown\"];\nimport classNames from 'classnames';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport isMobile from \"rc-util/es/isMobile\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { useComposeRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { BaseSelectContext } from \"./hooks/useBaseProps\";\nimport useDelayReset from \"./hooks/useDelayReset\";\nimport useLock from \"./hooks/useLock\";\nimport useSelectTriggerControl from \"./hooks/useSelectTriggerControl\";\nimport Selector from \"./Selector\";\nimport SelectTrigger from \"./SelectTrigger\";\nimport TransBtn from \"./TransBtn\";\nimport { getSeparatedContent } from \"./utils/valueUtil\";\nvar DEFAULT_OMIT_PROPS = ['value', 'onChange', 'removeIcon', 'placeholder', 'autoFocus', 'maxTagCount', 'maxTagTextLength', 'maxTagPlaceholder', 'choiceTransitionName', 'onInputKeyDown', 'onPopupScroll', 'tabIndex'];\nexport function isMultiple(mode) {\n  return mode === 'tags' || mode === 'multiple';\n}\nvar BaseSelect = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _customizeRawInputEle, _classNames2;\n  var id = props.id,\n    prefixCls = props.prefixCls,\n    className = props.className,\n    showSearch = props.showSearch,\n    tagRender = props.tagRender,\n    direction = props.direction,\n    omitDomProps = props.omitDomProps,\n    displayValues = props.displayValues,\n    onDisplayValuesChange = props.onDisplayValuesChange,\n    emptyOptions = props.emptyOptions,\n    _props$notFoundConten = props.notFoundContent,\n    notFoundContent = _props$notFoundConten === void 0 ? 'Not Found' : _props$notFoundConten,\n    onClear = props.onClear,\n    mode = props.mode,\n    disabled = props.disabled,\n    loading = props.loading,\n    getInputElement = props.getInputElement,\n    getRawInputElement = props.getRawInputElement,\n    open = props.open,\n    defaultOpen = props.defaultOpen,\n    onDropdownVisibleChange = props.onDropdownVisibleChange,\n    activeValue = props.activeValue,\n    onActiveValueChange = props.onActiveValueChange,\n    activeDescendantId = props.activeDescendantId,\n    searchValue = props.searchValue,\n    autoClearSearchValue = props.autoClearSearchValue,\n    onSearch = props.onSearch,\n    onSearchSplit = props.onSearchSplit,\n    tokenSeparators = props.tokenSeparators,\n    allowClear = props.allowClear,\n    showArrow = props.showArrow,\n    inputIcon = props.inputIcon,\n    clearIcon = props.clearIcon,\n    OptionList = props.OptionList,\n    animation = props.animation,\n    transitionName = props.transitionName,\n    dropdownStyle = props.dropdownStyle,\n    dropdownClassName = props.dropdownClassName,\n    dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n    dropdownRender = props.dropdownRender,\n    dropdownAlign = props.dropdownAlign,\n    placement = props.placement,\n    builtinPlacements = props.builtinPlacements,\n    getPopupContainer = props.getPopupContainer,\n    _props$showAction = props.showAction,\n    showAction = _props$showAction === void 0 ? [] : _props$showAction,\n    onFocus = props.onFocus,\n    onBlur = props.onBlur,\n    onKeyUp = props.onKeyUp,\n    onKeyDown = props.onKeyDown,\n    onMouseDown = props.onMouseDown,\n    restProps = _objectWithoutProperties(props, _excluded);\n\n  // ============================== MISC ==============================\n  var multiple = isMultiple(mode);\n  var mergedShowSearch = (showSearch !== undefined ? showSearch : multiple) || mode === 'combobox';\n  var domProps = _objectSpread({}, restProps);\n  DEFAULT_OMIT_PROPS.forEach(function (propName) {\n    delete domProps[propName];\n  });\n  omitDomProps === null || omitDomProps === void 0 ? void 0 : omitDomProps.forEach(function (propName) {\n    delete domProps[propName];\n  });\n\n  // ============================= Mobile =============================\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    mobile = _React$useState2[0],\n    setMobile = _React$useState2[1];\n  React.useEffect(function () {\n    // Only update on the client side\n    setMobile(isMobile());\n  }, []);\n\n  // ============================== Refs ==============================\n  var containerRef = React.useRef(null);\n  var selectorDomRef = React.useRef(null);\n  var triggerRef = React.useRef(null);\n  var selectorRef = React.useRef(null);\n  var listRef = React.useRef(null);\n\n  /** Used for component focused management */\n  var _useDelayReset = useDelayReset(),\n    _useDelayReset2 = _slicedToArray(_useDelayReset, 3),\n    mockFocused = _useDelayReset2[0],\n    setMockFocused = _useDelayReset2[1],\n    cancelSetMockFocused = _useDelayReset2[2];\n\n  // =========================== Imperative ===========================\n  React.useImperativeHandle(ref, function () {\n    var _selectorRef$current, _selectorRef$current2;\n    return {\n      focus: (_selectorRef$current = selectorRef.current) === null || _selectorRef$current === void 0 ? void 0 : _selectorRef$current.focus,\n      blur: (_selectorRef$current2 = selectorRef.current) === null || _selectorRef$current2 === void 0 ? void 0 : _selectorRef$current2.blur,\n      scrollTo: function scrollTo(arg) {\n        var _listRef$current;\n        return (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.scrollTo(arg);\n      }\n    };\n  });\n\n  // ========================== Search Value ==========================\n  var mergedSearchValue = React.useMemo(function () {\n    var _displayValues$;\n    if (mode !== 'combobox') {\n      return searchValue;\n    }\n    var val = (_displayValues$ = displayValues[0]) === null || _displayValues$ === void 0 ? void 0 : _displayValues$.value;\n    return typeof val === 'string' || typeof val === 'number' ? String(val) : '';\n  }, [searchValue, mode, displayValues]);\n\n  // ========================== Custom Input ==========================\n  // Only works in `combobox`\n  var customizeInputElement = mode === 'combobox' && typeof getInputElement === 'function' && getInputElement() || null;\n\n  // Used for customize replacement for `rc-cascader`\n  var customizeRawInputElement = typeof getRawInputElement === 'function' && getRawInputElement();\n  var customizeRawInputRef = useComposeRef(selectorDomRef, customizeRawInputElement === null || customizeRawInputElement === void 0 ? void 0 : (_customizeRawInputEle = customizeRawInputElement.props) === null || _customizeRawInputEle === void 0 ? void 0 : _customizeRawInputEle.ref);\n\n  // ============================== Open ==============================\n  // SSR not support Portal which means we need delay `open` for the first time render\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    rendered = _React$useState4[0],\n    setRendered = _React$useState4[1];\n  useLayoutEffect(function () {\n    setRendered(true);\n  }, []);\n  var _useMergedState = useMergedState(false, {\n      defaultValue: defaultOpen,\n      value: open\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    innerOpen = _useMergedState2[0],\n    setInnerOpen = _useMergedState2[1];\n  var mergedOpen = rendered ? innerOpen : false;\n\n  // Not trigger `open` in `combobox` when `notFoundContent` is empty\n  var emptyListContent = !notFoundContent && emptyOptions;\n  if (disabled || emptyListContent && mergedOpen && mode === 'combobox') {\n    mergedOpen = false;\n  }\n  var triggerOpen = emptyListContent ? false : mergedOpen;\n  var onToggleOpen = React.useCallback(function (newOpen) {\n    var nextOpen = newOpen !== undefined ? newOpen : !mergedOpen;\n    if (!disabled) {\n      setInnerOpen(nextOpen);\n      if (mergedOpen !== nextOpen) {\n        onDropdownVisibleChange === null || onDropdownVisibleChange === void 0 ? void 0 : onDropdownVisibleChange(nextOpen);\n      }\n    }\n  }, [disabled, mergedOpen, setInnerOpen, onDropdownVisibleChange]);\n\n  // ============================= Search =============================\n  var tokenWithEnter = React.useMemo(function () {\n    return (tokenSeparators || []).some(function (tokenSeparator) {\n      return ['\\n', '\\r\\n'].includes(tokenSeparator);\n    });\n  }, [tokenSeparators]);\n  var onInternalSearch = function onInternalSearch(searchText, fromTyping, isCompositing) {\n    var ret = true;\n    var newSearchText = searchText;\n    onActiveValueChange === null || onActiveValueChange === void 0 ? void 0 : onActiveValueChange(null);\n\n    // Check if match the `tokenSeparators`\n    var patchLabels = isCompositing ? null : getSeparatedContent(searchText, tokenSeparators);\n\n    // Ignore combobox since it's not split-able\n    if (mode !== 'combobox' && patchLabels) {\n      newSearchText = '';\n      onSearchSplit === null || onSearchSplit === void 0 ? void 0 : onSearchSplit(patchLabels);\n\n      // Should close when paste finish\n      onToggleOpen(false);\n\n      // Tell Selector that break next actions\n      ret = false;\n    }\n    if (onSearch && mergedSearchValue !== newSearchText) {\n      onSearch(newSearchText, {\n        source: fromTyping ? 'typing' : 'effect'\n      });\n    }\n    return ret;\n  };\n\n  // Only triggered when menu is closed & mode is tags\n  // If menu is open, OptionList will take charge\n  // If mode isn't tags, press enter is not meaningful when you can't see any option\n  var onInternalSearchSubmit = function onInternalSearchSubmit(searchText) {\n    // prevent empty tags from appearing when you click the Enter button\n    if (!searchText || !searchText.trim()) {\n      return;\n    }\n    onSearch(searchText, {\n      source: 'submit'\n    });\n  };\n\n  // Close will clean up single mode search text\n  React.useEffect(function () {\n    if (!mergedOpen && !multiple && mode !== 'combobox') {\n      onInternalSearch('', false, false);\n    }\n  }, [mergedOpen]);\n\n  // ============================ Disabled ============================\n  // Close dropdown & remove focus state when disabled change\n  React.useEffect(function () {\n    if (innerOpen && disabled) {\n      setInnerOpen(false);\n    }\n    if (disabled) {\n      setMockFocused(false);\n    }\n  }, [disabled]);\n\n  // ============================ Keyboard ============================\n  /**\n   * We record input value here to check if can press to clean up by backspace\n   * - null: Key is not down, this is reset by key up\n   * - true: Search text is empty when first time backspace down\n   * - false: Search text is not empty when first time backspace down\n   */\n  var _useLock = useLock(),\n    _useLock2 = _slicedToArray(_useLock, 2),\n    getClearLock = _useLock2[0],\n    setClearLock = _useLock2[1];\n\n  // KeyDown\n  var onInternalKeyDown = function onInternalKeyDown(event) {\n    var clearLock = getClearLock();\n    var which = event.which;\n    if (which === KeyCode.ENTER) {\n      // Do not submit form when type in the input\n      if (mode !== 'combobox') {\n        event.preventDefault();\n      }\n\n      // We only manage open state here, close logic should handle by list component\n      if (!mergedOpen) {\n        onToggleOpen(true);\n      }\n    }\n    setClearLock(!!mergedSearchValue);\n\n    // Remove value by `backspace`\n    if (which === KeyCode.BACKSPACE && !clearLock && multiple && !mergedSearchValue && displayValues.length) {\n      var cloneDisplayValues = _toConsumableArray(displayValues);\n      var removedDisplayValue = null;\n      for (var i = cloneDisplayValues.length - 1; i >= 0; i -= 1) {\n        var current = cloneDisplayValues[i];\n        if (!current.disabled) {\n          cloneDisplayValues.splice(i, 1);\n          removedDisplayValue = current;\n          break;\n        }\n      }\n      if (removedDisplayValue) {\n        onDisplayValuesChange(cloneDisplayValues, {\n          type: 'remove',\n          values: [removedDisplayValue]\n        });\n      }\n    }\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n    if (mergedOpen && listRef.current) {\n      var _listRef$current2;\n      (_listRef$current2 = listRef.current).onKeyDown.apply(_listRef$current2, [event].concat(rest));\n    }\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown.apply(void 0, [event].concat(rest));\n  };\n\n  // KeyUp\n  var onInternalKeyUp = function onInternalKeyUp(event) {\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      rest[_key2 - 1] = arguments[_key2];\n    }\n    if (mergedOpen && listRef.current) {\n      var _listRef$current3;\n      (_listRef$current3 = listRef.current).onKeyUp.apply(_listRef$current3, [event].concat(rest));\n    }\n    onKeyUp === null || onKeyUp === void 0 ? void 0 : onKeyUp.apply(void 0, [event].concat(rest));\n  };\n\n  // ============================ Selector ============================\n  var onSelectorRemove = function onSelectorRemove(val) {\n    var newValues = displayValues.filter(function (i) {\n      return i !== val;\n    });\n    onDisplayValuesChange(newValues, {\n      type: 'remove',\n      values: [val]\n    });\n  };\n\n  // ========================== Focus / Blur ==========================\n  /** Record real focus status */\n  var focusRef = React.useRef(false);\n  var onContainerFocus = function onContainerFocus() {\n    setMockFocused(true);\n    if (!disabled) {\n      if (onFocus && !focusRef.current) {\n        onFocus.apply(void 0, arguments);\n      }\n\n      // `showAction` should handle `focus` if set\n      if (showAction.includes('focus')) {\n        onToggleOpen(true);\n      }\n    }\n    focusRef.current = true;\n  };\n  var onContainerBlur = function onContainerBlur() {\n    setMockFocused(false, function () {\n      focusRef.current = false;\n      onToggleOpen(false);\n    });\n    if (disabled) {\n      return;\n    }\n    if (mergedSearchValue) {\n      // `tags` mode should move `searchValue` into values\n      if (mode === 'tags') {\n        onSearch(mergedSearchValue, {\n          source: 'submit'\n        });\n      } else if (mode === 'multiple') {\n        // `multiple` mode only clean the search value but not trigger event\n        onSearch('', {\n          source: 'blur'\n        });\n      }\n    }\n    if (onBlur) {\n      onBlur.apply(void 0, arguments);\n    }\n  };\n\n  // Give focus back of Select\n  var activeTimeoutIds = [];\n  React.useEffect(function () {\n    return function () {\n      activeTimeoutIds.forEach(function (timeoutId) {\n        return clearTimeout(timeoutId);\n      });\n      activeTimeoutIds.splice(0, activeTimeoutIds.length);\n    };\n  }, []);\n  var onInternalMouseDown = function onInternalMouseDown(event) {\n    var _triggerRef$current;\n    var target = event.target;\n    var popupElement = (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : _triggerRef$current.getPopupElement();\n\n    // We should give focus back to selector if clicked item is not focusable\n    if (popupElement && popupElement.contains(target)) {\n      var timeoutId = setTimeout(function () {\n        var index = activeTimeoutIds.indexOf(timeoutId);\n        if (index !== -1) {\n          activeTimeoutIds.splice(index, 1);\n        }\n        cancelSetMockFocused();\n        if (!mobile && !popupElement.contains(document.activeElement)) {\n          var _selectorRef$current3;\n          (_selectorRef$current3 = selectorRef.current) === null || _selectorRef$current3 === void 0 ? void 0 : _selectorRef$current3.focus();\n        }\n      });\n      activeTimeoutIds.push(timeoutId);\n    }\n    for (var _len3 = arguments.length, restArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      restArgs[_key3 - 1] = arguments[_key3];\n    }\n    onMouseDown === null || onMouseDown === void 0 ? void 0 : onMouseDown.apply(void 0, [event].concat(restArgs));\n  };\n\n  // ============================ Dropdown ============================\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    containerWidth = _React$useState6[0],\n    setContainerWidth = _React$useState6[1];\n  var _React$useState7 = React.useState({}),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    forceUpdate = _React$useState8[1];\n  // We need force update here since popup dom is render async\n  function onPopupMouseEnter() {\n    forceUpdate({});\n  }\n  useLayoutEffect(function () {\n    if (triggerOpen) {\n      var _containerRef$current;\n      var newWidth = Math.ceil((_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.offsetWidth);\n      if (containerWidth !== newWidth && !Number.isNaN(newWidth)) {\n        setContainerWidth(newWidth);\n      }\n    }\n  }, [triggerOpen]);\n\n  // Used for raw custom input trigger\n  var onTriggerVisibleChange;\n  if (customizeRawInputElement) {\n    onTriggerVisibleChange = function onTriggerVisibleChange(newOpen) {\n      onToggleOpen(newOpen);\n    };\n  }\n\n  // Close when click on non-select element\n  useSelectTriggerControl(function () {\n    var _triggerRef$current2;\n    return [containerRef.current, (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : _triggerRef$current2.getPopupElement()];\n  }, triggerOpen, onToggleOpen, !!customizeRawInputElement);\n\n  // ============================ Context =============================\n  var baseSelectContext = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, props), {}, {\n      notFoundContent: notFoundContent,\n      open: mergedOpen,\n      triggerOpen: triggerOpen,\n      id: id,\n      showSearch: mergedShowSearch,\n      multiple: multiple,\n      toggleOpen: onToggleOpen\n    });\n  }, [props, notFoundContent, triggerOpen, mergedOpen, id, mergedShowSearch, multiple, onToggleOpen]);\n\n  // ==================================================================\n  // ==                            Render                            ==\n  // ==================================================================\n\n  // ============================= Arrow ==============================\n  var mergedShowArrow = showArrow !== undefined ? showArrow : loading || !multiple && mode !== 'combobox';\n  var arrowNode;\n  if (mergedShowArrow) {\n    arrowNode = /*#__PURE__*/React.createElement(TransBtn, {\n      className: classNames(\"\".concat(prefixCls, \"-arrow\"), _defineProperty({}, \"\".concat(prefixCls, \"-arrow-loading\"), loading)),\n      customizeIcon: inputIcon,\n      customizeIconProps: {\n        loading: loading,\n        searchValue: mergedSearchValue,\n        open: mergedOpen,\n        focused: mockFocused,\n        showSearch: mergedShowSearch\n      }\n    });\n  }\n\n  // ============================= Clear ==============================\n  var clearNode;\n  var onClearMouseDown = function onClearMouseDown() {\n    var _selectorRef$current4;\n    onClear === null || onClear === void 0 ? void 0 : onClear();\n    (_selectorRef$current4 = selectorRef.current) === null || _selectorRef$current4 === void 0 ? void 0 : _selectorRef$current4.focus();\n    onDisplayValuesChange([], {\n      type: 'clear',\n      values: displayValues\n    });\n    onInternalSearch('', false, false);\n  };\n  if (!disabled && allowClear && (displayValues.length || mergedSearchValue) && !(mode === 'combobox' && mergedSearchValue === '')) {\n    clearNode = /*#__PURE__*/React.createElement(TransBtn, {\n      className: \"\".concat(prefixCls, \"-clear\"),\n      onMouseDown: onClearMouseDown,\n      customizeIcon: clearIcon\n    }, \"\\xD7\");\n  }\n\n  // =========================== OptionList ===========================\n  var optionList = /*#__PURE__*/React.createElement(OptionList, {\n    ref: listRef\n  });\n\n  // ============================= Select =============================\n  var mergedClassName = classNames(prefixCls, className, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-focused\"), mockFocused), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-multiple\"), multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-single\"), !multiple), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-allow-clear\"), allowClear), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-arrow\"), mergedShowArrow), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-open\"), mergedOpen), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-customize-input\"), customizeInputElement), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-show-search\"), mergedShowSearch), _classNames2));\n\n  // >>> Selector\n  var selectorNode = /*#__PURE__*/React.createElement(SelectTrigger, {\n    ref: triggerRef,\n    disabled: disabled,\n    prefixCls: prefixCls,\n    visible: triggerOpen,\n    popupElement: optionList,\n    containerWidth: containerWidth,\n    animation: animation,\n    transitionName: transitionName,\n    dropdownStyle: dropdownStyle,\n    dropdownClassName: dropdownClassName,\n    direction: direction,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    dropdownRender: dropdownRender,\n    dropdownAlign: dropdownAlign,\n    placement: placement,\n    builtinPlacements: builtinPlacements,\n    getPopupContainer: getPopupContainer,\n    empty: emptyOptions,\n    getTriggerDOMNode: function getTriggerDOMNode() {\n      return selectorDomRef.current;\n    },\n    onPopupVisibleChange: onTriggerVisibleChange,\n    onPopupMouseEnter: onPopupMouseEnter\n  }, customizeRawInputElement ? /*#__PURE__*/React.cloneElement(customizeRawInputElement, {\n    ref: customizeRawInputRef\n  }) : /*#__PURE__*/React.createElement(Selector, _extends({}, props, {\n    domRef: selectorDomRef,\n    prefixCls: prefixCls,\n    inputElement: customizeInputElement,\n    ref: selectorRef,\n    id: id,\n    showSearch: mergedShowSearch,\n    autoClearSearchValue: autoClearSearchValue,\n    mode: mode,\n    activeDescendantId: activeDescendantId,\n    tagRender: tagRender,\n    values: displayValues,\n    open: mergedOpen,\n    onToggleOpen: onToggleOpen,\n    activeValue: activeValue,\n    searchValue: mergedSearchValue,\n    onSearch: onInternalSearch,\n    onSearchSubmit: onInternalSearchSubmit,\n    onRemove: onSelectorRemove,\n    tokenWithEnter: tokenWithEnter\n  })));\n\n  // >>> Render\n  var renderNode;\n\n  // Render raw\n  if (customizeRawInputElement) {\n    renderNode = selectorNode;\n  } else {\n    renderNode = /*#__PURE__*/React.createElement(\"div\", _extends({\n      className: mergedClassName\n    }, domProps, {\n      ref: containerRef,\n      onMouseDown: onInternalMouseDown,\n      onKeyDown: onInternalKeyDown,\n      onKeyUp: onInternalKeyUp,\n      onFocus: onContainerFocus,\n      onBlur: onContainerBlur\n    }), mockFocused && !mergedOpen && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: 0,\n        height: 0,\n        position: 'absolute',\n        overflow: 'hidden',\n        opacity: 0\n      },\n      \"aria-live\": \"polite\"\n    }, \"\".concat(displayValues.map(function (_ref) {\n      var label = _ref.label,\n        value = _ref.value;\n      return ['number', 'string'].includes(_typeof(label)) ? label : value;\n    }).join(', '))), selectorNode, arrowNode, clearNode);\n  }\n  return /*#__PURE__*/React.createElement(BaseSelectContext.Provider, {\n    value: baseSelectContext\n  }, renderNode);\n});\n\n// Set display name for dev\nif (process.env.NODE_ENV !== 'production') {\n  BaseSelect.displayName = 'BaseSelect';\n}\nexport default BaseSelect;"],"mappings":"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"},"metadata":{},"sourceType":"module"}