{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nvar NONE = {};\nexport function combineLatest() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i] = arguments[_i];\n  }\n\n  var resultSelector = undefined;\n  var scheduler = undefined;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop();\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop();\n  }\n\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0];\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\n\nvar CombineLatestOperator = /*@__PURE__*/function () {\n  function CombineLatestOperator(resultSelector) {\n    this.resultSelector = resultSelector;\n  }\n\n  CombineLatestOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  };\n\n  return CombineLatestOperator;\n}();\n\nexport { CombineLatestOperator };\n\nvar CombineLatestSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(CombineLatestSubscriber, _super);\n\n  function CombineLatestSubscriber(destination, resultSelector) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.resultSelector = resultSelector;\n    _this.active = 0;\n    _this.values = [];\n    _this.observables = [];\n    return _this;\n  }\n\n  CombineLatestSubscriber.prototype._next = function (observable) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  };\n\n  CombineLatestSubscriber.prototype._complete = function () {\n    var observables = this.observables;\n    var len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n\n      for (var i = 0; i < len; i++) {\n        var observable = observables[i];\n        this.add(subscribeToResult(this, observable, undefined, i));\n      }\n    }\n  };\n\n  CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  };\n\n  CombineLatestSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n    var values = this.values;\n    var oldVal = values[outerIndex];\n    var toRespond = !this.toRespond ? 0 : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  };\n\n  CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n    var result;\n\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(result);\n  };\n\n  return CombineLatestSubscriber;\n}(OuterSubscriber);\n\nexport { CombineLatestSubscriber };","map":{"version":3,"sources":["../../../src/internal/observable/combineLatest.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nvar NONE = {};\nexport function combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var resultSelector = undefined;\n    var scheduler = undefined;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nvar CombineLatestOperator = /*@__PURE__*/ (function () {\n    function CombineLatestOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    };\n    return CombineLatestOperator;\n}());\nexport { CombineLatestOperator };\nvar CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.resultSelector = resultSelector;\n        _this.active = 0;\n        _this.values = [];\n        _this.observables = [];\n        return _this;\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult(this, observable, undefined, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber));\nexport { CombineLatestSubscriber };\n//# sourceMappingURL=combineLatest.js.map\n"]},"metadata":{},"sourceType":"module"}