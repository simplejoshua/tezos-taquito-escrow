{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"noData\", \"columns\", \"flattenColumns\", \"colWidths\", \"columCount\", \"stickyOffsets\", \"direction\", \"fixHeader\", \"stickyTopOffset\", \"stickyBottomOffset\", \"stickyClassName\", \"onScroll\", \"maxContentScroll\", \"children\"];\nimport { useContext } from '@rc-component/context';\nimport classNames from 'classnames';\nimport { fillRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport ColGroup from \"../ColGroup\";\nimport TableContext from \"../context/TableContext\";\nimport devRenderTimes from \"../hooks/useRenderTimes\";\n\nfunction useColumnWidth(colWidths, columCount) {\n  return useMemo(function () {\n    var cloneColumns = [];\n\n    for (var i = 0; i < columCount; i += 1) {\n      var val = colWidths[i];\n\n      if (val !== undefined) {\n        cloneColumns[i] = val;\n      } else {\n        return null;\n      }\n    }\n\n    return cloneColumns;\n  }, [colWidths.join('_'), columCount]);\n}\n\nvar FixedHolder = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    devRenderTimes(props);\n  }\n\n  var className = props.className,\n      noData = props.noData,\n      columns = props.columns,\n      flattenColumns = props.flattenColumns,\n      colWidths = props.colWidths,\n      columCount = props.columCount,\n      stickyOffsets = props.stickyOffsets,\n      direction = props.direction,\n      fixHeader = props.fixHeader,\n      stickyTopOffset = props.stickyTopOffset,\n      stickyBottomOffset = props.stickyBottomOffset,\n      stickyClassName = props.stickyClassName,\n      onScroll = props.onScroll,\n      maxContentScroll = props.maxContentScroll,\n      children = props.children,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var _useContext = useContext(TableContext, ['prefixCls', 'scrollbarSize', 'isSticky']),\n      prefixCls = _useContext.prefixCls,\n      scrollbarSize = _useContext.scrollbarSize,\n      isSticky = _useContext.isSticky;\n\n  var combinationScrollBarSize = isSticky && !fixHeader ? 0 : scrollbarSize; // Pass wheel to scroll event\n\n  var scrollRef = React.useRef(null);\n  var setScrollRef = React.useCallback(function (element) {\n    fillRef(ref, element);\n    fillRef(scrollRef, element);\n  }, []);\n  React.useEffect(function () {\n    var _scrollRef$current;\n\n    function onWheel(e) {\n      var _ref = e,\n          currentTarget = _ref.currentTarget,\n          deltaX = _ref.deltaX;\n\n      if (deltaX) {\n        onScroll({\n          currentTarget: currentTarget,\n          scrollLeft: currentTarget.scrollLeft + deltaX\n        });\n        e.preventDefault();\n      }\n    }\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.addEventListener('wheel', onWheel);\n    return function () {\n      var _scrollRef$current2;\n\n      (_scrollRef$current2 = scrollRef.current) === null || _scrollRef$current2 === void 0 ? void 0 : _scrollRef$current2.removeEventListener('wheel', onWheel);\n    };\n  }, []); // Check if all flattenColumns has width\n\n  var allFlattenColumnsWithWidth = React.useMemo(function () {\n    return flattenColumns.every(function (column) {\n      return column.width >= 0;\n    });\n  }, [flattenColumns]); // Add scrollbar column\n\n  var lastColumn = flattenColumns[flattenColumns.length - 1];\n  var ScrollBarColumn = {\n    fixed: lastColumn ? lastColumn.fixed : null,\n    scrollbar: true,\n    onHeaderCell: function onHeaderCell() {\n      return {\n        className: \"\".concat(prefixCls, \"-cell-scrollbar\")\n      };\n    }\n  };\n  var columnsWithScrollbar = useMemo(function () {\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(columns), [ScrollBarColumn]) : columns;\n  }, [combinationScrollBarSize, columns]);\n  var flattenColumnsWithScrollbar = useMemo(function () {\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(flattenColumns), [ScrollBarColumn]) : flattenColumns;\n  }, [combinationScrollBarSize, flattenColumns]); // Calculate the sticky offsets\n\n  var headerStickyOffsets = useMemo(function () {\n    var right = stickyOffsets.right,\n        left = stickyOffsets.left;\n    return _objectSpread(_objectSpread({}, stickyOffsets), {}, {\n      left: direction === 'rtl' ? [].concat(_toConsumableArray(left.map(function (width) {\n        return width + combinationScrollBarSize;\n      })), [0]) : left,\n      right: direction === 'rtl' ? right : [].concat(_toConsumableArray(right.map(function (width) {\n        return width + combinationScrollBarSize;\n      })), [0]),\n      isSticky: isSticky\n    });\n  }, [combinationScrollBarSize, stickyOffsets, isSticky]);\n  var mergedColumnWidth = useColumnWidth(colWidths, columCount);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: _objectSpread({\n      overflow: 'hidden'\n    }, isSticky ? {\n      top: stickyTopOffset,\n      bottom: stickyBottomOffset\n    } : {}),\n    ref: setScrollRef,\n    className: classNames(className, _defineProperty({}, stickyClassName, !!stickyClassName))\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      tableLayout: 'fixed',\n      visibility: noData || mergedColumnWidth ? null : 'hidden'\n    }\n  }, (!noData || !maxContentScroll || allFlattenColumnsWithWidth) && /*#__PURE__*/React.createElement(ColGroup, {\n    colWidths: mergedColumnWidth ? [].concat(_toConsumableArray(mergedColumnWidth), [combinationScrollBarSize]) : [],\n    columCount: columCount + 1,\n    columns: flattenColumnsWithScrollbar\n  }), children(_objectSpread(_objectSpread({}, restProps), {}, {\n    stickyOffsets: headerStickyOffsets,\n    columns: columnsWithScrollbar,\n    flattenColumns: flattenColumnsWithScrollbar\n  }))));\n});\nFixedHolder.displayName = 'FixedHolder';\n/** Return a table in div as fixed element which contains sticky info */\n// export default responseImmutable(FixedHolder);\n\nexport default /*#__PURE__*/React.memo(FixedHolder);","map":{"version":3,"names":["_defineProperty","_objectSpread","_toConsumableArray","_objectWithoutProperties","_excluded","useContext","classNames","fillRef","React","useMemo","ColGroup","TableContext","devRenderTimes","useColumnWidth","colWidths","columCount","cloneColumns","i","val","undefined","join","FixedHolder","forwardRef","props","ref","process","env","NODE_ENV","className","noData","columns","flattenColumns","stickyOffsets","direction","fixHeader","stickyTopOffset","stickyBottomOffset","stickyClassName","onScroll","maxContentScroll","children","restProps","_useContext","prefixCls","scrollbarSize","isSticky","combinationScrollBarSize","scrollRef","useRef","setScrollRef","useCallback","element","useEffect","_scrollRef$current","onWheel","e","_ref","currentTarget","deltaX","scrollLeft","preventDefault","current","addEventListener","_scrollRef$current2","removeEventListener","allFlattenColumnsWithWidth","every","column","width","lastColumn","length","ScrollBarColumn","fixed","scrollbar","onHeaderCell","concat","columnsWithScrollbar","flattenColumnsWithScrollbar","headerStickyOffsets","right","left","map","mergedColumnWidth","createElement","style","overflow","top","bottom","tableLayout","visibility","displayName","memo"],"sources":["C:/Users/Joshua Doros/Desktop/Tezos/tezos-taquito-escrow/node_modules/rc-table/es/FixedHolder/index.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"noData\", \"columns\", \"flattenColumns\", \"colWidths\", \"columCount\", \"stickyOffsets\", \"direction\", \"fixHeader\", \"stickyTopOffset\", \"stickyBottomOffset\", \"stickyClassName\", \"onScroll\", \"maxContentScroll\", \"children\"];\nimport { useContext } from '@rc-component/context';\nimport classNames from 'classnames';\nimport { fillRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport ColGroup from \"../ColGroup\";\nimport TableContext from \"../context/TableContext\";\nimport devRenderTimes from \"../hooks/useRenderTimes\";\nfunction useColumnWidth(colWidths, columCount) {\n  return useMemo(function () {\n    var cloneColumns = [];\n    for (var i = 0; i < columCount; i += 1) {\n      var val = colWidths[i];\n      if (val !== undefined) {\n        cloneColumns[i] = val;\n      } else {\n        return null;\n      }\n    }\n    return cloneColumns;\n  }, [colWidths.join('_'), columCount]);\n}\nvar FixedHolder = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    devRenderTimes(props);\n  }\n  var className = props.className,\n    noData = props.noData,\n    columns = props.columns,\n    flattenColumns = props.flattenColumns,\n    colWidths = props.colWidths,\n    columCount = props.columCount,\n    stickyOffsets = props.stickyOffsets,\n    direction = props.direction,\n    fixHeader = props.fixHeader,\n    stickyTopOffset = props.stickyTopOffset,\n    stickyBottomOffset = props.stickyBottomOffset,\n    stickyClassName = props.stickyClassName,\n    onScroll = props.onScroll,\n    maxContentScroll = props.maxContentScroll,\n    children = props.children,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var _useContext = useContext(TableContext, ['prefixCls', 'scrollbarSize', 'isSticky']),\n    prefixCls = _useContext.prefixCls,\n    scrollbarSize = _useContext.scrollbarSize,\n    isSticky = _useContext.isSticky;\n  var combinationScrollBarSize = isSticky && !fixHeader ? 0 : scrollbarSize;\n\n  // Pass wheel to scroll event\n  var scrollRef = React.useRef(null);\n  var setScrollRef = React.useCallback(function (element) {\n    fillRef(ref, element);\n    fillRef(scrollRef, element);\n  }, []);\n  React.useEffect(function () {\n    var _scrollRef$current;\n    function onWheel(e) {\n      var _ref = e,\n        currentTarget = _ref.currentTarget,\n        deltaX = _ref.deltaX;\n      if (deltaX) {\n        onScroll({\n          currentTarget: currentTarget,\n          scrollLeft: currentTarget.scrollLeft + deltaX\n        });\n        e.preventDefault();\n      }\n    }\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.addEventListener('wheel', onWheel);\n    return function () {\n      var _scrollRef$current2;\n      (_scrollRef$current2 = scrollRef.current) === null || _scrollRef$current2 === void 0 ? void 0 : _scrollRef$current2.removeEventListener('wheel', onWheel);\n    };\n  }, []);\n\n  // Check if all flattenColumns has width\n  var allFlattenColumnsWithWidth = React.useMemo(function () {\n    return flattenColumns.every(function (column) {\n      return column.width >= 0;\n    });\n  }, [flattenColumns]);\n\n  // Add scrollbar column\n  var lastColumn = flattenColumns[flattenColumns.length - 1];\n  var ScrollBarColumn = {\n    fixed: lastColumn ? lastColumn.fixed : null,\n    scrollbar: true,\n    onHeaderCell: function onHeaderCell() {\n      return {\n        className: \"\".concat(prefixCls, \"-cell-scrollbar\")\n      };\n    }\n  };\n  var columnsWithScrollbar = useMemo(function () {\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(columns), [ScrollBarColumn]) : columns;\n  }, [combinationScrollBarSize, columns]);\n  var flattenColumnsWithScrollbar = useMemo(function () {\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(flattenColumns), [ScrollBarColumn]) : flattenColumns;\n  }, [combinationScrollBarSize, flattenColumns]);\n\n  // Calculate the sticky offsets\n  var headerStickyOffsets = useMemo(function () {\n    var right = stickyOffsets.right,\n      left = stickyOffsets.left;\n    return _objectSpread(_objectSpread({}, stickyOffsets), {}, {\n      left: direction === 'rtl' ? [].concat(_toConsumableArray(left.map(function (width) {\n        return width + combinationScrollBarSize;\n      })), [0]) : left,\n      right: direction === 'rtl' ? right : [].concat(_toConsumableArray(right.map(function (width) {\n        return width + combinationScrollBarSize;\n      })), [0]),\n      isSticky: isSticky\n    });\n  }, [combinationScrollBarSize, stickyOffsets, isSticky]);\n  var mergedColumnWidth = useColumnWidth(colWidths, columCount);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: _objectSpread({\n      overflow: 'hidden'\n    }, isSticky ? {\n      top: stickyTopOffset,\n      bottom: stickyBottomOffset\n    } : {}),\n    ref: setScrollRef,\n    className: classNames(className, _defineProperty({}, stickyClassName, !!stickyClassName))\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      tableLayout: 'fixed',\n      visibility: noData || mergedColumnWidth ? null : 'hidden'\n    }\n  }, (!noData || !maxContentScroll || allFlattenColumnsWithWidth) && /*#__PURE__*/React.createElement(ColGroup, {\n    colWidths: mergedColumnWidth ? [].concat(_toConsumableArray(mergedColumnWidth), [combinationScrollBarSize]) : [],\n    columCount: columCount + 1,\n    columns: flattenColumnsWithScrollbar\n  }), children(_objectSpread(_objectSpread({}, restProps), {}, {\n    stickyOffsets: headerStickyOffsets,\n    columns: columnsWithScrollbar,\n    flattenColumns: flattenColumnsWithScrollbar\n  }))));\n});\nFixedHolder.displayName = 'FixedHolder';\n\n/** Return a table in div as fixed element which contains sticky info */\n// export default responseImmutable(FixedHolder);\nexport default /*#__PURE__*/React.memo(FixedHolder);"],"mappings":"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"},"metadata":{},"sourceType":"module"}