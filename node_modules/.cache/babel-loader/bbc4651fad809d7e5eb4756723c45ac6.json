{"ast":null,"code":"export const createSanitizedElement = (type, classes, attributes, element) => {\n  const el = document.createElement(type);\n\n  if (classes.length > 0) {\n    // Filter empty classnames and add all classes to element\n    el.classList.add(...classes.filter(clazz => !!clazz).map(clazz => sanitizeText(clazz)));\n  } // Add all attributes to element\n\n\n  attributes.forEach(attribute => {\n    el.setAttribute(sanitizeText(attribute[0]), sanitizeText(attribute[1]));\n  });\n\n  if (typeof element === 'object' && Array.isArray(element)) {\n    // If we get a list of elements, add all of them as children\n    element.filter(childEl => !!childEl).forEach(childEl => {\n      el.appendChild(childEl);\n    });\n  } else if (typeof element === 'string') {\n    // Use `innerText` to assign text to prevent malicious code from being rendered\n    el.innerText = element;\n  } else {// NOOP\n  }\n\n  return el;\n};\nexport const createSVGElement = (classes, attributes, element) => {\n  const el = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n  if (classes.length > 0) {\n    el.classList.add(...classes.filter(clazz => !!clazz));\n  }\n\n  attributes.forEach(attribute => {\n    el.setAttribute(sanitizeText(attribute[0]), sanitizeText(attribute[1]));\n  });\n\n  if (typeof element === 'object' && Array.isArray(element)) {\n    element.filter(childEl => !!childEl).forEach(childEl => {\n      el.appendChild(childEl);\n    });\n  } else {// NOOP\n  }\n\n  return el;\n};\nexport const createSVGPathElement = attributes => {\n  const el = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  attributes.forEach(attribute => {\n    el.setAttribute(sanitizeText(attribute[0]), sanitizeText(attribute[1]));\n  });\n  return el;\n};\nexport const createSVGGElement = element => {\n  const el = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n  element.filter(childEl => !!childEl).forEach(childEl => {\n    el.appendChild(childEl);\n  });\n  return el;\n};\nexport const createIconSVGExternal = () => {\n  return createSVGElement(['svg-inline--fa', 'fa-external-link-alt', 'fa-w-16'], [['aria-hidden', 'true'], ['focusable', 'false'], ['data-prefix', 'fas'], ['data-icon', 'external-link-alt'], ['role', 'img'], ['xmlns', 'http://www.w3.org/2000/svg'], ['viewBox', '0 0 512 512']], [createSVGPathElement([['fill', 'currentColor'], ['d', 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z']])]);\n};\nexport const sanitizeText = text => {\n  const div = document.createElement('div');\n  div.innerText = text;\n  return div.innerHTML;\n};\nexport const removeAllChildren = el => {\n  el.innerHTML = '';\n};","map":{"version":3,"sources":["../../../src/utils/html-elements.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["export const createSanitizedElement = (type, classes, attributes, element) => {\n    const el = document.createElement(type);\n    if (classes.length > 0) {\n        // Filter empty classnames and add all classes to element\n        el.classList.add(...classes.filter((clazz) => !!clazz).map((clazz) => sanitizeText(clazz)));\n    }\n    // Add all attributes to element\n    attributes.forEach((attribute) => {\n        el.setAttribute(sanitizeText(attribute[0]), sanitizeText(attribute[1]));\n    });\n    if (typeof element === 'object' && Array.isArray(element)) {\n        // If we get a list of elements, add all of them as children\n        element\n            .filter((childEl) => !!childEl)\n            .forEach((childEl) => {\n            el.appendChild(childEl);\n        });\n    }\n    else if (typeof element === 'string') {\n        // Use `innerText` to assign text to prevent malicious code from being rendered\n        el.innerText = element;\n    }\n    else {\n        // NOOP\n    }\n    return el;\n};\nexport const createSVGElement = (classes, attributes, element) => {\n    const el = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    if (classes.length > 0) {\n        el.classList.add(...classes.filter((clazz) => !!clazz));\n    }\n    attributes.forEach((attribute) => {\n        el.setAttribute(sanitizeText(attribute[0]), sanitizeText(attribute[1]));\n    });\n    if (typeof element === 'object' && Array.isArray(element)) {\n        element\n            .filter((childEl) => !!childEl)\n            .forEach((childEl) => {\n            el.appendChild(childEl);\n        });\n    }\n    else {\n        // NOOP\n    }\n    return el;\n};\nexport const createSVGPathElement = (attributes) => {\n    const el = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    attributes.forEach((attribute) => {\n        el.setAttribute(sanitizeText(attribute[0]), sanitizeText(attribute[1]));\n    });\n    return el;\n};\nexport const createSVGGElement = (element) => {\n    const el = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    element\n        .filter((childEl) => !!childEl)\n        .forEach((childEl) => {\n        el.appendChild(childEl);\n    });\n    return el;\n};\nexport const createIconSVGExternal = () => {\n    return createSVGElement(['svg-inline--fa', 'fa-external-link-alt', 'fa-w-16'], [\n        ['aria-hidden', 'true'],\n        ['focusable', 'false'],\n        ['data-prefix', 'fas'],\n        ['data-icon', 'external-link-alt'],\n        ['role', 'img'],\n        ['xmlns', 'http://www.w3.org/2000/svg'],\n        ['viewBox', '0 0 512 512']\n    ], [\n        createSVGPathElement([\n            ['fill', 'currentColor'],\n            [\n                'd',\n                'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z'\n            ]\n        ])\n    ]);\n};\nexport const sanitizeText = (text) => {\n    const div = document.createElement('div');\n    div.innerText = text;\n    return div.innerHTML;\n};\nexport const removeAllChildren = (el) => {\n    el.innerHTML = '';\n};\n//# sourceMappingURL=html-elements.js.map"]},"metadata":{},"sourceType":"module"}