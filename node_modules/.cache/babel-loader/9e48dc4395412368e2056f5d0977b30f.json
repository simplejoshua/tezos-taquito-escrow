{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Scheduler } from '../Scheduler';\n\nvar AsyncScheduler = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(AsyncScheduler, _super);\n\n  function AsyncScheduler(SchedulerAction, now) {\n    if (now === void 0) {\n      now = Scheduler.now;\n    }\n\n    var _this = _super.call(this, SchedulerAction, function () {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    }) || this;\n\n    _this.actions = [];\n    _this.active = false;\n    _this.scheduled = undefined;\n    return _this;\n  }\n\n  AsyncScheduler.prototype.schedule = function (work, delay, state) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return _super.prototype.schedule.call(this, work, delay, state);\n    }\n  };\n\n  AsyncScheduler.prototype.flush = function (action) {\n    var actions = this.actions;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    var error;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift());\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  };\n\n  return AsyncScheduler;\n}(Scheduler);\n\nexport { AsyncScheduler };","map":{"version":3,"sources":["../../../src/internal/scheduler/AsyncScheduler.ts"],"names":[],"mappings":";AAAA,OAAO,KAAE,OAAT,MAAoB,OAApB;AAMA,SAAA,SAAA,QAAA,cAAA;;IAAoC,cAAA,GAAA,aAAA,UAAS,MAAT,EAAS;EAmB3C,OAAA,CAAA,SAAA,CAAA,cAAA,EAAY,MAAZ;;EACY,SAAA,cAAA,CAAA,eAAA,EAA6B,GAA7B,EAAiC;IAD7C,IAAA,GAAA,KAEE,KAAA,CAFF,EAEE;MACE,GAAA,GAAI,SAAA,CAAA,GAAJ;IACE;;QACD,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,eAAA,EAAA,YAAA;UAAM,cAAA,CAAA,QAAA,IAAA,cAAA,CAAA,QAAA,KAAA,K,EAAA;QACL,OAAO,cAAM,CAAA,QAAN,CAAM,GAAN,EAAP;MACD,C,MACD;QAzBG,OAAO,GAA8B,EAArC;MAOA;IAQA,CAOF,KAPE,I;;;IAWN,KAAA,CAAA,MAAA,GAAA,KAAA;IAEM,KAAA,CAAA,SAAA,GAAP,SAAO;IAAiE,OAAA,KAAA;EACtE;;EACE,cAAA,CAAO,SAAP,CAAO,QAAP,GAAsB,UAAS,IAAT,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC;IAC3D,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA;MAAM,KAAA,GAAA,CAAA;IACL;;IACD,IAAA,cAAA,CAAA,QAAA,IAAA,cAAA,CAAA,QAAA,KAAA,IAAA,EAAA;MACF,OAAA,cAAA,CAAA,QAAA,CAAA,QAAA,CAAA,IAAA,EAAA,KAAA,EAAA,KAAA,CAAA;IAED,CAHG,MAKM;MAEH,OAAK,MAAQ,CAAA,SAAR,CAAQ,QAAR,CAAQ,IAAR,CAAQ,IAAR,EAAQ,IAAR,EAAQ,KAAR,EAAQ,KAAR,CAAL;IACF;EACA,CAZA;;EAaD,cAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAA,MAAA,EAAA;IAED,IAAI,OAAW,GAAA,KAAA,OAAf;;IACA,IAAI,KAAC,MAAL,EAAc;MAEX,OAAA,CAAA,IAAA,CAAA,MAAA;MACD;IACE;;QACD,K;IACF,KAAA,MAAA,GAAQ,IAAR;;IAED,GAAA;MAEI,IAAA,KAAO,GAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA,KAAA,CAAP,EAAO;QACT;MACE;IACD,CALH,QAKG,MAAA,GAAA,OAAA,CAAA,KAAA,EALH;;IAME,KAAA,MAAA,GAAM,KAAN;;IACD,IAAA,KAAA,EAAA;MACF,OAAA,MAAA,GAAA,OAAA,CAAA,KAAA,EAAA,EAAA;QACH,MAAA,CAAA,WAAA;MAjE6C;;;;GA6CxC;;;CA7C+B,C,SAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nvar AsyncScheduler = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        var _this = _super.call(this, SchedulerAction, function () {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        }) || this;\n        _this.actions = [];\n        _this.active = false;\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return _super.prototype.schedule.call(this, work, delay, state);\n        }\n    };\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\nexport { AsyncScheduler };\n//# sourceMappingURL=AsyncScheduler.js.map\n"]},"metadata":{},"sourceType":"module"}