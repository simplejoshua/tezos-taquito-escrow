{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\nexport function windowCount(windowSize, startWindowEvery) {\n  if (startWindowEvery === void 0) {\n    startWindowEvery = 0;\n  }\n\n  return function windowCountOperatorFunction(source) {\n    return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n  };\n}\n\nvar WindowCountOperator = /*@__PURE__*/function () {\n  function WindowCountOperator(windowSize, startWindowEvery) {\n    this.windowSize = windowSize;\n    this.startWindowEvery = startWindowEvery;\n  }\n\n  WindowCountOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  };\n\n  return WindowCountOperator;\n}();\n\nvar WindowCountSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(WindowCountSubscriber, _super);\n\n  function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.destination = destination;\n    _this.windowSize = windowSize;\n    _this.startWindowEvery = startWindowEvery;\n    _this.windows = [new Subject()];\n    _this.count = 0;\n    destination.next(_this.windows[0]);\n    return _this;\n  }\n\n  WindowCountSubscriber.prototype._next = function (value) {\n    var startWindowEvery = this.startWindowEvery > 0 ? this.startWindowEvery : this.windowSize;\n    var destination = this.destination;\n    var windowSize = this.windowSize;\n    var windows = this.windows;\n    var len = windows.length;\n\n    for (var i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n\n    var c = this.count - windowSize + 1;\n\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      var window_1 = new Subject();\n      windows.push(window_1);\n      destination.next(window_1);\n    }\n  };\n\n  WindowCountSubscriber.prototype._error = function (err) {\n    var windows = this.windows;\n\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n\n    this.destination.error(err);\n  };\n\n  WindowCountSubscriber.prototype._complete = function () {\n    var windows = this.windows;\n\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n\n    this.destination.complete();\n  };\n\n  WindowCountSubscriber.prototype._unsubscribe = function () {\n    this.count = 0;\n    this.windows = null;\n  };\n\n  return WindowCountSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/windowCount.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\nexport function windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) {\n        startWindowEvery = 0;\n    }\n    return function windowCountOperatorFunction(source) {\n        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n    };\n}\nvar WindowCountOperator = /*@__PURE__*/ (function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\nvar WindowCountSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowSize = windowSize;\n        _this.startWindowEvery = startWindowEvery;\n        _this.windows = [new Subject()];\n        _this.count = 0;\n        destination.next(_this.windows[0]);\n        return _this;\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber));\n//# sourceMappingURL=windowCount.js.map\n"]},"metadata":{},"sourceType":"module"}