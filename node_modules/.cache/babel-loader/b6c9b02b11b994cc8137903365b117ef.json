{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function distinctUntilChanged(compare, keySelector) {\n  return function (source) {\n    return source.lift(new DistinctUntilChangedOperator(compare, keySelector));\n  };\n}\n\nvar DistinctUntilChangedOperator = /*@__PURE__*/function () {\n  function DistinctUntilChangedOperator(compare, keySelector) {\n    this.compare = compare;\n    this.keySelector = keySelector;\n  }\n\n  DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  };\n\n  return DistinctUntilChangedOperator;\n}();\n\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(DistinctUntilChangedSubscriber, _super);\n\n  function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.keySelector = keySelector;\n    _this.hasKey = false;\n\n    if (typeof compare === 'function') {\n      _this.compare = compare;\n    }\n\n    return _this;\n  }\n\n  DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n    return x === y;\n  };\n\n  DistinctUntilChangedSubscriber.prototype._next = function (value) {\n    var key;\n\n    try {\n      var keySelector = this.keySelector;\n      key = keySelector ? keySelector(value) : value;\n    } catch (err) {\n      return this.destination.error(err);\n    }\n\n    var result = false;\n\n    if (this.hasKey) {\n      try {\n        var compare = this.compare;\n        result = compare(this.key, key);\n      } catch (err) {\n        return this.destination.error(err);\n      }\n    } else {\n      this.hasKey = true;\n    }\n\n    if (!result) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  };\n\n  return DistinctUntilChangedSubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/distinctUntilChanged.ts"],"names":[],"mappings":";AACA,OAAO,KAAE,OAAT,MAAqB,OAArB;AA8DA,SAAM,UAAN,QAAgB,eAAhB;AACE,OAAA,SAAO,oBAAP,CAAkC,OAAlC,EAAyC,WAAzC,EAAkC;EACnC,OAAA,UAAA,MAAA,EAAA;IAAA,OAAA,MAAA,CAAA,IAAA,CAAA,IAAA,4BAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAA;EAAA,CAAA;AAED;;IACE,4BAAA,GAAA,aAAoD,YACR;EADxB,SAAA,4BAAA,CAAgC,OAAhC,EAAgC,WAAhC,EAAgC;IAChC,KAAA,OAAA,GAAA,OAAA;IACnB,KAAA,WAAA,GAAA,WAAA;EAED;;EACE,4BAAwB,CAAA,SAAxB,CAA4B,IAA5B,GAA4B,UAAA,UAAA,EAA+B,MAA/B,EAA2C;IACxE,OAAA,MAAA,CAAA,SAAA,CAAA,IAAA,8BAAA,CAAA,UAAA,EAAA,KAAA,OAAA,EAAA,KAAA,WAAA,CAAA,CAAA;EACH,CAFI;;EAEH,OAAA,4BAAA;AAOD,CAdsD,E;;IAcH,8BAAA,GAAA,aAAA,UAAa,MAAb,EAAa;EAI9D,OAAA,CAAA,SAAA,CAAA,8BAAA,EAAY,MAAZ;;EAAA,SAAA,8BAAA,CAGQ,WAHR,EAGoB,OAHpB,EAOC,WAPD,EAOC;IALmB,IAAA,KAAA,GAAA,MAAW,CAAX,IAAA,CAAA,IAAA,EAAA,WAAA,KAAwB,IAAxB;;IAJZ,KAAA,CAAA,WAAA,GAAuB,WAAvB;IAMN,KAAI,CAAA,MAAJ,GAAW,KAAX;;QACE,OAAK,OAAL,KAAe,U,EAAQ;MACxB,KAAA,CAAA,OAAA,GAAA,OAAA;;;IACF,OAAA,KAAA;EAED;;EACE,8BAAe,CAAA,SAAf,CAAe,OAAf,GAAe,UAAA,CAAA,EAAA,CAAA,EAAA;IAChB,OAAA,CAAA,KAAA,CAAA;EAED,CAHE;;EAIA,8BAAa,CAAA,SAAb,CAAa,KAAb,GAAa,UAAA,KAAA,EAAA;IACb,IAAI,GAAJ;;QACU;MACR,IAAG,WAAG,GAAY,KAAE,WAApB;MACD,GAAA,GAAA,WAAA,GAAA,WAAA,CAAA,KAAA,CAAA,GAAA,KAAA;IAAC,C,CACA,OAAA,GAAA,EAAO;MACR,OAAA,KAAA,WAAA,CAAA,KAAA,CAAA,GAAA,CAAA;IACD;;IACA,IAAI,MAAK,GAAA,KAAT;;QACE,KAAI,M,EAAA;UACM;QACR,IAAA,OAAS,GAAA,KAAQ,OAAjB;QACD,MAAA,GAAA,OAAA,CAAA,KAAA,GAAA,EAAA,GAAA,CAAA;MAAC,C,CACA,OAAA,GAAA,EAAO;QACR,OAAA,KAAA,WAAA,CAAA,KAAA,CAAA,GAAA,CAAA;MACF;IAAM,C,MACL;MACD,KAAA,MAAA,GAAA,IAAA;IACD;;QACE,CAAA,M,EAAQ;MACR,KAAK,GAAL,GAAK,GAAL;MACD,KAAA,WAAA,CAAA,IAAA,CAAA,KAAA;IACF;EACH,CAvBI;;EAlB+C,OAAA,8BAAA;CAAA,C,UAAA,C","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function distinctUntilChanged(compare, keySelector) {\n    return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };\n}\nvar DistinctUntilChangedOperator = /*@__PURE__*/ (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.hasKey = false;\n        if (typeof compare === 'function') {\n            _this.compare = compare;\n        }\n        return _this;\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            var keySelector = this.keySelector;\n            key = keySelector ? keySelector(value) : value;\n        }\n        catch (err) {\n            return this.destination.error(err);\n        }\n        var result = false;\n        if (this.hasKey) {\n            try {\n                var compare = this.compare;\n                result = compare(this.key, key);\n            }\n            catch (err) {\n                return this.destination.error(err);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (!result) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n"]},"metadata":{},"sourceType":"module"}