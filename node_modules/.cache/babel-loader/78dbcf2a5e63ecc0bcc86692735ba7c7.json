{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isDOM } from \"rc-util/es/Dom/findDOMNode\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { collectScroller, getVisibleArea, getWin, toNum } from \"../util\";\n\nfunction splitPoints() {\n  var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return [points[0], points[1]];\n}\n\nfunction getAlignPoint(rect, points) {\n  var topBottom = points[0];\n  var leftRight = points[1];\n  var x;\n  var y; // Top & Bottom\n\n  if (topBottom === 't') {\n    y = rect.y;\n  } else if (topBottom === 'b') {\n    y = rect.y + rect.height;\n  } else {\n    y = rect.y + rect.height / 2;\n  } // Left & Right\n\n\n  if (leftRight === 'l') {\n    x = rect.x;\n  } else if (leftRight === 'r') {\n    x = rect.x + rect.width;\n  } else {\n    x = rect.x + rect.width / 2;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n\nfunction reversePoints(points, index) {\n  var reverseMap = {\n    t: 'b',\n    b: 't',\n    l: 'r',\n    r: 'l'\n  };\n  return points.map(function (point, i) {\n    if (i === index) {\n      return reverseMap[point] || 'c';\n    }\n\n    return point;\n  }).join('');\n}\n\nexport default function useAlign(open, popupEle, target, placement, builtinPlacements, popupAlign, onPopupAlign) {\n  var _React$useState = React.useState({\n    ready: false,\n    offsetX: 0,\n    offsetY: 0,\n    arrowX: 0,\n    arrowY: 0,\n    scaleX: 1,\n    scaleY: 1,\n    align: builtinPlacements[placement] || {}\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      offsetInfo = _React$useState2[0],\n      setOffsetInfo = _React$useState2[1];\n\n  var alignCountRef = React.useRef(0);\n  var scrollerList = React.useMemo(function () {\n    if (!popupEle) {\n      return [];\n    }\n\n    return collectScroller(popupEle);\n  }, [popupEle]); // ========================= Flip ==========================\n  // We will memo flip info.\n  // If size change to make flip, it will memo the flip info and use it in next align.\n\n  var prevFlipRef = React.useRef({});\n\n  var resetFlipCache = function resetFlipCache() {\n    prevFlipRef.current = {};\n  };\n\n  if (!open) {\n    resetFlipCache();\n  } // ========================= Align =========================\n\n\n  var onAlign = useEvent(function () {\n    if (popupEle && target && open) {\n      var popupElement = popupEle;\n      var originLeft = popupElement.style.left;\n      var originTop = popupElement.style.top;\n      var doc = popupElement.ownerDocument;\n      var win = getWin(popupElement); // Placement\n\n      var placementInfo = _objectSpread(_objectSpread({}, builtinPlacements[placement]), popupAlign); // Reset first\n\n\n      popupElement.style.left = '0';\n      popupElement.style.top = '0'; // Calculate align style, we should consider `transform` case\n\n      var targetRect;\n\n      if (Array.isArray(target)) {\n        targetRect = {\n          x: target[0],\n          y: target[1],\n          width: 0,\n          height: 0\n        };\n      } else {\n        var rect = target.getBoundingClientRect();\n        targetRect = {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        };\n      }\n\n      var popupRect = popupElement.getBoundingClientRect();\n\n      var _win$getComputedStyle = win.getComputedStyle(popupElement),\n          width = _win$getComputedStyle.width,\n          height = _win$getComputedStyle.height;\n\n      var _doc$documentElement = doc.documentElement,\n          clientWidth = _doc$documentElement.clientWidth,\n          clientHeight = _doc$documentElement.clientHeight,\n          scrollWidth = _doc$documentElement.scrollWidth,\n          scrollHeight = _doc$documentElement.scrollHeight,\n          scrollTop = _doc$documentElement.scrollTop,\n          scrollLeft = _doc$documentElement.scrollLeft;\n      var popupHeight = popupRect.height;\n      var popupWidth = popupRect.width;\n      var targetHeight = targetRect.height;\n      var targetWidth = targetRect.width; // Get bounding of visible area\n\n      var visibleArea = placementInfo.htmlRegion === 'scroll' ? // Scroll region should take scrollLeft & scrollTop into account\n      {\n        left: -scrollLeft,\n        top: -scrollTop,\n        right: scrollWidth - scrollLeft,\n        bottom: scrollHeight - scrollTop\n      } : {\n        left: 0,\n        top: 0,\n        right: clientWidth,\n        bottom: clientHeight\n      };\n      visibleArea = getVisibleArea(visibleArea, scrollerList); // Reset back\n\n      popupElement.style.left = originLeft;\n      popupElement.style.top = originTop; // Calculate scale\n\n      var _scaleX = toNum(Math.round(popupWidth / parseFloat(width) * 1000) / 1000);\n\n      var _scaleY = toNum(Math.round(popupHeight / parseFloat(height) * 1000) / 1000); // No need to align since it's not visible in view\n\n\n      if (_scaleX === 0 || _scaleY === 0 || isDOM(target) && !isVisible(target)) {\n        return;\n      } // Offset\n\n\n      var offset = placementInfo.offset,\n          targetOffset = placementInfo.targetOffset;\n\n      var _ref = offset || [],\n          _ref2 = _slicedToArray(_ref, 2),\n          _ref2$ = _ref2[0],\n          popupOffsetX = _ref2$ === void 0 ? 0 : _ref2$,\n          _ref2$2 = _ref2[1],\n          popupOffsetY = _ref2$2 === void 0 ? 0 : _ref2$2;\n\n      var _ref3 = targetOffset || [],\n          _ref4 = _slicedToArray(_ref3, 2),\n          _ref4$ = _ref4[0],\n          targetOffsetX = _ref4$ === void 0 ? 0 : _ref4$,\n          _ref4$2 = _ref4[1],\n          targetOffsetY = _ref4$2 === void 0 ? 0 : _ref4$2;\n\n      targetRect.x += targetOffsetX;\n      targetRect.y += targetOffsetY; // Points\n\n      var _ref5 = placementInfo.points || [],\n          _ref6 = _slicedToArray(_ref5, 2),\n          popupPoint = _ref6[0],\n          targetPoint = _ref6[1];\n\n      var targetPoints = splitPoints(targetPoint);\n      var popupPoints = splitPoints(popupPoint);\n      var targetAlignPoint = getAlignPoint(targetRect, targetPoints);\n      var popupAlignPoint = getAlignPoint(popupRect, popupPoints); // Real align info may not same as origin one\n\n      var nextAlignInfo = _objectSpread({}, placementInfo); // Next Offset\n\n\n      var nextOffsetX = targetAlignPoint.x - popupAlignPoint.x + popupOffsetX;\n      var nextOffsetY = targetAlignPoint.y - popupAlignPoint.y + popupOffsetY; // ============== Intersection ===============\n      // Get area by position. Used for check if flip area is better\n\n      function getIntersectionVisibleArea(offsetX, offsetY) {\n        var l = popupRect.x + offsetX;\n        var t = popupRect.y + offsetY;\n        var r = l + popupWidth;\n        var b = t + popupHeight;\n        var visibleL = Math.max(l, visibleArea.left);\n        var visibleT = Math.max(t, visibleArea.top);\n        var visibleR = Math.min(r, visibleArea.right);\n        var visibleB = Math.min(b, visibleArea.bottom);\n        return Math.max(0, (visibleR - visibleL) * (visibleB - visibleT));\n      }\n\n      var originIntersectionVisibleArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY); // ========================== Overflow ===========================\n\n      var targetAlignPointTL = getAlignPoint(targetRect, ['t', 'l']);\n      var popupAlignPointTL = getAlignPoint(popupRect, ['t', 'l']);\n      var targetAlignPointBR = getAlignPoint(targetRect, ['b', 'r']);\n      var popupAlignPointBR = getAlignPoint(popupRect, ['b', 'r']);\n      var overflow = placementInfo.overflow || {};\n      var adjustX = overflow.adjustX,\n          adjustY = overflow.adjustY,\n          shiftX = overflow.shiftX,\n          shiftY = overflow.shiftY;\n\n      var supportAdjust = function supportAdjust(val) {\n        if (typeof val === 'boolean') {\n          return val;\n        }\n\n        return val >= 0;\n      }; // Prepare position\n\n\n      var nextPopupY;\n      var nextPopupBottom;\n      var nextPopupX;\n      var nextPopupRight;\n\n      function syncNextPopupPosition() {\n        nextPopupY = popupRect.y + nextOffsetY;\n        nextPopupBottom = nextPopupY + popupHeight;\n        nextPopupX = popupRect.x + nextOffsetX;\n        nextPopupRight = nextPopupX + popupWidth;\n      }\n\n      syncNextPopupPosition(); // >>>>>>>>>> Top & Bottom\n\n      var needAdjustY = supportAdjust(adjustY);\n      var sameTB = popupPoints[0] === targetPoints[0]; // Bottom to Top\n\n      if (needAdjustY && popupPoints[0] === 't' && (nextPopupBottom > visibleArea.bottom || prevFlipRef.current.bt)) {\n        var tmpNextOffsetY = nextOffsetY;\n\n        if (sameTB) {\n          tmpNextOffsetY -= popupHeight - targetHeight;\n        } else {\n          tmpNextOffsetY = targetAlignPointTL.y - popupAlignPointBR.y - popupOffsetY;\n        }\n\n        if (getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.bt = true;\n          nextOffsetY = tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.bt = false;\n        }\n      } // Top to Bottom\n\n\n      if (needAdjustY && popupPoints[0] === 'b' && (nextPopupY < visibleArea.top || prevFlipRef.current.tb)) {\n        var _tmpNextOffsetY = nextOffsetY;\n\n        if (sameTB) {\n          _tmpNextOffsetY += popupHeight - targetHeight;\n        } else {\n          _tmpNextOffsetY = targetAlignPointBR.y - popupAlignPointTL.y - popupOffsetY;\n        }\n\n        if (getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.tb = true;\n          nextOffsetY = _tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.tb = false;\n        }\n      } // >>>>>>>>>> Left & Right\n\n\n      var needAdjustX = supportAdjust(adjustX); // >>>>> Flip\n\n      var sameLR = popupPoints[1] === targetPoints[1]; // Right to Left\n\n      if (needAdjustX && popupPoints[1] === 'l' && (nextPopupRight > visibleArea.right || prevFlipRef.current.rl)) {\n        var tmpNextOffsetX = nextOffsetX;\n\n        if (sameLR) {\n          tmpNextOffsetX -= popupWidth - targetWidth;\n        } else {\n          tmpNextOffsetX = targetAlignPointTL.x - popupAlignPointBR.x - popupOffsetX;\n        }\n\n        if (getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.rl = true;\n          nextOffsetX = tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.rl = false;\n        }\n      } // Left to Right\n\n\n      if (needAdjustX && popupPoints[1] === 'r' && (nextPopupX < visibleArea.left || prevFlipRef.current.lr)) {\n        var _tmpNextOffsetX = nextOffsetX;\n\n        if (sameLR) {\n          _tmpNextOffsetX += popupWidth - targetWidth;\n        } else {\n          _tmpNextOffsetX = targetAlignPointBR.x - popupAlignPointTL.x - popupOffsetX;\n        }\n\n        if (getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.lr = true;\n          nextOffsetX = _tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.lr = false;\n        }\n      } // ============================ Shift ============================\n\n\n      syncNextPopupPosition();\n      var numShiftX = shiftX === true ? 0 : shiftX;\n\n      if (typeof numShiftX === 'number') {\n        // Left\n        if (nextPopupX < visibleArea.left) {\n          nextOffsetX -= nextPopupX - visibleArea.left;\n\n          if (targetRect.x + targetWidth < visibleArea.left + numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.left + targetWidth - numShiftX;\n          }\n        } // Right\n\n\n        if (nextPopupRight > visibleArea.right) {\n          nextOffsetX -= nextPopupRight - visibleArea.right;\n\n          if (targetRect.x > visibleArea.right - numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.right + numShiftX;\n          }\n        }\n      }\n\n      var numShiftY = shiftY === true ? 0 : shiftY;\n\n      if (typeof numShiftY === 'number') {\n        // Top\n        if (nextPopupY < visibleArea.top) {\n          nextOffsetY -= nextPopupY - visibleArea.top;\n\n          if (targetRect.y + targetHeight < visibleArea.top + numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.top + targetHeight - numShiftY;\n          }\n        } // Bottom\n\n\n        if (nextPopupBottom > visibleArea.bottom) {\n          nextOffsetY -= nextPopupBottom - visibleArea.bottom;\n\n          if (targetRect.y > visibleArea.bottom - numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.bottom + numShiftY;\n          }\n        }\n      } // ============================ Arrow ============================\n      // Arrow center align\n\n\n      var popupLeft = popupRect.x + nextOffsetX;\n      var popupRight = popupLeft + popupWidth;\n      var popupTop = popupRect.y + nextOffsetY;\n      var popupBottom = popupTop + popupHeight;\n      var targetLeft = targetRect.x;\n      var targetRight = targetLeft + targetWidth;\n      var targetTop = targetRect.y;\n      var targetBottom = targetTop + targetHeight;\n      var maxLeft = Math.max(popupLeft, targetLeft);\n      var minRight = Math.min(popupRight, targetRight);\n      var xCenter = (maxLeft + minRight) / 2;\n      var nextArrowX = xCenter - popupLeft;\n      var maxTop = Math.max(popupTop, targetTop);\n      var minBottom = Math.min(popupBottom, targetBottom);\n      var yCenter = (maxTop + minBottom) / 2;\n      var nextArrowY = yCenter - popupTop;\n      onPopupAlign === null || onPopupAlign === void 0 ? void 0 : onPopupAlign(popupEle, nextAlignInfo);\n      setOffsetInfo({\n        ready: true,\n        offsetX: nextOffsetX / _scaleX,\n        offsetY: nextOffsetY / _scaleY,\n        arrowX: nextArrowX / _scaleX,\n        arrowY: nextArrowY / _scaleY,\n        scaleX: _scaleX,\n        scaleY: _scaleY,\n        align: nextAlignInfo\n      });\n    }\n  });\n\n  var triggerAlign = function triggerAlign() {\n    alignCountRef.current += 1;\n    var id = alignCountRef.current; // Merge all align requirement into one frame\n\n    Promise.resolve().then(function () {\n      if (alignCountRef.current === id) {\n        onAlign();\n      }\n    });\n  }; // Reset ready status when placement & open changed\n\n\n  var resetReady = function resetReady() {\n    setOffsetInfo(function (ori) {\n      return _objectSpread(_objectSpread({}, ori), {}, {\n        ready: false\n      });\n    });\n  };\n\n  useLayoutEffect(resetReady, [placement]);\n  useLayoutEffect(function () {\n    if (!open) {\n      resetReady();\n    }\n  }, [open]);\n  return [offsetInfo.ready, offsetInfo.offsetX, offsetInfo.offsetY, offsetInfo.arrowX, offsetInfo.arrowY, offsetInfo.scaleX, offsetInfo.scaleY, offsetInfo.align, triggerAlign];\n}","map":{"version":3,"names":["_objectSpread","_slicedToArray","isDOM","isVisible","useEvent","useLayoutEffect","React","collectScroller","getVisibleArea","getWin","toNum","splitPoints","points","arguments","length","undefined","getAlignPoint","rect","topBottom","leftRight","x","y","height","width","reversePoints","index","reverseMap","t","b","l","r","map","point","i","join","useAlign","open","popupEle","target","placement","builtinPlacements","popupAlign","onPopupAlign","_React$useState","useState","ready","offsetX","offsetY","arrowX","arrowY","scaleX","scaleY","align","_React$useState2","offsetInfo","setOffsetInfo","alignCountRef","useRef","scrollerList","useMemo","prevFlipRef","resetFlipCache","current","onAlign","popupElement","originLeft","style","left","originTop","top","doc","ownerDocument","win","placementInfo","targetRect","Array","isArray","getBoundingClientRect","popupRect","_win$getComputedStyle","getComputedStyle","_doc$documentElement","documentElement","clientWidth","clientHeight","scrollWidth","scrollHeight","scrollTop","scrollLeft","popupHeight","popupWidth","targetHeight","targetWidth","visibleArea","htmlRegion","right","bottom","_scaleX","Math","round","parseFloat","_scaleY","offset","targetOffset","_ref","_ref2","_ref2$","popupOffsetX","_ref2$2","popupOffsetY","_ref3","_ref4","_ref4$","targetOffsetX","_ref4$2","targetOffsetY","_ref5","_ref6","popupPoint","targetPoint","targetPoints","popupPoints","targetAlignPoint","popupAlignPoint","nextAlignInfo","nextOffsetX","nextOffsetY","getIntersectionVisibleArea","visibleL","max","visibleT","visibleR","min","visibleB","originIntersectionVisibleArea","targetAlignPointTL","popupAlignPointTL","targetAlignPointBR","popupAlignPointBR","overflow","adjustX","adjustY","shiftX","shiftY","supportAdjust","val","nextPopupY","nextPopupBottom","nextPopupX","nextPopupRight","syncNextPopupPosition","needAdjustY","sameTB","bt","tmpNextOffsetY","tb","_tmpNextOffsetY","needAdjustX","sameLR","rl","tmpNextOffsetX","lr","_tmpNextOffsetX","numShiftX","numShiftY","popupLeft","popupRight","popupTop","popupBottom","targetLeft","targetRight","targetTop","targetBottom","maxLeft","minRight","xCenter","nextArrowX","maxTop","minBottom","yCenter","nextArrowY","triggerAlign","id","Promise","resolve","then","resetReady","ori"],"sources":["C:/Users/Joshua Doros/Desktop/Tezos/tezos-taquito-escrow/node_modules/@rc-component/trigger/es/hooks/useAlign.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isDOM } from \"rc-util/es/Dom/findDOMNode\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { collectScroller, getVisibleArea, getWin, toNum } from \"../util\";\nfunction splitPoints() {\n  var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return [points[0], points[1]];\n}\nfunction getAlignPoint(rect, points) {\n  var topBottom = points[0];\n  var leftRight = points[1];\n  var x;\n  var y;\n\n  // Top & Bottom\n  if (topBottom === 't') {\n    y = rect.y;\n  } else if (topBottom === 'b') {\n    y = rect.y + rect.height;\n  } else {\n    y = rect.y + rect.height / 2;\n  }\n\n  // Left & Right\n  if (leftRight === 'l') {\n    x = rect.x;\n  } else if (leftRight === 'r') {\n    x = rect.x + rect.width;\n  } else {\n    x = rect.x + rect.width / 2;\n  }\n  return {\n    x: x,\n    y: y\n  };\n}\nfunction reversePoints(points, index) {\n  var reverseMap = {\n    t: 'b',\n    b: 't',\n    l: 'r',\n    r: 'l'\n  };\n  return points.map(function (point, i) {\n    if (i === index) {\n      return reverseMap[point] || 'c';\n    }\n    return point;\n  }).join('');\n}\nexport default function useAlign(open, popupEle, target, placement, builtinPlacements, popupAlign, onPopupAlign) {\n  var _React$useState = React.useState({\n      ready: false,\n      offsetX: 0,\n      offsetY: 0,\n      arrowX: 0,\n      arrowY: 0,\n      scaleX: 1,\n      scaleY: 1,\n      align: builtinPlacements[placement] || {}\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    offsetInfo = _React$useState2[0],\n    setOffsetInfo = _React$useState2[1];\n  var alignCountRef = React.useRef(0);\n  var scrollerList = React.useMemo(function () {\n    if (!popupEle) {\n      return [];\n    }\n    return collectScroller(popupEle);\n  }, [popupEle]);\n\n  // ========================= Flip ==========================\n  // We will memo flip info.\n  // If size change to make flip, it will memo the flip info and use it in next align.\n  var prevFlipRef = React.useRef({});\n  var resetFlipCache = function resetFlipCache() {\n    prevFlipRef.current = {};\n  };\n  if (!open) {\n    resetFlipCache();\n  }\n\n  // ========================= Align =========================\n  var onAlign = useEvent(function () {\n    if (popupEle && target && open) {\n      var popupElement = popupEle;\n      var originLeft = popupElement.style.left;\n      var originTop = popupElement.style.top;\n      var doc = popupElement.ownerDocument;\n      var win = getWin(popupElement);\n\n      // Placement\n      var placementInfo = _objectSpread(_objectSpread({}, builtinPlacements[placement]), popupAlign);\n\n      // Reset first\n      popupElement.style.left = '0';\n      popupElement.style.top = '0';\n\n      // Calculate align style, we should consider `transform` case\n      var targetRect;\n      if (Array.isArray(target)) {\n        targetRect = {\n          x: target[0],\n          y: target[1],\n          width: 0,\n          height: 0\n        };\n      } else {\n        var rect = target.getBoundingClientRect();\n        targetRect = {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        };\n      }\n      var popupRect = popupElement.getBoundingClientRect();\n      var _win$getComputedStyle = win.getComputedStyle(popupElement),\n        width = _win$getComputedStyle.width,\n        height = _win$getComputedStyle.height;\n      var _doc$documentElement = doc.documentElement,\n        clientWidth = _doc$documentElement.clientWidth,\n        clientHeight = _doc$documentElement.clientHeight,\n        scrollWidth = _doc$documentElement.scrollWidth,\n        scrollHeight = _doc$documentElement.scrollHeight,\n        scrollTop = _doc$documentElement.scrollTop,\n        scrollLeft = _doc$documentElement.scrollLeft;\n      var popupHeight = popupRect.height;\n      var popupWidth = popupRect.width;\n      var targetHeight = targetRect.height;\n      var targetWidth = targetRect.width;\n\n      // Get bounding of visible area\n      var visibleArea = placementInfo.htmlRegion === 'scroll' ?\n      // Scroll region should take scrollLeft & scrollTop into account\n      {\n        left: -scrollLeft,\n        top: -scrollTop,\n        right: scrollWidth - scrollLeft,\n        bottom: scrollHeight - scrollTop\n      } : {\n        left: 0,\n        top: 0,\n        right: clientWidth,\n        bottom: clientHeight\n      };\n      visibleArea = getVisibleArea(visibleArea, scrollerList);\n\n      // Reset back\n      popupElement.style.left = originLeft;\n      popupElement.style.top = originTop;\n\n      // Calculate scale\n      var _scaleX = toNum(Math.round(popupWidth / parseFloat(width) * 1000) / 1000);\n      var _scaleY = toNum(Math.round(popupHeight / parseFloat(height) * 1000) / 1000);\n\n      // No need to align since it's not visible in view\n      if (_scaleX === 0 || _scaleY === 0 || isDOM(target) && !isVisible(target)) {\n        return;\n      }\n\n      // Offset\n      var offset = placementInfo.offset,\n        targetOffset = placementInfo.targetOffset;\n      var _ref = offset || [],\n        _ref2 = _slicedToArray(_ref, 2),\n        _ref2$ = _ref2[0],\n        popupOffsetX = _ref2$ === void 0 ? 0 : _ref2$,\n        _ref2$2 = _ref2[1],\n        popupOffsetY = _ref2$2 === void 0 ? 0 : _ref2$2;\n      var _ref3 = targetOffset || [],\n        _ref4 = _slicedToArray(_ref3, 2),\n        _ref4$ = _ref4[0],\n        targetOffsetX = _ref4$ === void 0 ? 0 : _ref4$,\n        _ref4$2 = _ref4[1],\n        targetOffsetY = _ref4$2 === void 0 ? 0 : _ref4$2;\n      targetRect.x += targetOffsetX;\n      targetRect.y += targetOffsetY;\n\n      // Points\n      var _ref5 = placementInfo.points || [],\n        _ref6 = _slicedToArray(_ref5, 2),\n        popupPoint = _ref6[0],\n        targetPoint = _ref6[1];\n      var targetPoints = splitPoints(targetPoint);\n      var popupPoints = splitPoints(popupPoint);\n      var targetAlignPoint = getAlignPoint(targetRect, targetPoints);\n      var popupAlignPoint = getAlignPoint(popupRect, popupPoints);\n\n      // Real align info may not same as origin one\n      var nextAlignInfo = _objectSpread({}, placementInfo);\n\n      // Next Offset\n      var nextOffsetX = targetAlignPoint.x - popupAlignPoint.x + popupOffsetX;\n      var nextOffsetY = targetAlignPoint.y - popupAlignPoint.y + popupOffsetY;\n\n      // ============== Intersection ===============\n      // Get area by position. Used for check if flip area is better\n      function getIntersectionVisibleArea(offsetX, offsetY) {\n        var l = popupRect.x + offsetX;\n        var t = popupRect.y + offsetY;\n        var r = l + popupWidth;\n        var b = t + popupHeight;\n        var visibleL = Math.max(l, visibleArea.left);\n        var visibleT = Math.max(t, visibleArea.top);\n        var visibleR = Math.min(r, visibleArea.right);\n        var visibleB = Math.min(b, visibleArea.bottom);\n        return Math.max(0, (visibleR - visibleL) * (visibleB - visibleT));\n      }\n      var originIntersectionVisibleArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY);\n\n      // ========================== Overflow ===========================\n      var targetAlignPointTL = getAlignPoint(targetRect, ['t', 'l']);\n      var popupAlignPointTL = getAlignPoint(popupRect, ['t', 'l']);\n      var targetAlignPointBR = getAlignPoint(targetRect, ['b', 'r']);\n      var popupAlignPointBR = getAlignPoint(popupRect, ['b', 'r']);\n      var overflow = placementInfo.overflow || {};\n      var adjustX = overflow.adjustX,\n        adjustY = overflow.adjustY,\n        shiftX = overflow.shiftX,\n        shiftY = overflow.shiftY;\n      var supportAdjust = function supportAdjust(val) {\n        if (typeof val === 'boolean') {\n          return val;\n        }\n        return val >= 0;\n      };\n\n      // Prepare position\n      var nextPopupY;\n      var nextPopupBottom;\n      var nextPopupX;\n      var nextPopupRight;\n      function syncNextPopupPosition() {\n        nextPopupY = popupRect.y + nextOffsetY;\n        nextPopupBottom = nextPopupY + popupHeight;\n        nextPopupX = popupRect.x + nextOffsetX;\n        nextPopupRight = nextPopupX + popupWidth;\n      }\n      syncNextPopupPosition();\n\n      // >>>>>>>>>> Top & Bottom\n      var needAdjustY = supportAdjust(adjustY);\n      var sameTB = popupPoints[0] === targetPoints[0];\n\n      // Bottom to Top\n      if (needAdjustY && popupPoints[0] === 't' && (nextPopupBottom > visibleArea.bottom || prevFlipRef.current.bt)) {\n        var tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          tmpNextOffsetY -= popupHeight - targetHeight;\n        } else {\n          tmpNextOffsetY = targetAlignPointTL.y - popupAlignPointBR.y - popupOffsetY;\n        }\n        if (getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.bt = true;\n          nextOffsetY = tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.bt = false;\n        }\n      }\n\n      // Top to Bottom\n      if (needAdjustY && popupPoints[0] === 'b' && (nextPopupY < visibleArea.top || prevFlipRef.current.tb)) {\n        var _tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          _tmpNextOffsetY += popupHeight - targetHeight;\n        } else {\n          _tmpNextOffsetY = targetAlignPointBR.y - popupAlignPointTL.y - popupOffsetY;\n        }\n        if (getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.tb = true;\n          nextOffsetY = _tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.tb = false;\n        }\n      }\n\n      // >>>>>>>>>> Left & Right\n      var needAdjustX = supportAdjust(adjustX);\n\n      // >>>>> Flip\n      var sameLR = popupPoints[1] === targetPoints[1];\n\n      // Right to Left\n      if (needAdjustX && popupPoints[1] === 'l' && (nextPopupRight > visibleArea.right || prevFlipRef.current.rl)) {\n        var tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          tmpNextOffsetX -= popupWidth - targetWidth;\n        } else {\n          tmpNextOffsetX = targetAlignPointTL.x - popupAlignPointBR.x - popupOffsetX;\n        }\n        if (getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.rl = true;\n          nextOffsetX = tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.rl = false;\n        }\n      }\n\n      // Left to Right\n      if (needAdjustX && popupPoints[1] === 'r' && (nextPopupX < visibleArea.left || prevFlipRef.current.lr)) {\n        var _tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          _tmpNextOffsetX += popupWidth - targetWidth;\n        } else {\n          _tmpNextOffsetX = targetAlignPointBR.x - popupAlignPointTL.x - popupOffsetX;\n        }\n        if (getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY) >= originIntersectionVisibleArea) {\n          prevFlipRef.current.lr = true;\n          nextOffsetX = _tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.lr = false;\n        }\n      }\n\n      // ============================ Shift ============================\n      syncNextPopupPosition();\n      var numShiftX = shiftX === true ? 0 : shiftX;\n      if (typeof numShiftX === 'number') {\n        // Left\n        if (nextPopupX < visibleArea.left) {\n          nextOffsetX -= nextPopupX - visibleArea.left;\n          if (targetRect.x + targetWidth < visibleArea.left + numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.left + targetWidth - numShiftX;\n          }\n        }\n\n        // Right\n        if (nextPopupRight > visibleArea.right) {\n          nextOffsetX -= nextPopupRight - visibleArea.right;\n          if (targetRect.x > visibleArea.right - numShiftX) {\n            nextOffsetX += targetRect.x - visibleArea.right + numShiftX;\n          }\n        }\n      }\n      var numShiftY = shiftY === true ? 0 : shiftY;\n      if (typeof numShiftY === 'number') {\n        // Top\n        if (nextPopupY < visibleArea.top) {\n          nextOffsetY -= nextPopupY - visibleArea.top;\n          if (targetRect.y + targetHeight < visibleArea.top + numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.top + targetHeight - numShiftY;\n          }\n        }\n\n        // Bottom\n        if (nextPopupBottom > visibleArea.bottom) {\n          nextOffsetY -= nextPopupBottom - visibleArea.bottom;\n          if (targetRect.y > visibleArea.bottom - numShiftY) {\n            nextOffsetY += targetRect.y - visibleArea.bottom + numShiftY;\n          }\n        }\n      }\n\n      // ============================ Arrow ============================\n      // Arrow center align\n      var popupLeft = popupRect.x + nextOffsetX;\n      var popupRight = popupLeft + popupWidth;\n      var popupTop = popupRect.y + nextOffsetY;\n      var popupBottom = popupTop + popupHeight;\n      var targetLeft = targetRect.x;\n      var targetRight = targetLeft + targetWidth;\n      var targetTop = targetRect.y;\n      var targetBottom = targetTop + targetHeight;\n      var maxLeft = Math.max(popupLeft, targetLeft);\n      var minRight = Math.min(popupRight, targetRight);\n      var xCenter = (maxLeft + minRight) / 2;\n      var nextArrowX = xCenter - popupLeft;\n      var maxTop = Math.max(popupTop, targetTop);\n      var minBottom = Math.min(popupBottom, targetBottom);\n      var yCenter = (maxTop + minBottom) / 2;\n      var nextArrowY = yCenter - popupTop;\n      onPopupAlign === null || onPopupAlign === void 0 ? void 0 : onPopupAlign(popupEle, nextAlignInfo);\n      setOffsetInfo({\n        ready: true,\n        offsetX: nextOffsetX / _scaleX,\n        offsetY: nextOffsetY / _scaleY,\n        arrowX: nextArrowX / _scaleX,\n        arrowY: nextArrowY / _scaleY,\n        scaleX: _scaleX,\n        scaleY: _scaleY,\n        align: nextAlignInfo\n      });\n    }\n  });\n  var triggerAlign = function triggerAlign() {\n    alignCountRef.current += 1;\n    var id = alignCountRef.current;\n\n    // Merge all align requirement into one frame\n    Promise.resolve().then(function () {\n      if (alignCountRef.current === id) {\n        onAlign();\n      }\n    });\n  };\n\n  // Reset ready status when placement & open changed\n  var resetReady = function resetReady() {\n    setOffsetInfo(function (ori) {\n      return _objectSpread(_objectSpread({}, ori), {}, {\n        ready: false\n      });\n    });\n  };\n  useLayoutEffect(resetReady, [placement]);\n  useLayoutEffect(function () {\n    if (!open) {\n      resetReady();\n    }\n  }, [open]);\n  return [offsetInfo.ready, offsetInfo.offsetX, offsetInfo.offsetY, offsetInfo.arrowX, offsetInfo.arrowY, offsetInfo.scaleX, offsetInfo.scaleY, offsetInfo.align, triggerAlign];\n}"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,0CAA1B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,MAA1C,EAAkDC,KAAlD,QAA+D,SAA/D;;AACA,SAASC,WAAT,GAAuB;EACrB,IAAIC,MAAM,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAjF;EACA,OAAO,CAACD,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,CAAD,CAAlB,CAAP;AACD;;AACD,SAASI,aAAT,CAAuBC,IAAvB,EAA6BL,MAA7B,EAAqC;EACnC,IAAIM,SAAS,GAAGN,MAAM,CAAC,CAAD,CAAtB;EACA,IAAIO,SAAS,GAAGP,MAAM,CAAC,CAAD,CAAtB;EACA,IAAIQ,CAAJ;EACA,IAAIC,CAAJ,CAJmC,CAMnC;;EACA,IAAIH,SAAS,KAAK,GAAlB,EAAuB;IACrBG,CAAC,GAAGJ,IAAI,CAACI,CAAT;EACD,CAFD,MAEO,IAAIH,SAAS,KAAK,GAAlB,EAAuB;IAC5BG,CAAC,GAAGJ,IAAI,CAACI,CAAL,GAASJ,IAAI,CAACK,MAAlB;EACD,CAFM,MAEA;IACLD,CAAC,GAAGJ,IAAI,CAACI,CAAL,GAASJ,IAAI,CAACK,MAAL,GAAc,CAA3B;EACD,CAbkC,CAenC;;;EACA,IAAIH,SAAS,KAAK,GAAlB,EAAuB;IACrBC,CAAC,GAAGH,IAAI,CAACG,CAAT;EACD,CAFD,MAEO,IAAID,SAAS,KAAK,GAAlB,EAAuB;IAC5BC,CAAC,GAAGH,IAAI,CAACG,CAAL,GAASH,IAAI,CAACM,KAAlB;EACD,CAFM,MAEA;IACLH,CAAC,GAAGH,IAAI,CAACG,CAAL,GAASH,IAAI,CAACM,KAAL,GAAa,CAA1B;EACD;;EACD,OAAO;IACLH,CAAC,EAAEA,CADE;IAELC,CAAC,EAAEA;EAFE,CAAP;AAID;;AACD,SAASG,aAAT,CAAuBZ,MAAvB,EAA+Ba,KAA/B,EAAsC;EACpC,IAAIC,UAAU,GAAG;IACfC,CAAC,EAAE,GADY;IAEfC,CAAC,EAAE,GAFY;IAGfC,CAAC,EAAE,GAHY;IAIfC,CAAC,EAAE;EAJY,CAAjB;EAMA,OAAOlB,MAAM,CAACmB,GAAP,CAAW,UAAUC,KAAV,EAAiBC,CAAjB,EAAoB;IACpC,IAAIA,CAAC,KAAKR,KAAV,EAAiB;MACf,OAAOC,UAAU,CAACM,KAAD,CAAV,IAAqB,GAA5B;IACD;;IACD,OAAOA,KAAP;EACD,CALM,EAKJE,IALI,CAKC,EALD,CAAP;AAMD;;AACD,eAAe,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,QAAxB,EAAkCC,MAAlC,EAA0CC,SAA1C,EAAqDC,iBAArD,EAAwEC,UAAxE,EAAoFC,YAApF,EAAkG;EAC/G,IAAIC,eAAe,GAAGrC,KAAK,CAACsC,QAAN,CAAe;IACjCC,KAAK,EAAE,KAD0B;IAEjCC,OAAO,EAAE,CAFwB;IAGjCC,OAAO,EAAE,CAHwB;IAIjCC,MAAM,EAAE,CAJyB;IAKjCC,MAAM,EAAE,CALyB;IAMjCC,MAAM,EAAE,CANyB;IAOjCC,MAAM,EAAE,CAPyB;IAQjCC,KAAK,EAAEZ,iBAAiB,CAACD,SAAD,CAAjB,IAAgC;EARN,CAAf,CAAtB;EAAA,IAUEc,gBAAgB,GAAGpD,cAAc,CAAC0C,eAAD,EAAkB,CAAlB,CAVnC;EAAA,IAWEW,UAAU,GAAGD,gBAAgB,CAAC,CAAD,CAX/B;EAAA,IAYEE,aAAa,GAAGF,gBAAgB,CAAC,CAAD,CAZlC;;EAaA,IAAIG,aAAa,GAAGlD,KAAK,CAACmD,MAAN,CAAa,CAAb,CAApB;EACA,IAAIC,YAAY,GAAGpD,KAAK,CAACqD,OAAN,CAAc,YAAY;IAC3C,IAAI,CAACtB,QAAL,EAAe;MACb,OAAO,EAAP;IACD;;IACD,OAAO9B,eAAe,CAAC8B,QAAD,CAAtB;EACD,CALkB,EAKhB,CAACA,QAAD,CALgB,CAAnB,CAf+G,CAsB/G;EACA;EACA;;EACA,IAAIuB,WAAW,GAAGtD,KAAK,CAACmD,MAAN,CAAa,EAAb,CAAlB;;EACA,IAAII,cAAc,GAAG,SAASA,cAAT,GAA0B;IAC7CD,WAAW,CAACE,OAAZ,GAAsB,EAAtB;EACD,CAFD;;EAGA,IAAI,CAAC1B,IAAL,EAAW;IACTyB,cAAc;EACf,CA/B8G,CAiC/G;;;EACA,IAAIE,OAAO,GAAG3D,QAAQ,CAAC,YAAY;IACjC,IAAIiC,QAAQ,IAAIC,MAAZ,IAAsBF,IAA1B,EAAgC;MAC9B,IAAI4B,YAAY,GAAG3B,QAAnB;MACA,IAAI4B,UAAU,GAAGD,YAAY,CAACE,KAAb,CAAmBC,IAApC;MACA,IAAIC,SAAS,GAAGJ,YAAY,CAACE,KAAb,CAAmBG,GAAnC;MACA,IAAIC,GAAG,GAAGN,YAAY,CAACO,aAAvB;MACA,IAAIC,GAAG,GAAG/D,MAAM,CAACuD,YAAD,CAAhB,CAL8B,CAO9B;;MACA,IAAIS,aAAa,GAAGzE,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKwC,iBAAiB,CAACD,SAAD,CAAtB,CAAd,EAAkDE,UAAlD,CAAjC,CAR8B,CAU9B;;;MACAuB,YAAY,CAACE,KAAb,CAAmBC,IAAnB,GAA0B,GAA1B;MACAH,YAAY,CAACE,KAAb,CAAmBG,GAAnB,GAAyB,GAAzB,CAZ8B,CAc9B;;MACA,IAAIK,UAAJ;;MACA,IAAIC,KAAK,CAACC,OAAN,CAActC,MAAd,CAAJ,EAA2B;QACzBoC,UAAU,GAAG;UACXtD,CAAC,EAAEkB,MAAM,CAAC,CAAD,CADE;UAEXjB,CAAC,EAAEiB,MAAM,CAAC,CAAD,CAFE;UAGXf,KAAK,EAAE,CAHI;UAIXD,MAAM,EAAE;QAJG,CAAb;MAMD,CAPD,MAOO;QACL,IAAIL,IAAI,GAAGqB,MAAM,CAACuC,qBAAP,EAAX;QACAH,UAAU,GAAG;UACXtD,CAAC,EAAEH,IAAI,CAACG,CADG;UAEXC,CAAC,EAAEJ,IAAI,CAACI,CAFG;UAGXE,KAAK,EAAEN,IAAI,CAACM,KAHD;UAIXD,MAAM,EAAEL,IAAI,CAACK;QAJF,CAAb;MAMD;;MACD,IAAIwD,SAAS,GAAGd,YAAY,CAACa,qBAAb,EAAhB;;MACA,IAAIE,qBAAqB,GAAGP,GAAG,CAACQ,gBAAJ,CAAqBhB,YAArB,CAA5B;MAAA,IACEzC,KAAK,GAAGwD,qBAAqB,CAACxD,KADhC;MAAA,IAEED,MAAM,GAAGyD,qBAAqB,CAACzD,MAFjC;;MAGA,IAAI2D,oBAAoB,GAAGX,GAAG,CAACY,eAA/B;MAAA,IACEC,WAAW,GAAGF,oBAAoB,CAACE,WADrC;MAAA,IAEEC,YAAY,GAAGH,oBAAoB,CAACG,YAFtC;MAAA,IAGEC,WAAW,GAAGJ,oBAAoB,CAACI,WAHrC;MAAA,IAIEC,YAAY,GAAGL,oBAAoB,CAACK,YAJtC;MAAA,IAKEC,SAAS,GAAGN,oBAAoB,CAACM,SALnC;MAAA,IAMEC,UAAU,GAAGP,oBAAoB,CAACO,UANpC;MAOA,IAAIC,WAAW,GAAGX,SAAS,CAACxD,MAA5B;MACA,IAAIoE,UAAU,GAAGZ,SAAS,CAACvD,KAA3B;MACA,IAAIoE,YAAY,GAAGjB,UAAU,CAACpD,MAA9B;MACA,IAAIsE,WAAW,GAAGlB,UAAU,CAACnD,KAA7B,CA9C8B,CAgD9B;;MACA,IAAIsE,WAAW,GAAGpB,aAAa,CAACqB,UAAd,KAA6B,QAA7B,GAClB;MACA;QACE3B,IAAI,EAAE,CAACqB,UADT;QAEEnB,GAAG,EAAE,CAACkB,SAFR;QAGEQ,KAAK,EAAEV,WAAW,GAAGG,UAHvB;QAIEQ,MAAM,EAAEV,YAAY,GAAGC;MAJzB,CAFkB,GAOd;QACFpB,IAAI,EAAE,CADJ;QAEFE,GAAG,EAAE,CAFH;QAGF0B,KAAK,EAAEZ,WAHL;QAIFa,MAAM,EAAEZ;MAJN,CAPJ;MAaAS,WAAW,GAAGrF,cAAc,CAACqF,WAAD,EAAcnC,YAAd,CAA5B,CA9D8B,CAgE9B;;MACAM,YAAY,CAACE,KAAb,CAAmBC,IAAnB,GAA0BF,UAA1B;MACAD,YAAY,CAACE,KAAb,CAAmBG,GAAnB,GAAyBD,SAAzB,CAlE8B,CAoE9B;;MACA,IAAI6B,OAAO,GAAGvF,KAAK,CAACwF,IAAI,CAACC,KAAL,CAAWT,UAAU,GAAGU,UAAU,CAAC7E,KAAD,CAAvB,GAAiC,IAA5C,IAAoD,IAArD,CAAnB;;MACA,IAAI8E,OAAO,GAAG3F,KAAK,CAACwF,IAAI,CAACC,KAAL,CAAWV,WAAW,GAAGW,UAAU,CAAC9E,MAAD,CAAxB,GAAmC,IAA9C,IAAsD,IAAvD,CAAnB,CAtE8B,CAwE9B;;;MACA,IAAI2E,OAAO,KAAK,CAAZ,IAAiBI,OAAO,KAAK,CAA7B,IAAkCnG,KAAK,CAACoC,MAAD,CAAL,IAAiB,CAACnC,SAAS,CAACmC,MAAD,CAAjE,EAA2E;QACzE;MACD,CA3E6B,CA6E9B;;;MACA,IAAIgE,MAAM,GAAG7B,aAAa,CAAC6B,MAA3B;MAAA,IACEC,YAAY,GAAG9B,aAAa,CAAC8B,YAD/B;;MAEA,IAAIC,IAAI,GAAGF,MAAM,IAAI,EAArB;MAAA,IACEG,KAAK,GAAGxG,cAAc,CAACuG,IAAD,EAAO,CAAP,CADxB;MAAA,IAEEE,MAAM,GAAGD,KAAK,CAAC,CAAD,CAFhB;MAAA,IAGEE,YAAY,GAAGD,MAAM,KAAK,KAAK,CAAhB,GAAoB,CAApB,GAAwBA,MAHzC;MAAA,IAIEE,OAAO,GAAGH,KAAK,CAAC,CAAD,CAJjB;MAAA,IAKEI,YAAY,GAAGD,OAAO,KAAK,KAAK,CAAjB,GAAqB,CAArB,GAAyBA,OAL1C;;MAMA,IAAIE,KAAK,GAAGP,YAAY,IAAI,EAA5B;MAAA,IACEQ,KAAK,GAAG9G,cAAc,CAAC6G,KAAD,EAAQ,CAAR,CADxB;MAAA,IAEEE,MAAM,GAAGD,KAAK,CAAC,CAAD,CAFhB;MAAA,IAGEE,aAAa,GAAGD,MAAM,KAAK,KAAK,CAAhB,GAAoB,CAApB,GAAwBA,MAH1C;MAAA,IAIEE,OAAO,GAAGH,KAAK,CAAC,CAAD,CAJjB;MAAA,IAKEI,aAAa,GAAGD,OAAO,KAAK,KAAK,CAAjB,GAAqB,CAArB,GAAyBA,OAL3C;;MAMAxC,UAAU,CAACtD,CAAX,IAAgB6F,aAAhB;MACAvC,UAAU,CAACrD,CAAX,IAAgB8F,aAAhB,CA7F8B,CA+F9B;;MACA,IAAIC,KAAK,GAAG3C,aAAa,CAAC7D,MAAd,IAAwB,EAApC;MAAA,IACEyG,KAAK,GAAGpH,cAAc,CAACmH,KAAD,EAAQ,CAAR,CADxB;MAAA,IAEEE,UAAU,GAAGD,KAAK,CAAC,CAAD,CAFpB;MAAA,IAGEE,WAAW,GAAGF,KAAK,CAAC,CAAD,CAHrB;;MAIA,IAAIG,YAAY,GAAG7G,WAAW,CAAC4G,WAAD,CAA9B;MACA,IAAIE,WAAW,GAAG9G,WAAW,CAAC2G,UAAD,CAA7B;MACA,IAAII,gBAAgB,GAAG1G,aAAa,CAAC0D,UAAD,EAAa8C,YAAb,CAApC;MACA,IAAIG,eAAe,GAAG3G,aAAa,CAAC8D,SAAD,EAAY2C,WAAZ,CAAnC,CAvG8B,CAyG9B;;MACA,IAAIG,aAAa,GAAG5H,aAAa,CAAC,EAAD,EAAKyE,aAAL,CAAjC,CA1G8B,CA4G9B;;;MACA,IAAIoD,WAAW,GAAGH,gBAAgB,CAACtG,CAAjB,GAAqBuG,eAAe,CAACvG,CAArC,GAAyCuF,YAA3D;MACA,IAAImB,WAAW,GAAGJ,gBAAgB,CAACrG,CAAjB,GAAqBsG,eAAe,CAACtG,CAArC,GAAyCwF,YAA3D,CA9G8B,CAgH9B;MACA;;MACA,SAASkB,0BAAT,CAAoCjF,OAApC,EAA6CC,OAA7C,EAAsD;QACpD,IAAIlB,CAAC,GAAGiD,SAAS,CAAC1D,CAAV,GAAc0B,OAAtB;QACA,IAAInB,CAAC,GAAGmD,SAAS,CAACzD,CAAV,GAAc0B,OAAtB;QACA,IAAIjB,CAAC,GAAGD,CAAC,GAAG6D,UAAZ;QACA,IAAI9D,CAAC,GAAGD,CAAC,GAAG8D,WAAZ;QACA,IAAIuC,QAAQ,GAAG9B,IAAI,CAAC+B,GAAL,CAASpG,CAAT,EAAYgE,WAAW,CAAC1B,IAAxB,CAAf;QACA,IAAI+D,QAAQ,GAAGhC,IAAI,CAAC+B,GAAL,CAAStG,CAAT,EAAYkE,WAAW,CAACxB,GAAxB,CAAf;QACA,IAAI8D,QAAQ,GAAGjC,IAAI,CAACkC,GAAL,CAAStG,CAAT,EAAY+D,WAAW,CAACE,KAAxB,CAAf;QACA,IAAIsC,QAAQ,GAAGnC,IAAI,CAACkC,GAAL,CAASxG,CAAT,EAAYiE,WAAW,CAACG,MAAxB,CAAf;QACA,OAAOE,IAAI,CAAC+B,GAAL,CAAS,CAAT,EAAY,CAACE,QAAQ,GAAGH,QAAZ,KAAyBK,QAAQ,GAAGH,QAApC,CAAZ,CAAP;MACD;;MACD,IAAII,6BAA6B,GAAGP,0BAA0B,CAACF,WAAD,EAAcC,WAAd,CAA9D,CA7H8B,CA+H9B;;MACA,IAAIS,kBAAkB,GAAGvH,aAAa,CAAC0D,UAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAtC;MACA,IAAI8D,iBAAiB,GAAGxH,aAAa,CAAC8D,SAAD,EAAY,CAAC,GAAD,EAAM,GAAN,CAAZ,CAArC;MACA,IAAI2D,kBAAkB,GAAGzH,aAAa,CAAC0D,UAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAtC;MACA,IAAIgE,iBAAiB,GAAG1H,aAAa,CAAC8D,SAAD,EAAY,CAAC,GAAD,EAAM,GAAN,CAAZ,CAArC;MACA,IAAI6D,QAAQ,GAAGlE,aAAa,CAACkE,QAAd,IAA0B,EAAzC;MACA,IAAIC,OAAO,GAAGD,QAAQ,CAACC,OAAvB;MAAA,IACEC,OAAO,GAAGF,QAAQ,CAACE,OADrB;MAAA,IAEEC,MAAM,GAAGH,QAAQ,CAACG,MAFpB;MAAA,IAGEC,MAAM,GAAGJ,QAAQ,CAACI,MAHpB;;MAIA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,GAAvB,EAA4B;QAC9C,IAAI,OAAOA,GAAP,KAAe,SAAnB,EAA8B;UAC5B,OAAOA,GAAP;QACD;;QACD,OAAOA,GAAG,IAAI,CAAd;MACD,CALD,CAzI8B,CAgJ9B;;;MACA,IAAIC,UAAJ;MACA,IAAIC,eAAJ;MACA,IAAIC,UAAJ;MACA,IAAIC,cAAJ;;MACA,SAASC,qBAAT,GAAiC;QAC/BJ,UAAU,GAAGpE,SAAS,CAACzD,CAAV,GAAcyG,WAA3B;QACAqB,eAAe,GAAGD,UAAU,GAAGzD,WAA/B;QACA2D,UAAU,GAAGtE,SAAS,CAAC1D,CAAV,GAAcyG,WAA3B;QACAwB,cAAc,GAAGD,UAAU,GAAG1D,UAA9B;MACD;;MACD4D,qBAAqB,GA3JS,CA6J9B;;MACA,IAAIC,WAAW,GAAGP,aAAa,CAACH,OAAD,CAA/B;MACA,IAAIW,MAAM,GAAG/B,WAAW,CAAC,CAAD,CAAX,KAAmBD,YAAY,CAAC,CAAD,CAA5C,CA/J8B,CAiK9B;;MACA,IAAI+B,WAAW,IAAI9B,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAlC,KAA0C0B,eAAe,GAAGtD,WAAW,CAACG,MAA9B,IAAwCpC,WAAW,CAACE,OAAZ,CAAoB2F,EAAtG,CAAJ,EAA+G;QAC7G,IAAIC,cAAc,GAAG5B,WAArB;;QACA,IAAI0B,MAAJ,EAAY;UACVE,cAAc,IAAIjE,WAAW,GAAGE,YAAhC;QACD,CAFD,MAEO;UACL+D,cAAc,GAAGnB,kBAAkB,CAAClH,CAAnB,GAAuBqH,iBAAiB,CAACrH,CAAzC,GAA6CwF,YAA9D;QACD;;QACD,IAAIkB,0BAA0B,CAACF,WAAD,EAAc6B,cAAd,CAA1B,IAA2DpB,6BAA/D,EAA8F;UAC5F1E,WAAW,CAACE,OAAZ,CAAoB2F,EAApB,GAAyB,IAAzB;UACA3B,WAAW,GAAG4B,cAAd;UACA9B,aAAa,CAAChH,MAAd,GAAuB,CAACY,aAAa,CAACiG,WAAD,EAAc,CAAd,CAAd,EAAgCjG,aAAa,CAACgG,YAAD,EAAe,CAAf,CAA7C,CAAvB;QACD,CAJD,MAIO;UACL5D,WAAW,CAACE,OAAZ,CAAoB2F,EAApB,GAAyB,KAAzB;QACD;MACF,CAhL6B,CAkL9B;;;MACA,IAAIF,WAAW,IAAI9B,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAlC,KAA0CyB,UAAU,GAAGrD,WAAW,CAACxB,GAAzB,IAAgCT,WAAW,CAACE,OAAZ,CAAoB6F,EAA9F,CAAJ,EAAuG;QACrG,IAAIC,eAAe,GAAG9B,WAAtB;;QACA,IAAI0B,MAAJ,EAAY;UACVI,eAAe,IAAInE,WAAW,GAAGE,YAAjC;QACD,CAFD,MAEO;UACLiE,eAAe,GAAGnB,kBAAkB,CAACpH,CAAnB,GAAuBmH,iBAAiB,CAACnH,CAAzC,GAA6CwF,YAA/D;QACD;;QACD,IAAIkB,0BAA0B,CAACF,WAAD,EAAc+B,eAAd,CAA1B,IAA4DtB,6BAAhE,EAA+F;UAC7F1E,WAAW,CAACE,OAAZ,CAAoB6F,EAApB,GAAyB,IAAzB;UACA7B,WAAW,GAAG8B,eAAd;UACAhC,aAAa,CAAChH,MAAd,GAAuB,CAACY,aAAa,CAACiG,WAAD,EAAc,CAAd,CAAd,EAAgCjG,aAAa,CAACgG,YAAD,EAAe,CAAf,CAA7C,CAAvB;QACD,CAJD,MAIO;UACL5D,WAAW,CAACE,OAAZ,CAAoB6F,EAApB,GAAyB,KAAzB;QACD;MACF,CAjM6B,CAmM9B;;;MACA,IAAIE,WAAW,GAAGb,aAAa,CAACJ,OAAD,CAA/B,CApM8B,CAsM9B;;MACA,IAAIkB,MAAM,GAAGrC,WAAW,CAAC,CAAD,CAAX,KAAmBD,YAAY,CAAC,CAAD,CAA5C,CAvM8B,CAyM9B;;MACA,IAAIqC,WAAW,IAAIpC,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAlC,KAA0C4B,cAAc,GAAGxD,WAAW,CAACE,KAA7B,IAAsCnC,WAAW,CAACE,OAAZ,CAAoBiG,EAApG,CAAJ,EAA6G;QAC3G,IAAIC,cAAc,GAAGnC,WAArB;;QACA,IAAIiC,MAAJ,EAAY;UACVE,cAAc,IAAItE,UAAU,GAAGE,WAA/B;QACD,CAFD,MAEO;UACLoE,cAAc,GAAGzB,kBAAkB,CAACnH,CAAnB,GAAuBsH,iBAAiB,CAACtH,CAAzC,GAA6CuF,YAA9D;QACD;;QACD,IAAIoB,0BAA0B,CAACiC,cAAD,EAAiBlC,WAAjB,CAA1B,IAA2DQ,6BAA/D,EAA8F;UAC5F1E,WAAW,CAACE,OAAZ,CAAoBiG,EAApB,GAAyB,IAAzB;UACAlC,WAAW,GAAGmC,cAAd;UACApC,aAAa,CAAChH,MAAd,GAAuB,CAACY,aAAa,CAACiG,WAAD,EAAc,CAAd,CAAd,EAAgCjG,aAAa,CAACgG,YAAD,EAAe,CAAf,CAA7C,CAAvB;QACD,CAJD,MAIO;UACL5D,WAAW,CAACE,OAAZ,CAAoBiG,EAApB,GAAyB,KAAzB;QACD;MACF,CAxN6B,CA0N9B;;;MACA,IAAIF,WAAW,IAAIpC,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAlC,KAA0C2B,UAAU,GAAGvD,WAAW,CAAC1B,IAAzB,IAAiCP,WAAW,CAACE,OAAZ,CAAoBmG,EAA/F,CAAJ,EAAwG;QACtG,IAAIC,eAAe,GAAGrC,WAAtB;;QACA,IAAIiC,MAAJ,EAAY;UACVI,eAAe,IAAIxE,UAAU,GAAGE,WAAhC;QACD,CAFD,MAEO;UACLsE,eAAe,GAAGzB,kBAAkB,CAACrH,CAAnB,GAAuBoH,iBAAiB,CAACpH,CAAzC,GAA6CuF,YAA/D;QACD;;QACD,IAAIoB,0BAA0B,CAACmC,eAAD,EAAkBpC,WAAlB,CAA1B,IAA4DQ,6BAAhE,EAA+F;UAC7F1E,WAAW,CAACE,OAAZ,CAAoBmG,EAApB,GAAyB,IAAzB;UACApC,WAAW,GAAGqC,eAAd;UACAtC,aAAa,CAAChH,MAAd,GAAuB,CAACY,aAAa,CAACiG,WAAD,EAAc,CAAd,CAAd,EAAgCjG,aAAa,CAACgG,YAAD,EAAe,CAAf,CAA7C,CAAvB;QACD,CAJD,MAIO;UACL5D,WAAW,CAACE,OAAZ,CAAoBmG,EAApB,GAAyB,KAAzB;QACD;MACF,CAzO6B,CA2O9B;;;MACAX,qBAAqB;MACrB,IAAIa,SAAS,GAAGrB,MAAM,KAAK,IAAX,GAAkB,CAAlB,GAAsBA,MAAtC;;MACA,IAAI,OAAOqB,SAAP,KAAqB,QAAzB,EAAmC;QACjC;QACA,IAAIf,UAAU,GAAGvD,WAAW,CAAC1B,IAA7B,EAAmC;UACjC0D,WAAW,IAAIuB,UAAU,GAAGvD,WAAW,CAAC1B,IAAxC;;UACA,IAAIO,UAAU,CAACtD,CAAX,GAAewE,WAAf,GAA6BC,WAAW,CAAC1B,IAAZ,GAAmBgG,SAApD,EAA+D;YAC7DtC,WAAW,IAAInD,UAAU,CAACtD,CAAX,GAAeyE,WAAW,CAAC1B,IAA3B,GAAkCyB,WAAlC,GAAgDuE,SAA/D;UACD;QACF,CAPgC,CASjC;;;QACA,IAAId,cAAc,GAAGxD,WAAW,CAACE,KAAjC,EAAwC;UACtC8B,WAAW,IAAIwB,cAAc,GAAGxD,WAAW,CAACE,KAA5C;;UACA,IAAIrB,UAAU,CAACtD,CAAX,GAAeyE,WAAW,CAACE,KAAZ,GAAoBoE,SAAvC,EAAkD;YAChDtC,WAAW,IAAInD,UAAU,CAACtD,CAAX,GAAeyE,WAAW,CAACE,KAA3B,GAAmCoE,SAAlD;UACD;QACF;MACF;;MACD,IAAIC,SAAS,GAAGrB,MAAM,KAAK,IAAX,GAAkB,CAAlB,GAAsBA,MAAtC;;MACA,IAAI,OAAOqB,SAAP,KAAqB,QAAzB,EAAmC;QACjC;QACA,IAAIlB,UAAU,GAAGrD,WAAW,CAACxB,GAA7B,EAAkC;UAChCyD,WAAW,IAAIoB,UAAU,GAAGrD,WAAW,CAACxB,GAAxC;;UACA,IAAIK,UAAU,CAACrD,CAAX,GAAesE,YAAf,GAA8BE,WAAW,CAACxB,GAAZ,GAAkB+F,SAApD,EAA+D;YAC7DtC,WAAW,IAAIpD,UAAU,CAACrD,CAAX,GAAewE,WAAW,CAACxB,GAA3B,GAAiCsB,YAAjC,GAAgDyE,SAA/D;UACD;QACF,CAPgC,CASjC;;;QACA,IAAIjB,eAAe,GAAGtD,WAAW,CAACG,MAAlC,EAA0C;UACxC8B,WAAW,IAAIqB,eAAe,GAAGtD,WAAW,CAACG,MAA7C;;UACA,IAAItB,UAAU,CAACrD,CAAX,GAAewE,WAAW,CAACG,MAAZ,GAAqBoE,SAAxC,EAAmD;YACjDtC,WAAW,IAAIpD,UAAU,CAACrD,CAAX,GAAewE,WAAW,CAACG,MAA3B,GAAoCoE,SAAnD;UACD;QACF;MACF,CAhR6B,CAkR9B;MACA;;;MACA,IAAIC,SAAS,GAAGvF,SAAS,CAAC1D,CAAV,GAAcyG,WAA9B;MACA,IAAIyC,UAAU,GAAGD,SAAS,GAAG3E,UAA7B;MACA,IAAI6E,QAAQ,GAAGzF,SAAS,CAACzD,CAAV,GAAcyG,WAA7B;MACA,IAAI0C,WAAW,GAAGD,QAAQ,GAAG9E,WAA7B;MACA,IAAIgF,UAAU,GAAG/F,UAAU,CAACtD,CAA5B;MACA,IAAIsJ,WAAW,GAAGD,UAAU,GAAG7E,WAA/B;MACA,IAAI+E,SAAS,GAAGjG,UAAU,CAACrD,CAA3B;MACA,IAAIuJ,YAAY,GAAGD,SAAS,GAAGhF,YAA/B;MACA,IAAIkF,OAAO,GAAG3E,IAAI,CAAC+B,GAAL,CAASoC,SAAT,EAAoBI,UAApB,CAAd;MACA,IAAIK,QAAQ,GAAG5E,IAAI,CAACkC,GAAL,CAASkC,UAAT,EAAqBI,WAArB,CAAf;MACA,IAAIK,OAAO,GAAG,CAACF,OAAO,GAAGC,QAAX,IAAuB,CAArC;MACA,IAAIE,UAAU,GAAGD,OAAO,GAAGV,SAA3B;MACA,IAAIY,MAAM,GAAG/E,IAAI,CAAC+B,GAAL,CAASsC,QAAT,EAAmBI,SAAnB,CAAb;MACA,IAAIO,SAAS,GAAGhF,IAAI,CAACkC,GAAL,CAASoC,WAAT,EAAsBI,YAAtB,CAAhB;MACA,IAAIO,OAAO,GAAG,CAACF,MAAM,GAAGC,SAAV,IAAuB,CAArC;MACA,IAAIE,UAAU,GAAGD,OAAO,GAAGZ,QAA3B;MACA7H,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACL,QAAD,EAAWuF,aAAX,CAAxE;MACArE,aAAa,CAAC;QACZV,KAAK,EAAE,IADK;QAEZC,OAAO,EAAE+E,WAAW,GAAG5B,OAFX;QAGZlD,OAAO,EAAE+E,WAAW,GAAGzB,OAHX;QAIZrD,MAAM,EAAEgI,UAAU,GAAG/E,OAJT;QAKZhD,MAAM,EAAEmI,UAAU,GAAG/E,OALT;QAMZnD,MAAM,EAAE+C,OANI;QAOZ9C,MAAM,EAAEkD,OAPI;QAQZjD,KAAK,EAAEwE;MARK,CAAD,CAAb;IAUD;EACF,CAjTqB,CAAtB;;EAkTA,IAAIyD,YAAY,GAAG,SAASA,YAAT,GAAwB;IACzC7H,aAAa,CAACM,OAAd,IAAyB,CAAzB;IACA,IAAIwH,EAAE,GAAG9H,aAAa,CAACM,OAAvB,CAFyC,CAIzC;;IACAyH,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAY;MACjC,IAAIjI,aAAa,CAACM,OAAd,KAA0BwH,EAA9B,EAAkC;QAChCvH,OAAO;MACR;IACF,CAJD;EAKD,CAVD,CApV+G,CAgW/G;;;EACA,IAAI2H,UAAU,GAAG,SAASA,UAAT,GAAsB;IACrCnI,aAAa,CAAC,UAAUoI,GAAV,EAAe;MAC3B,OAAO3L,aAAa,CAACA,aAAa,CAAC,EAAD,EAAK2L,GAAL,CAAd,EAAyB,EAAzB,EAA6B;QAC/C9I,KAAK,EAAE;MADwC,CAA7B,CAApB;IAGD,CAJY,CAAb;EAKD,CAND;;EAOAxC,eAAe,CAACqL,UAAD,EAAa,CAACnJ,SAAD,CAAb,CAAf;EACAlC,eAAe,CAAC,YAAY;IAC1B,IAAI,CAAC+B,IAAL,EAAW;MACTsJ,UAAU;IACX;EACF,CAJc,EAIZ,CAACtJ,IAAD,CAJY,CAAf;EAKA,OAAO,CAACkB,UAAU,CAACT,KAAZ,EAAmBS,UAAU,CAACR,OAA9B,EAAuCQ,UAAU,CAACP,OAAlD,EAA2DO,UAAU,CAACN,MAAtE,EAA8EM,UAAU,CAACL,MAAzF,EAAiGK,UAAU,CAACJ,MAA5G,EAAoHI,UAAU,CAACH,MAA/H,EAAuIG,UAAU,CAACF,KAAlJ,EAAyJiI,YAAzJ,CAAP;AACD"},"metadata":{},"sourceType":"module"}