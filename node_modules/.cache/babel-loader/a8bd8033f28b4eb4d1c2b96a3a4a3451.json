{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n  if (subscriptionDelay) {\n    return function (source) {\n      return new SubscriptionDelayObservable(source, subscriptionDelay).lift(new DelayWhenOperator(delayDurationSelector));\n    };\n  }\n\n  return function (source) {\n    return source.lift(new DelayWhenOperator(delayDurationSelector));\n  };\n}\n\nvar DelayWhenOperator = /*@__PURE__*/function () {\n  function DelayWhenOperator(delayDurationSelector) {\n    this.delayDurationSelector = delayDurationSelector;\n  }\n\n  DelayWhenOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  };\n\n  return DelayWhenOperator;\n}();\n\nvar DelayWhenSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(DelayWhenSubscriber, _super);\n\n  function DelayWhenSubscriber(destination, delayDurationSelector) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.delayDurationSelector = delayDurationSelector;\n    _this.completed = false;\n    _this.delayNotifierSubscriptions = [];\n    _this.index = 0;\n    return _this;\n  }\n\n  DelayWhenSubscriber.prototype.notifyNext = function (outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n    this.destination.next(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  };\n\n  DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n    this._error(error);\n  };\n\n  DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n    var value = this.removeSubscription(innerSub);\n\n    if (value) {\n      this.destination.next(value);\n    }\n\n    this.tryComplete();\n  };\n\n  DelayWhenSubscriber.prototype._next = function (value) {\n    var index = this.index++;\n\n    try {\n      var delayNotifier = this.delayDurationSelector(value, index);\n\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  };\n\n  DelayWhenSubscriber.prototype._complete = function () {\n    this.completed = true;\n    this.tryComplete();\n    this.unsubscribe();\n  };\n\n  DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n    subscription.unsubscribe();\n    var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n\n    if (subscriptionIdx !== -1) {\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n    }\n\n    return subscription.outerValue;\n  };\n\n  DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n    var notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      var destination = this.destination;\n      destination.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n  };\n\n  DelayWhenSubscriber.prototype.tryComplete = function () {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete();\n    }\n  };\n\n  return DelayWhenSubscriber;\n}(OuterSubscriber);\n\nvar SubscriptionDelayObservable = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SubscriptionDelayObservable, _super);\n\n  function SubscriptionDelayObservable(source, subscriptionDelay) {\n    var _this = _super.call(this) || this;\n\n    _this.source = source;\n    _this.subscriptionDelay = subscriptionDelay;\n    return _this;\n  }\n\n  SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  };\n\n  return SubscriptionDelayObservable;\n}(Observable);\n\nvar SubscriptionDelaySubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(SubscriptionDelaySubscriber, _super);\n\n  function SubscriptionDelaySubscriber(parent, source) {\n    var _this = _super.call(this) || this;\n\n    _this.parent = parent;\n    _this.source = source;\n    _this.sourceSubscribed = false;\n    return _this;\n  }\n\n  SubscriptionDelaySubscriber.prototype._next = function (unused) {\n    this.subscribeToSource();\n  };\n\n  SubscriptionDelaySubscriber.prototype._error = function (err) {\n    this.unsubscribe();\n    this.parent.error(err);\n  };\n\n  SubscriptionDelaySubscriber.prototype._complete = function () {\n    this.unsubscribe();\n    this.subscribeToSource();\n  };\n\n  SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  };\n\n  return SubscriptionDelaySubscriber;\n}(Subscriber);","map":{"version":3,"sources":["../../../src/internal/operators/delayWhen.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return function (source) {\n            return new SubscriptionDelayObservable(source, subscriptionDelay)\n                .lift(new DelayWhenOperator(delayDurationSelector));\n        };\n    }\n    return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };\n}\nvar DelayWhenOperator = /*@__PURE__*/ (function () {\n    function DelayWhenOperator(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    };\n    return DelayWhenOperator;\n}());\nvar DelayWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.delayDurationSelector = delayDurationSelector;\n        _this.completed = false;\n        _this.delayNotifierSubscriptions = [];\n        _this.index = 0;\n        return _this;\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        try {\n            var delayNotifier = this.delayDurationSelector(value, index);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n        this.unsubscribe();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        if (subscriptionIdx !== -1) {\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n        }\n        return subscription.outerValue;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            var destination = this.destination;\n            destination.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber));\nvar SubscriptionDelayObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subscriptionDelay = subscriptionDelay;\n        return _this;\n    }\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable));\nvar SubscriptionDelaySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.source = source;\n        _this.sourceSubscribed = false;\n        return _this;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.unsubscribe();\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber));\n//# sourceMappingURL=delayWhen.js.map\n"]},"metadata":{},"sourceType":"module"}