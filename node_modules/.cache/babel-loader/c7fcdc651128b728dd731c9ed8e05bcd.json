{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar utils = require('@motionone/utils');\n\nvar info = require('./info.cjs.js');\n\nvar index = require('./offsets/index.cjs.js');\n\nfunction measure(container) {\n  let target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : container;\n  let info = arguments.length > 2 ? arguments[2] : undefined;\n\n  /**\n   * Find inset of target within scrollable container\n   */\n  info.x.targetOffset = 0;\n  info.y.targetOffset = 0;\n\n  if (target !== container) {\n    let node = target;\n\n    while (node && node != container) {\n      info.x.targetOffset += node.offsetLeft;\n      info.y.targetOffset += node.offsetTop;\n      node = node.offsetParent;\n    }\n  }\n\n  info.x.targetLength = target === container ? target.scrollWidth : target.clientWidth;\n  info.y.targetLength = target === container ? target.scrollHeight : target.clientHeight;\n  info.x.containerLength = container.clientWidth;\n  info.y.containerLength = container.clientHeight;\n}\n\nfunction createOnScrollHandler(element, onScroll, info$1) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const axis = options.axis || \"y\";\n  return {\n    measure: () => measure(element, options.target, info$1),\n    update: time => {\n      info.updateScrollInfo(element, info$1, time);\n\n      if (options.offset || options.target) {\n        index.resolveOffsets(element, info$1, options);\n      }\n    },\n    notify: utils.isFunction(onScroll) ? () => onScroll(info$1) : scrubAnimation(onScroll, info$1[axis])\n  };\n}\n\nfunction scrubAnimation(controls, axisInfo) {\n  controls.pause();\n  controls.forEachNative((animation, _ref) => {\n    let {\n      easing\n    } = _ref;\n\n    var _a, _b;\n\n    if (animation.updateDuration) {\n      if (!easing) animation.easing = utils.noopReturn;\n      animation.updateDuration(1);\n    } else {\n      const timingOptions = {\n        duration: 1000\n      };\n      if (!easing) timingOptions.easing = \"linear\";\n      (_b = (_a = animation.effect) === null || _a === void 0 ? void 0 : _a.updateTiming) === null || _b === void 0 ? void 0 : _b.call(_a, timingOptions);\n    }\n  });\n  return () => {\n    controls.currentTime = axisInfo.progress;\n  };\n}\n\nexports.createOnScrollHandler = createOnScrollHandler;","map":{"version":3,"names":["Object","defineProperty","exports","value","utils","require","info","index","measure","container","target","x","targetOffset","y","node","offsetLeft","offsetTop","offsetParent","targetLength","scrollWidth","clientWidth","scrollHeight","clientHeight","containerLength","createOnScrollHandler","element","onScroll","info$1","options","axis","update","time","updateScrollInfo","offset","resolveOffsets","notify","isFunction","scrubAnimation","controls","axisInfo","pause","forEachNative","animation","easing","_a","_b","updateDuration","noopReturn","timingOptions","duration","effect","updateTiming","call","currentTime","progress"],"sources":["C:/Users/Joshua Doros/node_modules/@motionone/dom/dist/gestures/scroll/on-scroll-handler.cjs.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('@motionone/utils');\nvar info = require('./info.cjs.js');\nvar index = require('./offsets/index.cjs.js');\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node != container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n}\nfunction createOnScrollHandler(element, onScroll, info$1, options = {}) {\n    const axis = options.axis || \"y\";\n    return {\n        measure: () => measure(element, options.target, info$1),\n        update: (time) => {\n            info.updateScrollInfo(element, info$1, time);\n            if (options.offset || options.target) {\n                index.resolveOffsets(element, info$1, options);\n            }\n        },\n        notify: utils.isFunction(onScroll)\n            ? () => onScroll(info$1)\n            : scrubAnimation(onScroll, info$1[axis]),\n    };\n}\nfunction scrubAnimation(controls, axisInfo) {\n    controls.pause();\n    controls.forEachNative((animation, { easing }) => {\n        var _a, _b;\n        if (animation.updateDuration) {\n            if (!easing)\n                animation.easing = utils.noopReturn;\n            animation.updateDuration(1);\n        }\n        else {\n            const timingOptions = { duration: 1000 };\n            if (!easing)\n                timingOptions.easing = \"linear\";\n            (_b = (_a = animation.effect) === null || _a === void 0 ? void 0 : _a.updateTiming) === null || _b === void 0 ? void 0 : _b.call(_a, timingOptions);\n        }\n    });\n    return () => {\n        controls.currentTime = axisInfo.progress;\n    };\n}\n\nexports.createOnScrollHandler = createOnScrollHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}