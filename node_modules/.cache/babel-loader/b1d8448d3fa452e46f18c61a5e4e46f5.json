{"ast":null,"code":"import { isTextMessageEvent } from '../utils/events';\nexport var MatrixMessageType;\n\n(function (MatrixMessageType) {\n  MatrixMessageType[\"TEXT\"] = \"m.text\";\n})(MatrixMessageType || (MatrixMessageType = {}));\n\nexport class MatrixMessage {\n  constructor(type, sender, content, timestamp) {\n    this.type = type;\n    this.sender = sender;\n    this.content = content;\n    this.timestamp = timestamp;\n  }\n  /**\n   * Construct a message from a message event\n   *\n   * @param event\n   */\n\n\n  static from(event) {\n    if (isTextMessageEvent(event)) {\n      return new MatrixMessage(event.content.msgtype, event.sender, event.content.body, event.origin_server_ts);\n    } // for now only text messages are supported\n\n\n    return undefined;\n  }\n\n}","map":{"version":3,"sources":["../../../../src/matrix-client/models/MatrixMessage.ts"],"names":[],"mappings":"AAAA,SAAS,kBAAT,QAAmC,iBAAnC;AAGA,OAAA,IAAY,iBAAZ;;AAAA,CAAA,UAAY,iBAAZ,EAA6B;EAC3B,iBAAA,CAAA,MAAA,CAAA,GAAA,QAAA;AACD,CAFD,EAAY,iBAAiB,KAAjB,iBAAiB,GAAA,EAAA,CAA7B;;AAIA,OAAM,MAAO,aAAP,CAAoB;EAoBxB,WAAA,CACkB,IADlB,EAEkB,MAFlB,EAGkB,OAHlB,EAIkB,SAJlB,EAImC;IAHjB,KAAA,IAAA,GAAA,IAAA;IACA,KAAA,MAAA,GAAA,MAAA;IACA,KAAA,OAAA,GAAA,OAAA;IACA,KAAA,SAAA,GAAA,SAAA;EACd;EAxBJ;;;;AAIG;;;EACe,OAAJ,IAAI,CAAC,KAAD,EAAwB;IACxC,IAAI,kBAAkB,CAAC,KAAD,CAAtB,EAA+B;MAC7B,OAAO,IAAI,aAAJ,CACL,KAAK,CAAC,OAAN,CAAc,OADT,EAEL,KAAK,CAAC,MAFD,EAGL,KAAK,CAAC,OAAN,CAAc,IAHT,EAIL,KAAK,CAAC,gBAJD,CAAP;IAMD,CARuC,CAUxC;;;IACA,OAAO,SAAP;EACD;;AAlBuB","sourceRoot":"","sourcesContent":["import { isTextMessageEvent } from '../utils/events';\nexport var MatrixMessageType;\n(function (MatrixMessageType) {\n    MatrixMessageType[\"TEXT\"] = \"m.text\";\n})(MatrixMessageType || (MatrixMessageType = {}));\nexport class MatrixMessage {\n    constructor(type, sender, content, timestamp) {\n        this.type = type;\n        this.sender = sender;\n        this.content = content;\n        this.timestamp = timestamp;\n    }\n    /**\n     * Construct a message from a message event\n     *\n     * @param event\n     */\n    static from(event) {\n        if (isTextMessageEvent(event)) {\n            return new MatrixMessage(event.content.msgtype, event.sender, event.content.body, event.origin_server_ts);\n        }\n        // for now only text messages are supported\n        return undefined;\n    }\n}\n//# sourceMappingURL=MatrixMessage.js.map"]},"metadata":{},"sourceType":"module"}