{"ast":null,"code":"// TODO 6 - Call buy_ticket entrypoint in the Lottery contract by completing buyTicketOperation\nimport { tezos } from \"./tezos\"; // export const buyTicketOperation = async () => {\n//     try {\n//         const contract = await tezos.wallet.at(\"KT1FmveKbfKC9wSMTEjYYTT4ingVviTenYyh\");\n//         const op = await contract.methods.buy_ticket(1).send({\n//         amount: 1,\n//         mutez: false,\n//        })\n//        await op.confirmation(1);\n//     }\n//     catch(err) {\n//         throw err;\n//     }\n// };\n// TODO 10 - Call end_game entrypoint in the Lottery contract by completing endGameOperation\n// export const endGameOperation = async () => {\n//     try{\n//         const contract = await tezos.wallet.at(\"KT1FmveKbfKC9wSMTEjYYTT4ingVviTenYyh\");\n//         const random_number = Math.round(Math.random() * 1000000);\n//         const op = await contract.methods.end_game(random_number).send();\n//         await op.confirmation(1);\n//     }\n//     catch(err) {\n//         throw err;\n//     }\n// };","map":{"version":3,"names":["tezos"],"sources":["C:/Users/Joshua Doros/Desktop/Tezos/tezos-taquito-escrow/src/utils/operation.js"],"sourcesContent":["// TODO 6 - Call buy_ticket entrypoint in the Lottery contract by completing buyTicketOperation\r\nimport { tezos } from \"./tezos\"\r\n// export const buyTicketOperation = async () => {\r\n//     try {\r\n//         const contract = await tezos.wallet.at(\"KT1FmveKbfKC9wSMTEjYYTT4ingVviTenYyh\");\r\n//         const op = await contract.methods.buy_ticket(1).send({\r\n//         amount: 1,\r\n//         mutez: false,\r\n//        })\r\n//        await op.confirmation(1);\r\n//     }\r\n//     catch(err) {\r\n//         throw err;\r\n//     }\r\n// };\r\n\r\n// TODO 10 - Call end_game entrypoint in the Lottery contract by completing endGameOperation\r\n\r\n// export const endGameOperation = async () => {\r\n//     try{\r\n//         const contract = await tezos.wallet.at(\"KT1FmveKbfKC9wSMTEjYYTT4ingVviTenYyh\");\r\n//         const random_number = Math.round(Math.random() * 1000000);\r\n//         const op = await contract.methods.end_game(random_number).send();\r\n//         await op.confirmation(1);\r\n//     }\r\n//     catch(err) {\r\n//         throw err;\r\n//     }\r\n// };\r\n"],"mappings":"AAAA;AACA,SAASA,KAAT,QAAsB,SAAtB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}