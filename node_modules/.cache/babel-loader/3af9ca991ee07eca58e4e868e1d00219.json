{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Action } from './Action';\n\nvar AsyncAction = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(AsyncAction, _super);\n\n  function AsyncAction(scheduler, work) {\n    var _this = _super.call(this, scheduler, work) || this;\n\n    _this.scheduler = scheduler;\n    _this.work = work;\n    _this.pending = false;\n    return _this;\n  }\n\n  AsyncAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (this.closed) {\n      return this;\n    }\n\n    this.state = state;\n    var id = this.id;\n    var scheduler = this.scheduler;\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.pending = true;\n    this.delay = delay;\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n    return this;\n  };\n\n  AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  };\n\n  AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n\n    clearInterval(id);\n    return undefined;\n  };\n\n  AsyncAction.prototype.execute = function (state, delay) {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n\n    var error = this._execute(state, delay);\n\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  };\n\n  AsyncAction.prototype._execute = function (state, delay) {\n    var errored = false;\n    var errorValue = undefined;\n\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  };\n\n  AsyncAction.prototype._unsubscribe = function () {\n    var id = this.id;\n    var scheduler = this.scheduler;\n    var actions = scheduler.actions;\n    var index = actions.indexOf(this);\n    this.work = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  };\n\n  return AsyncAction;\n}(Action);\n\nexport { AsyncAction };","map":{"version":3,"sources":["../../../src/internal/scheduler/AsyncAction.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Action } from './Action';\nvar AsyncAction = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    };\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n//# sourceMappingURL=AsyncAction.js.map\n"]},"metadata":{},"sourceType":"module"}