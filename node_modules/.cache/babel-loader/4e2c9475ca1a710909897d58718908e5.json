{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler) {\n  if (scheduler === void 0) {\n    scheduler = async;\n  }\n\n  var absoluteDelay = isDate(delay);\n  var delayFor = absoluteDelay ? +delay - scheduler.now() : Math.abs(delay);\n  return function (source) {\n    return source.lift(new DelayOperator(delayFor, scheduler));\n  };\n}\n\nvar DelayOperator = /*@__PURE__*/function () {\n  function DelayOperator(delay, scheduler) {\n    this.delay = delay;\n    this.scheduler = scheduler;\n  }\n\n  DelayOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  };\n\n  return DelayOperator;\n}();\n\nvar DelaySubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(DelaySubscriber, _super);\n\n  function DelaySubscriber(destination, delay, scheduler) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.delay = delay;\n    _this.scheduler = scheduler;\n    _this.queue = [];\n    _this.active = false;\n    _this.errored = false;\n    return _this;\n  }\n\n  DelaySubscriber.dispatch = function (state) {\n    var source = state.source;\n    var queue = source.queue;\n    var scheduler = state.scheduler;\n    var destination = state.destination;\n\n    while (queue.length > 0 && queue[0].time - scheduler.now() <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay_1);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  };\n\n  DelaySubscriber.prototype._schedule = function (scheduler) {\n    this.active = true;\n    var destination = this.destination;\n    destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n      source: this,\n      destination: this.destination,\n      scheduler: scheduler\n    }));\n  };\n\n  DelaySubscriber.prototype.scheduleNotification = function (notification) {\n    if (this.errored === true) {\n      return;\n    }\n\n    var scheduler = this.scheduler;\n    var message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  };\n\n  DelaySubscriber.prototype._next = function (value) {\n    this.scheduleNotification(Notification.createNext(value));\n  };\n\n  DelaySubscriber.prototype._error = function (err) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n    this.unsubscribe();\n  };\n\n  DelaySubscriber.prototype._complete = function () {\n    this.scheduleNotification(Notification.createComplete());\n    this.unsubscribe();\n  };\n\n  return DelaySubscriber;\n}(Subscriber);\n\nvar DelayMessage = /*@__PURE__*/function () {\n  function DelayMessage(time, notification) {\n    this.time = time;\n    this.notification = notification;\n  }\n\n  return DelayMessage;\n}();","map":{"version":3,"sources":["../../../src/internal/operators/delay.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    var absoluteDelay = isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };\n}\nvar DelayOperator = /*@__PURE__*/ (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\nvar DelaySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.delay = delay;\n        _this.scheduler = scheduler;\n        _this.queue = [];\n        _this.active = false;\n        _this.errored = false;\n        return _this;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        var destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    };\n    return DelaySubscriber;\n}(Subscriber));\nvar DelayMessage = /*@__PURE__*/ (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n//# sourceMappingURL=delay.js.map\n"]},"metadata":{},"sourceType":"module"}